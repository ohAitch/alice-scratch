#!/usr/bin/env Œ∂‚ÇÇ

# file:/~/code/scratch/.abandoned/aide/how%20arithlang%20really%20works
// file:///~/ali/github/scratch/#archive/README.txt
// bug: line wrapping doesn't work

// ---------------------------------- util ---------------------------------- //

argv ‚Üê process.argv.slice(2)
stdout ‚Üê Œª(Œπ){process.stdout.write(Œπ)}
remove_ansi_colors ‚Üê Œª(Œπ){‚Ü© Œπ.replace(/\[.+?m/g,'')}
diy_stdin ‚Üê f=>{ process.stdin.setRawMode(true); process.stdin.resume().setEncoding('utf8').on('data',key=>{ f(key) === -1 && process.stdin.pause() }) }
IS_URL ‚Üê /^((https?|file):\/\/|mailto:)/.Œª
FIND_URL ‚Üê /\b((https?|file):[‚ü©\/][‚ü©\/](?:\\ |\S)+|mailto:[^\s\\@]+@[^\s\\@]+)/.Œª
postredirect_url ‚Üê Œª(Œπ){‚Ü© Œπ
	.replace(/^http:\/\/google.com\//,'http://www.google.com/')
	.replace(/^http:/,'https:') }
as_url ‚Üê Œª(Œπ){t‚Üê;
	‚Ü© IS_URL(Œπ)? encodeURI(Œπ) :
	(t=FIND_URL(Œπ))? encodeURI(t[1].replace(/‚ü©/g,'/').replace(/\\ /g,' ')) :
		"http://google.com/search?q="+encodeURIComponent(Œπ) }
height ‚Üê Œª(Œπ){‚Ü© remove_ansi_colors(Œπ).split('\n').map(Œª(Œπ){‚Ü© 1+floor(Œπ.length/80)}).reduce(Œª(a,b){‚Ü©a+b},0)}

// ----------------------------- rigid_interface ---------------------------- //

rigid_interface ‚Üê (Œª(){
	PROMPT ‚Üê '[30;47m>[0m '
	PREVIEW_PROMPT ‚Üê '[30;47m:[0m'
	PREVIEW_MORE_PROMPT ‚Üê '[30;47m.[0m [30;47m.[0m [30;47m.[0m'
	DATA_FILE ‚Üê '~/ali/github/scratch/prentice/~:.prentice'

	var Œî = { // data
		line:'', pos:0,
		preview:null,
		}

	print ‚Üê Œª(‚Ä¶a){stdout('[0G[2K'+(a.length <= 1 && a[0] == null? '' : sprint(a)+'\n')+PROMPT+Œî.line); pos_set()}
	preview ‚Üê Œª(Œπ){
		if (Œπ === null) t ‚Üê null
		else if (height(Œπ) > 20) {t ‚Üê Œπ.split('\n'); r ‚Üê []; while (height(r.join('\n')) <= 20) r.push(t.pop()); r.pop(); t ‚Üê PREVIEW_MORE_PROMPT+'\n'+r.reverse().join('\n')}
		else t ‚Üê PREVIEW_PROMPT+'\n'+Œπ
		Œî.preview === t || (hide(), Œî.preview = t, show())
		}
	pos_set ‚Üê Œª(Œπ){arguments.length === 1 && (Œî.pos = Œπ); stdout('['+(1+Œî.pos+remove_ansi_colors(PROMPT).length)+'G')}
	line_splice ‚Üê Œª(i,del,Œπ){Œî.pos === i || pos_set(i); no_set ‚Üê Œî.pos === Œî.line.length; Œî.line = Œî.line.slice(0,Œî.pos)+Œπ+Œî.line.slice(Œî.pos+del); stdout((del-Œπ.length>0?'[K':'')+Œî.line.slice(Œî.pos)); Œî.pos += Œπ.length; no_set || pos_set()}
	on_key ‚Üê Œª(key){line_a ‚Üê Œî.line; key = key.replace(/\r/g,'\n'); switch (key) {default:
		/^[ -~¬±-¬≥¬π ∞- ∏À°-À£Œë-Œ°Œ£-œâ·¥¨-·µõ·µ¢-·µ•·∂ú·∂†·∂ª‚Å∞‚Å±‚Å¥-‚Çé‚Çê-‚Çì‚Çï-‚Çú‚Ü©]+$/.Œª(key)? line_splice(Œî.pos,0,key) :
			on_unknown_key(key)
		break; case /* ^c */ '\x03': hide(); ‚Ü© -1
		break; case /* ‚å´  */ '\x7f': Œî.pos > 0 && line_splice(Œî.pos-1,1,'')
		break; case /* ‚åò‚å´ */ '\x15': line_splice(0,Œî.pos,'')
		break; case /* ‚Üê  */ '[D': Œî.pos > 0 && pos_set(Œî.pos-1)
		break; case /* ‚Üí  */ '[C': Œî.pos < Œî.line.length && pos_set(Œî.pos+1)
		break; case /* ‚åò‚Üê */ '\x01': pos_set(0)
		break; case /* ‚åò‚Üí */ '\x05': pos_set(Œî.line.length)
		break; case /* ‚á•  */ '\t': on_tab(Œî.line,Œî.pos,line_splice)
		break; case /* ‚Ü©  */ '\n':
			if (Œî.line === '') {stdout('<reboot>\n\n'); process.exitCode = 44; process.exit()} // hack
			preview(null); Œî.line = ''; Œî.pos = 0; stdout('\n'+PROMPT); do_command(line_a); ‚Ü©
		}; line_a === Œî.line || do_command('<pre> '+Œî.line) }

	show ‚Üê Œª(){print(Œî.preview)}
	hide ‚Üê Œª(){stdout(Œî.preview === null? '[0G[2K' : '['+(height(Œî.preview)+height(PROMPT+Œî.line)-1)+'A[0G[J')}
	start ‚Üê Œª(){
		t ‚Üê fs(DATA_FILE).$; t && _(Œî).assign(_(JSON.parse(t)).pick(_.keys(Œî)))
		process.on('exit',Œª(){fs(DATA_FILE).$ = JSON.stringify(Œî,null,'  ')})
		show(); diy_stdin(on_key) }
	‚Ü© {start,print,preview} })()

// -------------------------------------------------------------------------- //

on_unknown_key ‚Üê Œª(key){print('got '+util.inspect(key).replace(/\\u00/g,'\\x'))}

on_tab ‚Üê Œª(line,pos,line_splice){
	if (pos !== line.length) {print('tab completion is scary if not at the end of a line'); ‚Ü©}
	t ‚Üê line.slice(0,pos).match(/\S*$/)[0]
	//! potentially should preview
	Œπs ‚Üê /* if is filename context */ fs('.').find('>').map(Œª(Œπ){‚Ü© Œπ.slice(2)})
	if (line === t) Œπs.push('ls','chrome','echo','dl')
	Œπs = Œπs.filter(Œª(Œπ){‚Ü© Œπ.slice(0,t.length) === t})
	if (Œπs.length > 1) {print('found',Œπs.length,'Œπs'); ‚Ü©}
	if (Œπs.length === 0) {print('no Œπs found'); ‚Ü©}
	line_splice(pos - t.length, t.length, Œπs[0]+' ')
	}

do_command ‚Üê Œª(Œπ){act‚Üê; Œπ = Œπ.replace(/^(?:<pre> )?/,Œª(Œπ){act = !Œπ; ‚Ü© ''})
	P ‚Üê !act && Œª(Œπ){P = null; rigid_interface.preview(Œπ)}
	t ‚Üê /^(\S*) ?(.*)/.Œª(Œπ.trim()); a ‚Üê t[1]; b ‚Üê t[2]
	if (a === 'dl') {
		if (/^http:\/\/youtu\.be\/[^?#]+$/.Œª(b)) {
			if (!act) {
				P('would download 1 mp3 from youtube')
			} else {
				// t ‚Üê 'youtube-dl --extract-audio --audio-format mp3 -o ~/Downloads/'+sh_encode(basename_encode('%(title)s '+b+' .%(ext)s'))+' '+sh_encode(b)+'; x'
				t ‚Üê sh`youtube-dl --extract-audio --audio-format mp3 -o ${œÜ`~/Downloads/%(title)s ${b} .%(ext)s`} ${b}; x`
				osa('tell app "terminal" \n do script '+osa_encode(t)+' \n activate \n end tell')
			}
		}
	} else if ((a === 'l' || a === 'ls') && b === '') {
		;(act? print : P)(sh·µ•`cd ${process.cwd()}; . ~/.bashrc; echo "$green$(,)$reset"; CLICOLOR_FORCE=t l`)
	} else if (a === 'chrome') {
		t ‚Üê b? as_url(b) : 'chrome:newtab'
		!act?
			P(t) :
			osa('tell app "chrome" to open location '+osa_encode(postredirect_url(t)))
	} else if (a === 'echo') {
		;(act? print : P)(b)
	}
	// osa·µ•('tell app "chrome" to get {URL,title} of tabs of windows')
	P&&P(null)
	}

/* todo: hmmmm
we could go through the process of _, with an eye for paul's model https://medium.com/ai-control/safe-automated-assistants-aa69edd46a57 
	fetching bookmarks
		Œπ ‚Üê "~/Library/Application Support/Google/Chrome/Default/Bookmarks"
		Œπ = JSON.parse(fs(Œπ).$)
		Œπ = Œπ.roots.bookmark_bar.children
		Œπ = (Œª Œª(Œπ){‚Ü©
			Array.isArray(Œπ)?
				Œπ.map(Œª).join("\n") :
			Œπ.children?
				(Œπ.name+"\n"+Œπ.children.map(Œª).join("\n")).replace(/\n/g,"\n  ") :
			Œπ.url === "http://transparent-favicon.info/favicon.ico"?
				Œπ.name :
			Œπ.url?
				(!Œπ.name || Œπ.url === Œπ.name? Œπ.url : Œπ.name+" "+Œπ.url) :
				JSON.stringify(Œπ)})(Œπ)
		child_process.spawn('bash',['-c','. ~/.bashrc; sb']).stdin.end(Œπ)
	fetching spotify tracks
	the song I'm listening to, crop it at 3:11 (think of me ‚àà select critchpop)
	mv E\t Fate Stay:Night - Emiya#0.mp3
		mv E\t "Fate Stay:Night - Emiya#0.mp3"
	crop Fate\t
		// broken! ffmpeg exits too quickly.
		// ah, don't overwrite the original file
		Œπ ‚Üê 'Fate Stay:Night - Emiya#0.mp3'
		to ‚Üê 389 // 6:29
		bash("cp "+sh_encode(Œπ)+" "+sh_encode(Œπ)+".orig; . ~/.bashrc; del "+sh_encode(Œπ)+".orig; ffmpeg -y -ss 0 -t "+to+" -i "+sh_encode(Œπ)+" -acodec copy "+sh_encode(Œπ))
	lyrics of current song
		Œπ ‚Üê osa·µ•('tell app "spotify" to get {artist,album,name} of current track')
		osa('tell app "chrome" to open location '+osa_encode(postredirect_url(as_url(Œπ.join(' ')+' lyrics'))))
	download these songs
		Limozeen - Because, It's Midnite                              http://youtu.be/jsArcMMqbhw
		Clint Mansell - Together We Will Live Forever (The Last Man)  http://youtu.be/cDAO4Ql1cLU
		Homestuck - Cascade                 ‚úì‚úì                        http://homestuck.bandcamp.com/track/cascade
		Steve Conte - Call Me Call Me                                 http://youtu.be/AiumBwlr-CU
		Apollo Sunshine - We Are Born When We Die                     http://youtu.be/GKAgo-g5V2E
		Danger - 13h12                                                http://youtu.be/-gBCVeisp6M
		Phantom Power Music - Overpowered                             http://youtu.be/VBlaWzMiZYw
		B-Movie - Nowhere Girl (Adam Freeland mix)                    http://youtu.be/LIRdDl9Ba98
		Origa - Inner Universe              ‚úì‚úì                        http://youtu.be/EIVgSuuUTwQ
		I Am Kloot - Avenue Of Hope                                   http://youtu.be/9hZftgET4GI
		Lana Del Rey - Born To Die (Gemini remix)                     http://youtu.be/awaz1aNTNL8
		Johnossi - Maverick                                           http://youtu.be/ZcM7lbsnAr4
		Porcupine Tree - The Sky Moves Sideways                       http://youtu.be/590BYwVuC_E
		Vivien Chebbah - Imperia                                      http://youtu.be/qyOKGKisGMs
		Donna Burke - Sins Of The Father    ‚úì‚úì                        http://youtu.be/GXs9V4x0W2E
*/

// do_user_command ‚Üê Œª(Œπ){
// 	if (Math.random() < 0.01) {

// 	}
// }

// global.primitive = {eval: Œª(Œπ){eval(Œπ)}, print}
// do_command_ ‚Üê Œª(Œπ){t‚Üê;
// 	if ((t=Œπ.match(/^(\S+) ?([^]*)/)) && primitive[t[1]]) primitive[t[1]](t[2])
// 	else predict_sequence(Œπ).map(do_command_)
// 	}

// predict_sequence ‚Üê Œª(Œπ){
// 	‚Ü© ['print hello world']
// 	// [this] guesses what the value F(Q) = [Q1, Q2, ‚Ä¶, Qk] would have been, if you had been asked to enter training data and Q* = Q had been chosen. It then executes each instruction Q1, Q2, ‚Ä¶, Qk.
// 	}

// if (argv[0] === '2') {global.__SPECIAL__ = do_user_command; Œ∂2_repl_start()}
// // else if (argv.length) do_command(argv.join(' ')+'\n')
// else
{print = rigid_interface.print; rigid_interface.start()}
