# for:
# E.Property = ∪( ,§`obj × id -> place`
# 	,∋( §`-> 🔒 × hide` ,=> [✗,✓] )
# 	,∋( §`-> host` ,(obj,id,place,🔒,hide)=> Set( Object.getOwnPropertyDescriptors(obj)[id], Object.getOwnPropertyDescriptor(obj,id), { ,configurable:!🔒 ,enumerable:!hide } …← (place) ).Just )

fn_wrap_lits ← f=> code=> code.eval_in_lexical_env('('+ζ_parse(code+'').map(ι=> ι.T==='shebang'? '' : ι.T==='string'||ι.T==='regex'? f(ι.ι) : ι ).join('')+')')

§ ← (=>{
	P ← require_new(φ`~/code/scratch/fast-parse/parsimmon.ζ`)
	Any ← =>Any; Any = ‘lexical_env=>{
		unit ← P.alt([ ,/[A-Za-z🔒ι]+/ ,P([ '[',Any,']' ]).map(ι=> ι[1]) ])
		↩ [ '.','×','+','->' ].fold(P.build_op,unit) }
		|> ( fn_wrap_lits(ι=> String.raw`P(${ι}).skip(/\s*/)`) )()
	↩ ι=>{ι+=''
		ι = Any.parse(ι)
		Tarr(ι)
		} })()
