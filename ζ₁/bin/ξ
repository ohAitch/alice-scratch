#!/usr/bin/env node
var fs = require("fs");
var path = require("path");
var _ = require("underscore");
var repr_js = function(v) {return ((typeof v.s==="string")? v.s :
		((typeof v.v==="string")? (("\""+v.v.replace("\\",("\\"+"\\")).replace("\"","\\\"").replace("\n","\\n"))+"\"") :
		((v.v!==undefined)? v.v :
		((v[0].s==="ξ/object")? (("{"+v.slice(1).map(function(v) {return ((repr_js(v[0])+":")+repr_js(v[1]))}).join(",\n			"))+"}") :
		((v[0].s==="ξ/array")? (("["+v.slice(1).map(repr_js).join(","))+"]") :
		((v[0].s==="ξ/member_bare")? ((repr_js(v[1])+".")+repr_js(v[2])) :
		((v[0].s==="ξ/member_val")? (((repr_js(v[1])+"[")+repr_js(v[2]))+"]") :
		((v[0].s==="ξ/JS_typeof")? ("typeof "+repr_js(v[1])) :
		((v[0].s==="ξ/return")? ("return "+repr_js(v[1])) :
		((v[0].s==="ξ/throw")? ("throw "+repr_js(v[1])) :
		((v[0].s==="ξ/JS_NOT")? ("!"+repr_js(v[1])) :
		((v[0].s==="ξ/JS_AND")? (((("("+repr_js(v[1]))+"&&")+repr_js(v[2]))+")") :
		((v[0].s==="ξ/JS_OR")? (((("("+repr_js(v[1]))+"||")+repr_js(v[2]))+")") :
		((v[0].s==="ξ/JS_>")? (((("("+repr_js(v[1]))+">")+repr_js(v[2]))+")") :
		((v[0].s==="ξ/=")? (((("("+repr_js(v[1]))+"===")+repr_js(v[2]))+")") :
		((v[0].s==="ξ/≠")? (((("("+repr_js(v[1]))+"!==")+repr_js(v[2]))+")") :
		((v[0].s==="ξ/assign")? (((("("+repr_js(v[1]))+" = ")+repr_js(v[2]))+")") :
		((v[0].s==="ξ/fn")? (((("function("+v[1].map(repr_js).join(","))+") {")+repr_js(v[2]))+"}") :
		((v[0].s==="ξ/do_s")? (("{"+v.slice(1).map(repr_js).join(";\n	"))+"}") :
		((v[0].s==="ξ/JS_if_e")? (((((("("+repr_js(v[1]))+"? ")+repr_js(v[2]))+" :\n		")+repr_js(v[3]))+")") :
		((v[0].s==="ξ/JS_if_s")? (((("if ("+repr_js(v[1]))+") ")+repr_js(v[2]))+((v.length===3)? "" :
		("\n	else "+repr_js(v[3])))) :
		((v[0].s==="ξ/JS_while_s")? ((("while ("+repr_js(v[1]))+") ")+repr_js(v[2])) :
		((v[0].s==="ξ/JS_VAR")? ((("var "+repr_js(v[1]))+" = ")+repr_js(v[2])) :
		((v[0].s==="ξ/JS_+")? (((("("+repr_js(v[1]))+"+")+repr_js(v[2]))+")") :
		((v[0].s==="ξ/JS_instanceof")? (((("("+repr_js(v[1]))+" instanceof ")+repr_js(v[2]))+")") :
		(((repr_js(v[0])+"(")+v.slice(1).map(repr_js).join(","))+")"))))))))))))))))))))))))))};
var repr_js_file = function(v) {return ("#!/usr/bin/env node\n"+v.map(repr_js).join(";\n"))};
var η_s = function(in_) {return repr_js_file(in_)};
(module.exports = η_s)