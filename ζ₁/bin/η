#!/usr/bin/env node
var fs = require("fs");
var path = require("path");
var _ = require("underscore");
var macros = {"η/typeof_object":function(v) {return [{s:"ξ/="},[{s:"ξ/JS_typeof"},v],{v:"object"}]},
			"η/typeof_boolean":function(v) {return [{s:"ξ/="},[{s:"ξ/JS_typeof"},v],{v:"boolean"}]},
			"η/typeof_number":function(v) {return [{s:"ξ/="},[{s:"ξ/JS_typeof"},v],{v:"number"}]},
			"η/typeof_string":function(v) {return [{s:"ξ/="},[{s:"ξ/JS_typeof"},v],{v:"string"}]},
			"η/typeof_function":function(v) {return [{s:"ξ/="},[{s:"ξ/JS_typeof"},v],{v:"function"}]},
			"η/member":function(o,m) {return (((typeof m.v==="string")&&m.v.match((/^\w+$/)))? [{s:"ξ/member_bare"},o,{s:m.v}] :
		[{s:"ξ/member_val"},o,m])},
			"η/+":function(a,b) {return [{s:"ξ/JS_+"},a,b]},
			"η/~":function(a,b) {return [{s:"ξ/JS_+"},a,b]},
			"η/fn":function(params) {{var args = Array.prototype.slice.call(arguments,0).slice(1);
	return [{s:"ξ/fn"},params,((args.length===1)? args[0] :
		[{s:"ξ/do_s"}].concat(args))]}},
			"η/args":function() {return [[{s:"ι"},[{s:"ι"},[{s:"ι"},{s:"Array"},{v:"prototype"}],{v:"slice"}],{v:"call"}],{s:"arguments"},{v:0}]}};
(macros["ι"] = macros["η/member"]);
var macro_expand = function(v) {{Array.prototype.slice.call(arguments,0);
	if ((v instanceof Array)) {while (macros[(v[0]? v[0].s :
		undefined)]) (v = macros[v[0].s].apply(null,v.slice(1)));
	return v.map(macro_expand)}
	else return v}};
var η_s = function(in_) {return macro_expand(in_).slice(1)};
(module.exports = η_s)