#!/usr/bin/env ζ₂
arg ← {ι: process.argv[2]}

diy_stdin ← λ(f){process.stdin.setRawMode(true); process.stdin.resume().setEncoding('utf8').on('data',λ(key){f(key) === -1 && process.stdin.pause()})} //! hacky copypaste

gen ← λ(ι){name←;
	t ← multiline(λ(){/*
		// ==UserScript==
		// @name        NAME
		REST
		// @require     FILE
		// @grant       none
		// ==/UserScript==
		*/})
		.replace('NAME',name=path.basename(ι,'.js'))
		.replace('REST',fs(ι).$.match(/^(?:\/\/ (?:@r|@m).*\n)+/)[0].trim())
		.replace('FILE','file://'+fs(ι).resolve())
	user_js ← '/tmp/userscript_'+Math.random().toString(36).slice(2,10)+'.user.js'
	fs(user_js).$ = t
	t ← λ(){osa('tell application "chrome" to open location '+osa_encode('file://'+user_js))}
	↩ [name, t]}
	
if (arg.ι) gen(arg.ι)[1]()
else {
	ιs ← fs('.').find('>').filter(λ(ι){↩ /\.js$/.λ(ι)}).map(gen)
	print('press any key to install')
	t ← λ*(){for(;;){
		if (!ιs.length) ↩ -1
		ι ← ιs.shift()
		print('  '+ι[0]); yield
		ι[1]()
		}}(); t.next()
	diy_stdin(λ(key){↩ key==='\x03'? -1 : t.next().value})
	}
