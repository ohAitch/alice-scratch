#!/usr/bin/env node

# hey, if you're gonna break this, keep a previous stable version ready this time. weve spent entirely too much time rescuing our configurations.

# odd synonym: k, name(, id)(, i?)

############################### as for a prelude ###############################
_ ‚Üê require('underscore')
_.mixin({
'<-':Œª(‚Ä¶a){‚Ü© @ .assign (‚Ä¶a) },
})
meta_0 ‚Üê o=> new Map( [‚Ä¶Object.getOwnPropertyNames(o),‚Ä¶Object.getOwnPropertySymbols(o)].map(Œπ=> [Œπ,Object.getOwnPropertyDescriptor(o,Œπ)] ) )
define_properties_in ‚Üê (o,names,Œπ)=>{ t ‚Üê o; for(var k of names.slice(0,-1)) t = (t[k] ||( t[k] = {} )); t[names[names.length-1]] = Œπ; ‚Ü© o }
Œª Descriptor(Œπ){ _(@) <- (Œπ) }
assign_properties_in ‚Üê (o,Œπ)=>{ [‚Ä¶meta_0(Œπ)].forEach(([k,{value:Œπ}])=> Œπ instanceof Descriptor? def(o,k,Œπ) : assign_properties_in(o[k] ||( o[k] = {} ),Œπ) ); ‚Ü© o }

########################## local metaprogramming utils #########################
properties_tree_formalify ‚Üê Œπ=>
	_(_(Œπ).map((Œπ,names)=> genex_simple(names).map(k=> [k,Œπ]))).flatten(true)
		.reduce((r,[name,Œπ])=> define_properties_in(r,
			name.split('.').map(Œπ=>{t‚Üê; ‚Ü© (t=Œπ.match(/^@@(.*)/))? Symbol[t[1]] : Œπ }),
			new Descriptor( Tfun(Œπ)? { value:Œπ, enumerable:true } : Œπ )
			), {})

# mixin_forever ‚Üê (to,from)=>{}
# mixin_forever_informal ‚Üê (to,from)=>{}
E_ ‚Üê {}
patched ‚Üê new Set([E_,global])
E ‚Üê new Proxy({},{ # exports
	# get(           self,k){  },
	# getOwnPropertyDescriptor()
	set(           self,k,Œπ){ [‚Ä¶patched].forEach(o=> o[k] = Œπ ) },
  defineProperty(self,k,Œπ){ [‚Ä¶patched].forEach(o=> def(o,k,Œπ)); ‚Ü© true },
	})
assign_properties_in_E_informal ‚Üê Œπ=>{ Œπ = properties_tree_formalify(Œπ); [‚Ä¶patched].forEach(o=> assign_properties_in(o,Œπ)) }
module.exports = to=>{ patched.has(to) || ( cn.log('\x1b[34m[Œ∂]\x1b[0m patching'), cn.log(Error('<stack>').stack), patched.add(to), assign_properties_in(to,E_) ) }

############################### as for a prelude ###############################
E.meta_0 = meta_0

E.def = (o,name,Œπ)=>{
	Tfun(Œπ) &&( Œπ = lazy(name,Œπ) )
	'configurable' in Œπ ||( Œπ.configurable = true )
	'value' in Œπ?
		'writable' in Œπ ||( Œπ.writable = true )
		: 'set' in Œπ ||( Œπ.set = Œª(Œπ){ def(@,name,{ value:Œπ, enumerable:true, }) } )
	‚Ü© Object.defineProperty(o,name,Œπ) } # = ‚Ü© o
lazy ‚Üê (name,Œπ)‚áí { get(){‚Ü© @[name] = Œπ() } }

E.require_proto_assign = ()=>()=>{
	done ‚Üê new Set()
	assign_me ‚Üê []
	r ‚Üê (names,f)=>{ !done.size || ‚ÄΩ; assign_me.push([ Tarr(names)? names : [names], f ]) }
	r.declare = Œπ=>{
		name ‚Üê Œπ.constructor.name || ‚ÄΩ('declared object has no constructor name')
		found ‚Üê false
		done.has(name) ||( done.add(name), assign_me.forEach(([names,f])=>{ names.length===1 || ‚ÄΩ; if (names[0]===name){ found = true; f(Œπ.constructor) } }) )
		found || ‚ÄΩ('nothing added to prototype for '+name)
		}
	‚Ü© r }
proto_assign ‚Üê require_proto_assign()()

E.catch_union = f=>{ try{ r ‚Üê f(); bad ‚Üê T.Error(r); if (!bad) ‚Ü© r }catch(e){ r ‚Üê e; T.Error(r) || ‚ÄΩ; ‚Ü© r }; bad && ‚ÄΩ }
E.catch_Œπ = f=>{ try{ r ‚Üê f(); bad ‚Üê r===undefined; if (!bad) ‚Ü© r }catch(e){}; bad && ‚ÄΩ }
E.catch_ = f=> Œª(){ try{ ‚Ü© f.apply(@,arguments) }catch(e){ if ('__catchable' in e) ‚Ü© e.__catchable; else throw e } }
E.return_ = Œπ=>{ throw {__catchable:Œπ} }

E.T = Œª(Œπ){ 
	ty ‚Üê typeof Œπ; if (ty!=='object') ‚Ü© ty; if (Œπ===null) ‚Ü© 'null'
	p ‚Üê Object.getPrototypeOf(Œπ); if (p===Object.prototype || p===null) ‚Ü© 'object'
	for (var t of is_l) if (t[1](Œπ)) ‚Ü© t[0]
	‚Ü© 'object' }
b_util ‚Üê catch_Œπ(()=> process.binding('util') )
is_l ‚Üê [
	['Array',Array.isArray],
	‚Ä¶['Error','String','Boolean','Number'].map(ty=> [ty,Œπ=> Object.prototype.toString.call(Œπ)==='[object '+ty+']']),
	‚Ä¶(!b_util? [] : ['ArrayBuffer','DataView','Date','Map','MapIterator','Promise','RegExp','Set','SetIterator','TypedArray'].map(Œπ=> [Œπ,b_util['is'+Œπ]]) ),
	]
_(T) <- (_(is_l).object(),{
	symbol: Œπ=> typeof Œπ === 'symbol',
	boolean: Œπ=> typeof Œπ === 'boolean',
	string: Œπ=> typeof Œπ === 'string',
	number: Œπ=> typeof Œπ === 'number',
	function: Œπ=> typeof Œπ === 'function',
	primitive: Œπ=>{ switch(typeof(Œπ)){case 'undefined': case 'boolean': case 'number': case 'string': case 'symbol': ‚Ü© true; case 'object': ‚Ü© Œπ===null; default: ‚Ü© false} },
	boxed: Œπ=>{ if (Œπ===null || typeof Œπ!=='object') ‚Ü© false; t ‚Üê Object.getPrototypeOf(Œπ); t = t.constructor&&t.constructor.name; ‚Ü© (t==='Boolean'||t==='String'||t==='Number') && /^\[object (Boolean|String|Number)\]$/.test(Object.prototype.toString.call(Œπ)) },
	‚Ñ§: Number.isInteger,
	'-0': Œπ=> Œπ===0 && 1/Œπ < 0,
	NaN: Number.isNaN,
	})
_(E) <- ({ Tstr:T.string, Tnum:T.number, Tfun:T.function, Tarr:T.Array, Tprim:T.primitive, Tbox:T.boxed, })
T.primitive.Œπ = new Set(['undefined','boolean','number','string','symbol','null'])
T.boxed.Œπ = new Set(['Boolean','String','Number'])

################################### requires ###################################
;[ ['child_process'],['events','EventEmitter'],['fs'],['http'],['https'],['module','Module'],['net'],['os'],['querystring'],['readline'],['repl'],['stream'],['util'],['vm'],['zlib'],['underscore','_'],
	].map(Œª([Œπ,n]){ def(E, n||Œπ, ()=> require(Œπ)) })
E._ = _
path ‚Üê require('path')
fs ‚Üê require('fs')
moment ‚Üê require('moment')
if (0){ require('util'); require('stream'); require('moment'); require('priorityqueuejs'); require('urijs') } # browserify
def(E,'robot',lazy('robot',()=> npm`robotjs@0.4.5` ))
def(E,'require_new',lazy('require_new',()=>{ t ‚Üê npm`require-uncached@1.0.3`; ‚Ü© Œπ=> t((Œπ+'').replace(/^\.(?=\/)/,œÜ.cwd)) }))

#################################### Œ∂ infra ###################################
E.Property = Œª(o,name){ this.o = o; this.name = name; }
def(Property.prototype,'Œπ',{ get(){‚Ü© @.o[@.name]}, set(Œπ){ @.o[@.name] = Œπ } })
# Property.prototype.descriptor = Œª(Œπ){ if( arguments.length===0 ) ‚Ü© Object.getOwnPropertyDescriptor(@.o,@.name); else Object.defineProperty(@.o,@.name,Œπ) }
Property.prototype.def = Œª(Œπ){ def(@.o,@.name,Œπ); ‚Ü© @ }
# id like an interface more like def, but def doesnt have a getter so it is temporary
# this should probably supercede def, since <3 firstclassness?

new Property(eval,'¬∑').def({ enumerable:true, get(){ @(Œ∂_compile(œÜ`/tmp/__¬∑`.text).replace(/^#!.*/,'')) }, })
lazy_fn ‚Üê f=>{t‚Üê; ‚Ü© Œª(){‚Ü© (t||(t=f())).apply(@,arguments) } } # ! slotify and then detect and merge slots

;[#persist_here ~/code/declare/npm]
E.npm = Œª(Œπ){ Tarr(Œπ) && (Œπ = Œπ[0]); APP ‚Üê '\x1b[34m[npm]\x1b[0m'
	[,name,version,sub] ‚Üê Œπ.re`^(.*?)(?:@(.*?))?(/.*)?$`
	abs_name ‚Üê ()=> name+'@'+version
	if (version){
		cache ‚Üê œÜ`~/.npm/${name}/${version}`; final ‚Üê cache.œÜ`/node_modules/${name}`+(sub||'')
		try{ ‚Ü© require(final) }catch(e){ if (!(e.code==="MODULE_NOT_FOUND")) throw e }
		cache.BAD_exists() || sh·µ•`cd ~; npm cache add ${abs_name()}`
		a‚Üê;b‚Üê; (a=cache.œÜ`package.json`).Œπ = {description:'-',repository:1,license:'ISC'}; (b=cache.œÜ`README`).Œπ = ''; sh·µ•`cd ${cache} && npm --cache-min=Infinity i ${abs_name()}`; a.Œπ = b.Œπ = null
		‚Ü© require(final) }
	else {
		sfx`ack`
		version = sh·µ•`npm show ${Œπ} version`+''
		process.stderr.write(APP+' latest: '); process.stdout.write(Œπ.replace(/-/g,'_')+' ‚Üê npm`'+abs_name()+'`'); process.stderr.write('\n')
		} }
E.js_tokenize = code=>{
	tok ‚Üê npm`babylon@6.14.1`.parse(code,{allowReturnOutsideFunction:true}).tokens
	‚Ü© _.zip( tok.map(Œπ=> code.slice(Œπ.start,Œπ.end)), tok.windows(2).map(([a,b])=> code.slice(a.end,b.start) ) )._.flatten(true).filter(Œπ=>Œπ) }
E.uses_this = f=> (f+'').match(/\bthis\b/) && js_tokenize('('+f+')').includes('this')? 'maybe' : false
E.Œ∂_compile = lazy_fn(Œª(){ anon_pmcr3‚Üê; anon_x818h‚Üê; anon_t4nzb‚Üê; anon_oenor‚Üê; anon_7cy2u‚Üê; anon_8jlo1‚Üê; anon_cbbhj‚Üê;
	word_extra ‚Üê re`‚ôà-‚ôìüîÖüîÜ‚Ä°`
	word ‚Üê re`A-Za-z0-9_$ ∞- ∏À°-À£Œë-Œ°Œ£-œâ·¥¨-·µõ·µ¢-·µ•·∂ú·∂†·∂ª‚Å∞‚Å±‚Åø‚Çê-‚Çì‚Çï-‚Çú‚ÑÇ‚Ñï‚Ñö‚Ñù‚Ñ§‚±º‚±Ω${word_extra}`
	Œ∂_parse ‚Üê (Œª(){
		P ‚Üê require('./parsimmon2.js')
		ident ‚Üê P(re`(?![0-9])[${word}]+|@`)
		comment ‚Üê re`(//.*|/\*[^]*?(\*/|$)|#[\s#].*)+`
		simple_js ‚Üê P(()=> P.alt(
			P(comment).T`comment`,
			P.seq( P('{'), simple_js, P('}') ),
			P.seq( P.alt(
				P(/(['"])(((?!\1)[^\\]|\\.)*?\1)/).T`string`,
				ident,
				P.seq( P('`').T`template`, tmpl_Œπ.many(), P('`').T`template` ),
				P(/[)\]0-9]/)
				), P.alt( P(re`[ \t]*(?!${comment})/`), P.of('') ) ),
			P(/\[#persist_here .*?\]/),
			P(re`/((?:[^/\\\[]|(?:\\.)|\[(?:[^\\\]]|(?:\\.))*\])*)/([a-z]*)`).T`regex`,
			P(re`[^{}/#'"‚Ä¶${'`'})@\[\]${word}]+|[^}]`)
			).many() )
		tmpl_Œπ ‚Üê P.alt( P.seq( P('${').T`template`, simple_js, P('}').T`template` ), P(/(?:\\[^]|(?!`|\$\{)[^])+/).T`template` )
		js_file ‚Üê P.seq( P(/(#!.*\n)?/).T`shebang`, simple_js )
		‚Ü© code=>{
			Œπ ‚Üê js_file.parse(code)._.flatten()
			r ‚Üê []; for(var t of Œπ) t.T? r.push(t) : r[-1]&&r[-1].T? r.push(t) : (r[-1]+=t)
			‚Ü© r } })()
	anon_3lsx8‚Üê;
	unicode_names ‚Üê memoize_persist(Œπ=> (
		anon_3lsx8||(anon_3lsx8= (Œª(){
			unicode_data ‚Üê 'Cc Cf Co Cs Ll Lm Lo Lt Lu Mc Me Mn Nd Nl No Pc Pd Pe Pf Pi Po Ps Sc Sk Sm So Zl Zp Zs'.split(' ').mapcat(Œπ=> _(npm('unicode@0.6.1/category/'+Œπ)).values() )
			‚Ü© unicode_data.filter(Œπ=> !/^</.test(Œπ.name)).map(Œπ=> [parseInt(Œπ.value,16), '_'+Œπ.name.replace(/[- ]/g,'_').toLowerCase()+'_'])._.object()
			})() ) )[ord(Œπ)])
	Œ∂_compile_nonliteral ‚Üê Œπ=> Œπ
		.replace(anon_x818h||(anon_x818h= re`(\[[${word},‚Ä¶]+\]|\{[${word},:‚Ä¶]+\}|[${word}]+)(\s*)‚Üê(;?)`.g ),(À£,name,ws,end)=> 'var '+name+ws+(end?';':'=') )
		.replace(/Œª(?=\*?(?:[ \t][^\(=‚Üê]*)?\([^\)]*\)[ \t]*\{)/g,'function')
		.replace(anon_oenor||(anon_oenor=re`\.@@([${word}]+)`.g),'[Symbol.$1]')
		.replace(/‚Ü© ?/g,'return ')
		.replace(/‚Ä¶/g,'...')
		.replace(/@/g,'this')
		.replace(/‚àû/g,'Infinity')
		.replace(/‚ÄΩ(?=(\()?)/g,(À£,callp)=> callp? `!function(...a){throw Error(a.map(Œπ=> Tstr(Œπ)? Œπ : util_inspect_autodepth(Œπ)).join(' '))}` : `!function(){throw Error('‚ÄΩ')}()` )
		.replace(/‚áí(\s*([:{]))?/g,(À£,x,Œπ)=> '=>'+({ ':':'0?0', '{':'0?0:', }[Œπ]||‚ÄΩ)+x )
		.replace(anon_t4nzb||(anon_t4nzb= re`\.(‚Ä¶${'filter! -= += Œ†& Œ†| ‚Åª¬π -0 ‚à™! ‚à©! ‚à©s -! ?? *? +? ? * + ‚à™ ‚à© - & | ‚âà'.split(' ').map(Œπ=> re`${Œπ}`.source).join('|')})`.g ),(À£,Œπ)=> '['+util_inspect_autodepth(Œπ)+']')
		.replace(anon_8jlo1||(anon_8jlo1= re`(‚Ä¶${'<-'.split(' ').map(Œπ=> re`${Œπ}`.source).join('|')})`.g ),(À£,Œπ)=> '['+util_inspect_autodepth(Œπ)+']')
		.replace(anon_7cy2u||(anon_7cy2u= re`#swap ([${word}]+) ([${word}]+)`.g ),(À£,a,b)=>{ t ‚Üê 't_'+random_id(9); ‚Ü© Œ∂_compile_nonliteral(`for(;;){ ${t} ‚Üê ${a}; ${a} = ${b}; ${b} = ${t} ;break}`) }) # why not just [a,b] = [b,a]?
		.replace(/\[#persist_here (.*?)\]/g,(À£,Œπ)=> '('+json2_read+js`)(${json2_show(œÜ(Œπ).buf)})`)
		.replace(/\[#Q/g,'new Property(') # Quote
		.replace(anon_cbbhj||(anon_cbbhj= re`\.(\s*)([${word}]+)(\s*)#Q\]`.g ), `,$1'$2'$3)`)
		.replace(anon_pmcr3||(anon_pmcr3= re`[${word_extra}]`.g ), unicode_names.X)
	# Œ∂_compile_nonliteral_tree ‚Üê Œπ=>{
	# 	Œπ = Œπ.mapcat(Œπ=> Œπ.T? [Œπ] : Œπ.split(/(?=[{([\])}])/g).mapcat(Œπ=> Œπ.match(/^([{([\])}]?)([^]*)$/).slice(1)).filter(Œπ=>Œπ.length) )
	# 	@ other_bracket ‚Üê i=>{ at ‚Üê {'[':0,'{':0,'(':0}; dir ‚Üê Œπ[i] in at? 1 : -1; for(;;){ for(var [a,b] of ['[]','()','{}']){ Œπ[i]===a && at[a]++; Œπ[i]===b && at[a]-- }; if( _(at).every(Œπ=>Œπ===0) ) break; i += dir; if (!(0<=i&&i<Œπ.length)) ‚Ü©; }; ‚Ü© i }
	# 	‚Ü© Œπ.map(Œπ=> Œπ.T? Œπ.Œπ : Œπ) }
	‚Ü© code=> Œ∂_parse(code).map(Œπ‚áí
		: Œπ.T==='comment'? Œπ.Œπ.replace(/^#/,'//')
		: Œπ.T? Œπ.Œπ
		: Œ∂_compile_nonliteral(Œπ)
		).join('') })
Œ∂_compile.‚Åª¬π = Œπ=> Œπ.replace(/\b(?:function|return|this)\b(?!['"])|\bvar \s*([\w_$Œë-Œ°Œ£-Œ©Œ±-œâ]+)(\s*)(=?)|\.\.\./g, Œª(Œπ,name,s,eq){‚Ü© {'function':'Œª','return':'‚Ü©','this':'@','...':'‚Ä¶'}[Œπ] || (eq==='='? name+s+'‚Üê' : name+s+'‚Üê;')})

if( require.extensions && !require.extensions['.Œ∂'] )(()=>{
	require.extensions['.Œ∂'] = (module,Œπ)=>{ module._compile(Œ∂_compile(fs.readFileSync(Œπ,'utf8')),Œπ) }
	super_ ‚Üê require.extensions['.js']; require.extensions['.js'] = (module,Œπ)=>{ (path.extname(Œπ)==='' && fs.readFileSync(Œπ,'utf8').re`#!/usr/bin/env Œ∂\s`? require.extensions['.Œ∂'] : super_)(module,Œπ) }
	})()

############################### as for a prelude ###############################
simple_hash_str ‚Üê Œπ‚áí
	: Tfun(Œπ)? T(Œπ)+Œπ
	: JSON.stringify(Œπ, (k,Œπ)=>{ if (Tprim(Œπ)||Tarr(Œπ)) ‚Ü© Œπ; else{ r‚Üê{}; _(Œπ).keys().sort().forEach(k=> r[k]=Œπ[k]); ‚Ü© r } })
b36 ‚Üê Œπ=> npm`base-x@1.0.4`([‚Ä¶/[0-9a-z]/].join('')).encode(Œπ)
E.simple_hash = Œπ=> b36( require('crypto').createHash('sha256').update(simple_hash_str(Œπ)).digest() )
memo_frp ‚Üê Œª(names,within,f){
	dir ‚Üê œÜ`~/.memo_frp/${names}`
	if (within){
		try{ t ‚Üê fs.readdirSync(dir+'') }catch(e){ if (!(e.code==='ENOENT')) throw e; t ‚Üê [] }
		now ‚Üê Time().i; t = t.sort().filter(Œπ=> Time(Œπ.re`^\S+`[0]).i >= now - within)[-1]
		if (t) ‚Ü© dir.œÜ(t).json2.Œπ}
	a ‚Üê Time().iso; Œπ ‚Üê f(); b ‚Üê Time().iso
	dir.œÜ`${a} ${random_id(10)}`.json2 = {names, date:[a,b], Œπ}; ‚Ü© Œπ}
# ! these persist functions overlap
E.memoize_persist = f=>{
	store ‚Üê œÜ`/tmp/Œ∂persist_${simple_hash(f)}`; store_Œπ ‚Üê store.json||{}
	‚Ü© Œª(‚Ä¶a){ a_h ‚Üê simple_hash(a); ‚Ü© store_Œπ[a_h] || ( store_Œπ[a_h] = f(‚Ä¶a), store.json = store_Œπ, store_Œπ = store.json, store_Œπ[a_h] ) } }
E.slot_persist = name=>{ o ‚Üê œÜ`/tmp/Œ∂persist_${name}`; ‚Ü© def({name},'Œπ',{get(){‚Ü© o.json },set(Œπ){ o.json = Œπ }}) }

regex_parse ‚Üê lazy_fn(Œª(){ # status: output format unrefined
	P ‚Üê require('./parsimmon2.js')
	dehex ‚Üê Œπ=> chr(parseInt(Œπ,16))
	ESCAPE ‚Üê P('\\').then(P.alt( P(/x([0-9a-fA-F]{2})/,1).map(dehex), P(/u\{([0-9a-fA-F]+)\}/,1).map(dehex), P(/u([0-9a-fA-F]{4})/,1).map(dehex), P(/./).map(Œπ=> '.[|^$()*+?{}\\/'.includes(Œπ)? Œπ : P.T('escape',Œπ) ) ))
	s1 ‚Üê P.alt(
		P(/[^.()[\]^$|\\]/),
		ESCAPE,
		P`.`.T`any`,
		P`(?:${()=>OR_or_SEQ})`,
		P`(?=${()=>OR_or_SEQ})`.T`lookahead`,
		P`(?!${()=>OR_or_SEQ})`.T`nlookahead`,
		P`(${()=>OR_or_SEQ})`.T`capture`,
		P`[${[ /\^?/, (Œª(){ t ‚Üê ESCAPE.or(/[^\]]/); ‚Ü© P([ t.skip('-'), t ]).or(t) })().many() ]}]`.map(Œπ=> P.T(Œπ[0]? 'nset' : 'set', Œπ[1]))
		)
	TIMES ‚Üê P([ s1, P.alt('*','+','?',/\{([0-9]+)(?:(,)([0-9]*))?\}/,P.of())
		.map(Œπ=> Œπ = !Œπ? Œπ : Œπ==='*'? [0,‚àû] : Œπ==='+'? [1,‚àû] : Œπ==='?'? [0,1] : (Œª(){ [À£,a,two,b] ‚Üê Œπ.match(/\{([0-9]+)(?:(,)([0-9]*))?\}/); ‚Ü© [a|0,b? b|0 : two? ‚àû : a|0] })() )
		]).map(([Œπ,for_])=> !for_? Œπ : {T:'times', Œπ, for:for_} )
	s2 ‚Üê P.alt( P('^').T`begin`, P('$').T`end`, TIMES )
	OR_or_SEQ ‚Üê P.sep_by(s2.many().T`seq`, '|').map(Œπ=> Œπ.length > 1? P.T('or',Œπ) : Œπ[0])
	# t1 ‚Üê regex_parse(/^(foo)(?:bep){2,7}\baz(?:\\b.ar|[a-c-e()}][^\s]|b|baz(?=gremlin)(?!groblem)|)*/i)
	‚Ü© Œπ‚áí {Œπ:OR_or_SEQ.parse(Œπ.source), flags:Œπ.flags} })
E.applescript = {
	parse: lazy_fn(Œª(){
	  P ‚Üê require('./parsimmon2.js')
	  ws ‚Üê Œπ=> ws_.then(Œπ).skip(ws_); ws_ ‚Üê P(/[ \t\n\r]*/)
	  value ‚Üê P(()=> P.alt(false_,true_,number,object,array,string,raw) )
	  false_ ‚Üê P('false').map(()=> false)
	  true_ ‚Üê P('true').map(()=> true)
	  number ‚Üê P(/-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][-+]?[0-9]+)?/).map(Œπ=> +Œπ)
	  _member ‚Üê P.seq(P(/[ a-z0-9-]+/i).skip(ws(P(':'))), value)
	  object ‚Üê ws(P('{')).then(P.sep_by(_member,ws(P(',')))).skip(ws(P('}'))).map(Œπ=> Œπ.length? _.object(Œπ) : [])
	  array ‚Üê ws(P('{')).then(P.sep_by(value,ws(P(',')))).skip(ws(P('}')))
	  _char ‚Üê P(/[\n\t\x20-\x21\x23-\x5B\x5D-\u{10FFFF}]|\\(["\\\/bfnrt]|u[0-9a-fA-F]{4})/u).map(Œπ=> Œπ[0]!=='\\'? Œπ : {'"':'"','\\':'\\','/':'/',b:'\b',f:'\f',n:'\n',r:'\r',t:'\t'}[Œπ[1]] || chr(parseInt(Œπ.slice(2),16)) )
	  string ‚Üê P('"').then( _char.many().map(Œπ=> Œπ.join('')) ).skip(P('"'))
	  raw ‚Üê P(/[^,}"]+/).or(string.map_js((Œπ,[i0,i1],l)=> l.slice(i0,i1))).many().map(Œπ=>{ Œπ=Œπ.join(''); ‚Ü© Œπ==='missing value'? undefined : {T:'raw',Œπ} })
	  ‚Ü© Œπ=> Œπ===''? undefined : ws(value).parse(Œπ) }),
	print: Œπ=> Tnum(Œπ)? Œπ+'' : Tstr(Œπ)? '"'+Œπ.replace(/["\\]/g,'\\$&')+'"' : Tarr(Œπ)? '{'+Œπ.map(applescript.print.X).join(',')+'}' : ‚ÄΩ,
	}
# E.lenient_json_parse = (Œª(){
# 	P ‚Üê require('./parsimmon2.js')

# 	whitespace ‚Üê P(/\s*/m)
# 	escapes ‚Üê { b:'\b', f:'\f', n:'\n', r:'\r', t:'\t', }
# 	un_escape ‚Üê (str)=> str.replace(/\\(u[0-9a-fA-F]{4}|[^u])/, (À£,escape)=> escape[0]==='u'? chr(parseInt(escape.slice(1),16)) : escapes[escape[0]] || escape[0] )
# 	comma_sep ‚Üê (parser)=> P.sepBy(parser, token(P(',')))
# 	token ‚Üê p=> p.skip(whitespace)

# 	l_null ‚Üê token(P('null')).map(()=> null)
# 	l_t ‚Üê token(P('true')).map(()=> true)
# 	l_f ‚Üê token(P('false')).map(()=> false)
# 	l_str ‚Üê token(P(/"((?:\\.|.)*?)"/, 1)).map(un_escape).desc('string')
# 	l_num ‚Üê token(P(/-?(0|[1-9][0-9]*)([.][0-9]+)?([eE][+-]?[0-9]+)?/)).map(Number).desc('number')

# 	json ‚Üê P.lazy(()=> whitespace.then(P.alt( object, array, l_str, l_num, l_null, l_t, l_f )) )
# 	array ‚Üê token(P('[')).then(comma_sep(json)).skip(token(P(']')))
# 	pair ‚Üê P.seq(l_str.skip(token(P(':'))), json)
# 	object ‚Üê token(P('{')).then(comma_sep(pair)).skip(token(P('}'))).map(Œπ=> _.object(Œπ))
# 	‚Ü© Œπ=> json.parse(Œπ).value })()
E.JSON_pretty = (Œπ,replacer)=>{
	seen ‚Üê []
	T ‚Üê '  ' # tab
	wrap_width ‚Üê 140
	indent_show ‚Üê Œπ=> show(Œπ).replace(/\n/g,'\n'+T)
	show ‚Üê Œπ=>{t‚Üê;
		if (Œπ===undefined||Œπ===null) ‚Ü© 'null'
		replacer && (Œπ = replacer(Œπ))
		while (Œπ.toJSON) Œπ = Œπ.toJSON()
		switch (typeof(Œπ)==='object'? Object.prototype.toString.call(Œπ) : typeof(Œπ)) {
			case 'string': case '[object String]': ‚Ü© JSON.stringify(Œπ)
			case 'boolean': case '[object Boolean]': case 'number': case '[object Number]': ‚Ü© Œπ+''
			case 'function': ‚Ü© 'null'
			default:
				if (seen.indexOf(Œπ) !== -1) throw TypeError('Converting circular structure to JSON')
				seen.push(Œπ)
				if (Tarr(Œπ)) { [a,b] ‚Üê '[]'; Œπ = Œπ.map(indent_show); for (i‚Üê0;i<Œπ.length;i++) Œπ[i]===undefined && (Œπ[i] = 'null') }
				else { [a,b] ‚Üê '{}'; Œπ = _(Œπ).pairs().filter(Œπ=> !(Œπ[1]===undefined || Tfun(Œπ[1]))).map(Œπ=> show(Œπ[0])+': '+indent_show(Œπ[1])) }
				seen.pop()
				‚Ü© (t=a+Œπ.join(', ')+b).length <= wrap_width? t : a+'\n'+T+Œπ.join(',\n'+T)+'\n'+b
				} }
	‚Ü© show(Œπ) }
genex_simple ‚Üê Œπ=>{ P ‚Üê require('parsimmon')
	unit ‚Üê P.lazy(()=> P.alt( P.noneOf('()|'), P.string('(').then(s_or).skip(P.string(')')).map(Œπ‚áí{T:'capture',Œπ}) ) )
	s_or ‚Üê P.sepBy(unit.many(),P.string('|')).map(Œπ=> Œπ.length > 1? {T:'or',Œπ:Œπ} : Œπ[0])
	Œõ ‚Üê Œπ=> Œπ.T==='or'? Œπ.Œπ.map(Œõ) : Œπ.T==='capture'? Œõ(Œπ.Œπ) : Tarr(Œπ)? cartesian_str(Œπ.map(Œõ)) : [Œπ]
	‚Ü© Œõ(P.alt( P.string('|'), unit ).many().parse(Œπ).value) }
genex ‚Üê Œª Œõ(Œπ){‚Ü©0,
	Tstr(Œπ)? [Œπ] :
	Œπ.flags!==undefined?( Œπ.flags.replace(/u/,'') && ‚ÄΩ, Œõ(Œπ.Œπ) ):
	Œπ.T==='capture'? Œõ(Œπ.Œπ) :
	Œπ.T==='escape'? ‚ÄΩ :
	Œπ.T==='or'? Œπ.Œπ.mapcat(Œõ) :
	Œπ.T==='seq'? cartesian_str(Œπ.Œπ.map(Œõ)) :
	# Œπ.T==='times'? # Œõ(Œπ.Œπ).mapcat(x=> _.range(Œπ.for[0],Œπ.for[1]+1).map(i=> x.repeat(i)) ) :
	# 	Œπs ‚Üê Œõ(Œπ.Œπ)
	Œπ.T==='set'? Œπ.Œπ.mapcat(Œπ=>
		Tarr(Œπ)? _.range(ord(Œπ[0]),ord(Œπ[1])+1).map(chr) :
		Œπ.T==='escape'? ‚ÄΩ :
			[Œπ] ):
		‚ÄΩ(Œπ) }

_(E) <- (_(Math).pick('abs','ceil','exp','floor','log10','log2','max','min','pow','round','sqrt','cos','sin','tan')); _(E) <- ({ln:Math.log, œÄ:Math.PI, œÑ:Math.PI*2})
E.multiline = Œª(Œπ){ Œπ = (Œπ+'').split('\n').slice(1,-1); t ‚Üê Œπ.map(Œπ=> Œπ.re`^\t*`[0].length)._.min(); Œπ = Œπ.map(Œπ=> Œπ.slice(t)); ‚Ü© (Œπ[0]==='' && Œπ[-1]===''? Œπ.slice(1,-1) : Œπ).join('\n') }
E.sleep = Œπ=>{ h‚Üê; for(hr‚Üêhrtime(); (h=hrtime(hr)) < Œπ; Œπ-h > 0.03 && (sh·µ•`sleep ${Œπ-h-0.02}`,1)); }
E.bench = (f,opt={})=>{ var {TH=0.4} = opt
	# ! really should include a confidence interval or smth
	r‚Üê0; I‚Üê1; hr‚Üêhrtime(); R ‚Üê ()=> pretty_time_num(hrtime(hr) / r)
	t‚Üêf(); r++
	if( T.Promise(t) ) ‚Ü© Œ†(yes=>{ t.then(Œª Œõ(){ if( hrtime(hr) < TH ){ r++; f().then(Œõ) }else yes(R()) }) })
	else{ for(;hrtime(hr) < TH;){ for(i‚Üê0;i<I;i++) f(); r += I; I = ceil(I*1.5) }; ‚Ü© R() } }
E.bench1 = f=>{ hr ‚Üê hrtime(); f(); ‚Ü© pretty_time_num(hrtime(hr)) }
E.GET_L = (Œπ,within)=> memo_frp(['GET -L', Œπ+''], within, ()=> sh·µ•`curl -sL ${Œπ}`) # ! some requests have short responses; will need more intelligent caching for those 'cause the filesystem can't take too much
E.random = Œª(Œπ){‚Ü© arguments.length===0? Math.random() : Tnum(Œπ)? random()*Œπ |0 : _.sample(Œπ) }
E.random_id = L=> L.map(()=> random(az09||(az09=[‚Ä¶/[0-9a-z]/]))).join(''); az09‚Üê; # ¬ß
E.ord = Œπ=> Tnum(Œπ)? Œπ : Œπ.codePointAt()
E.chr = Œπ=> Tstr(Œπ)? Œπ : String.fromCodePoint(Œπ)

find_closest_ISU ‚Üê (Œπs,Œπ)=>{ for(i‚Üê0;i<Œπs.length;i++) if( Œπ <= Œπs[i] ) ‚Ü© i===0? i : abs(Œπs[i]-Œπ) < abs(Œπs[i-1]-Œπ)? i : i-1; ‚Ü© Œπs.length-1 }
cartesian_str ‚Üê Œπ=> Œπ.reduce((a,b)=>{ r ‚Üê []; a.forEach(a=> b.forEach(b=> r.push(a+b))); ‚Ü© r }, [''])
_.mixin({
difference_eq(Œπ,‚Ä¶a){ t ‚Üê Œπ._.groupBy(simple_hash_str); a.forEach(Œπ=> Œπ.forEach(Œπ=> delete t[simple_hash_str(Œπ)])); ‚Ü© _(t).values()._.flatten(true) },
})
E.copy_deep = Œπ‚áí
	: Tprim(Œπ)? Œπ
	: T.Map(Œπ)? new Map(Œπ)
	: T.Set(Œπ)? new Set(Œπ)
	: (()=>{
		r ‚Üê new Œπ.constructor()
		for(var k in Œπ) if( Object.prototype.hasOwnProperty.call(Œπ,k) ) r[k] = copy_deep(Œπ[k])
		‚Ü© r })()
assign_properties_in_E_informal({
'(Array|Set|Map).prototype._':{get(){‚Ü© _(@)}},
'Object.prototype._':{get(){‚Ü© _(@)}},

'RegExp.prototype.@@iterator':Œª*(){yield* genex(regex_parse(@)) },
'RegExp.prototype.exec_at':Œª(Œπ,i){ @.lastIndex = i; ‚Ü© @.exec(Œπ) },
'Number.prototype.map':Œª(f){'use strict'; Œπ‚Üê+@; r ‚Üê Array(Œπ); for(i‚Üê0;i<Œπ;i++) r[i] = f(i,i,Œπ); ‚Ü© r},
'Number.prototype.mapcat':Œª(f){‚Ü© @.map(f)._.flatten(true)},
'Array.prototype.mapcat':Œª(f){r ‚Üê []; for(i‚Üê0;i<@.length;i++) {t ‚Üê f(@[i],i,@); for (j‚Üê0;j<t.length;j++) r.push(t[j])}; ‚Ü© r}, # Œª(f){‚Ü© @.map(f)._.flatten(true)}
'Array.prototype.repeat':Œª(x){‚Ü© x<=0? [] : x.mapcat(()=> @)},
'Array.prototype.search':Œª(f){ r‚Üê; if (@.some(Œª(Œπ,i,l){ r = f(Œπ,i,l); if (r!==undefined) ‚Ü© true })) ‚Ü© r },
'(Array|Buffer|String).prototype.chunk':Œª(L){‚Ü© _.range(0,@.length,L).map(i=> @.slice(i,i+L)) },
'(Array|Buffer|String).prototype.windows':Œª(L){‚Ü© (@.length-L+1).map(i=> @.slice(i,i+L)) },
'Array.prototype.find_index_deep':Œª(f){
	for(i‚Üê0;i<@.length;i++){ Œπ ‚Üê @[i]
		if (Tarr(Œπ)){ t ‚Üê Œπ.find_index_deep(f); if (t) ‚Ü© [i,‚Ä¶t] }
		else{ if (f(Œπ)) ‚Ü© [i] }
		} },
'Array.prototype.Œ†&':{get(){‚Ü© Œ†.&(@) }},
'Array.prototype.Œ†|':{get(){‚Ü© Œ†.|(@) }},
'Array.prototype.seq':{get(){ Œ∏ ‚Üê Œª*(){ for(;Œ∏.i<Œ∏.Œπ.length;) yield Œ∏.Œπ[Œ∏.i++] }(); _(Œ∏) <- ({ Œπ:@, i:0, clone(){‚Ü© _(@.Œπ.seq) <- (@) } }); ‚Ü© Œ∏ }},
'Array.prototype.find_last_index':Œª(f){ for(i‚Üê@.length-1;i>=0;i--) if( f(@[i],i,@) ) ‚Ü© i },

'Set.prototype.filter!':Œª(f){ @.forEach(Œπ=> f(Œπ) || @.delete(Œπ)) },
'Set.prototype.pop':Œª(){ t ‚Üê @.values().next().value; @.delete(t); ‚Ü© t },
'Set.prototype.‚à™':Œª(‚Ä¶a){‚Ü© new Set([@,‚Ä¶a].map(Œπ=> [‚Ä¶Œπ])._.flatten(true)) },
'Set.prototype.‚à©':Œª(‚Ä¶a){ r ‚Üê new Set(@); for(var x of a) for(var Œπ of r) x.has(Œπ) || r.delete(Œπ); ‚Ü© r },
'Set.prototype.-':Œª(‚Ä¶a){ r ‚Üê new Set(@); for(var t of a) for(var Œπ of t) r.delete(Œπ); ‚Ü© r },
'Set.prototype.map':Œª(f){‚Ü© [‚Ä¶@].map(f) },

'(Array|Buffer|String|Set).prototype.count':Œª(){ r ‚Üê new Map(); for (var t of @) r.set(t, (r.has(t)? r.get(t) : 0)+1 ); ‚Ü© r },

'stream.Readable.prototype.read_all':Œª(){‚Ü© Œ†(yes=>{ t ‚Üê []; @.resume().on('data',Œπ=> t.push(Œπ) ).on('end',()=> yes(Buffer.concat(t)) ) })},
'(Array|Buffer|String).prototype.-1':{get(){‚Ü© @.length<1? undefined : @[@.length-1] },set(Œπ){ @.length<1 || (@[@.length-1] = Œπ) }},
'(Array|Buffer|String).prototype.-2':{get(){‚Ü© @.length<2? undefined : @[@.length-2] },set(Œπ){ @.length<2 || (@[@.length-2] = Œπ) }},
'(Array|Buffer|String).prototype.-3':{get(){‚Ü© @.length<3? undefined : @[@.length-3] },set(Œπ){ @.length<3 || (@[@.length-3] = Œπ) }},
'(Array|Buffer|String).prototype.-4':{get(){‚Ü© @.length<4? undefined : @[@.length-4] },set(Œπ){ @.length<4 || (@[@.length-4] = Œπ) }},
})

TimerCons ‚Üê Œª(a,b){@.a=a;@.b=b}; TimerCons.prototype = {clear:Œª(){@.a.clear();@.b.clear()}, ref:Œª(){@.a.ref();@.b.ref()}, unref:Œª(){@.a.unref();@.b.unref()}}
E.Œ† = Œπ‚áí
	: !Tfun(Œπ)?( T.Error(Œπ)? Promise.reject(Œπ) : Promise.resolve(Œπ) )
	: /^(yes|\(yes,no\))=>/.test(Œπ+'')? new Promise(Œπ)
	: (Œª(){ # type union of new.Promise(nodeback) and Promise.resolve(object)
		type ‚Üê '?'
		r ‚Üê (‚Ä¶a)=>{ type==='?' &&( type = 'nodeback' ); ‚Ü© type==='object'? Œπ(‚Ä¶a) : Œ†((yes,no)=> Œπ(‚Ä¶a,(e,Œπ)=>{ e? no(e) : yes(Œπ) })) }
		for(var name of ['then','catch'])
			r[name] = (‚Ä¶a)=>{ type==='?' &&( type = 'object', Œπ = Promise.resolve(Œπ) ); ‚Ü© Œπ[name](‚Ä¶a) }
		‚Ü© r })()
Œ†.& = Œπ=> Promise.all(Œπ)
Œ†.| = Œπ=> Promise.race(Œπ)
assign_properties_in_E_informal({
# 'Function.prototype.Œ†':Œª(){ ... },
'Function.prototype.P':Œª(‚Ä¶a1){ Œπ‚Üê@; ‚Ü© Œª(‚Ä¶a2){‚Ü© Œπ.apply(@, a1.concat(a2)) } },
'Function.prototype.X':{get(){ Œπ‚Üê@; ‚Ü© Œª(a){‚Ü© Œπ.call(@,a) } }},
'Function.prototype.defer':Œª(){‚Ü© setImmediate(@) },
'Function.prototype.in':Œª(time){‚Ü© setTimeout(@,max(0,time||0)*1e3) },
'Function.prototype.every':Œª(time,opt){ r ‚Üê setInterval(@,max(0,time)*1e3); ‚Ü© !(opt&&opt.leading)? r : new TimerCons(@.in(0),r) },
})
proto_assign('Immediate',Immediate=>{
	Immediate.prototype.clear = Œª(){ clearImmediate(@) }
	Immediate.prototype.ref = Immediate.prototype.unref = Œª(){}
	})
proto_assign('Timeout',Timeout=>{
	Timeout.prototype.clear = Œª(){ @._repeat? clearInterval(@) : clearTimeout(@) }
	})
proto_assign('Number',Number=>{})
t‚Üê; proto_assign.declare((t=setImmediate(Œª(){}), clearImmediate(t), t))
t‚Üê; proto_assign.declare((t=setTimeout(Œª(){},0), clearTimeout(t), t))

E.walk = (Œπ,f,k,o)=>( Tprim(Œπ)||_(Œπ).forEach((Œπ,k,o)=> walk(Œπ,f,k,o)), Œπ!==undefined && Œπ!==null && f(Œπ,k,o), Œπ )
E.walk_graph = (Œπ,f,seen=[])=> !( Tprim(Œπ) || seen.includes(Œπ) ) && ( seen.push(Œπ), _(Œπ).forEach(Œπ=> walk_graph(Œπ,f,seen)), seen.pop(), Œπ!==undefined && Œπ!==null && f(Œπ), Œπ )
E.walk_both_obj = (Œπ,f·µÉ,f·µá,fseen,seen=[])=> fseen && seen.includes(Œπ)? fseen(Œπ) : !( Tprim(Œπ) || Tfun(Œπ) || seen.includes(Œπ) ) && ( f·µÉ(Œπ), seen.push(Œπ), _(Œπ).forEach(Œπ=> walk_both_obj(Œπ,f·µÉ,f·µá,fseen,seen)), seen.pop(), f·µá(Œπ), Œπ )
E.walk_reduce = (Œπ,f,k,o)=> Tprim(Œπ)? Œπ : Tarr(Œπ)? ( Œπ = Œπ.map((Œπ,k,o)=> walk_reduce(Œπ,f,k,o)), f(Œπ,k,o) ) : ( Œπ = _(Œπ).map((Œπ,k,o)=> [k,walk_reduce(Œπ,f,k,o)])._.object(), f(Œπ,k,o) )
E.walk_obj_edit = (Œπ,f)=> Tprim(Œπ) || Tfun(Œπ)? Œπ : Tarr(Œπ)? Œπ.map(Œπ=> walk_obj_edit(Œπ,f)) : (Œª(){ for (var k in Œπ) if (Object.prototype.hasOwnProperty.call(Œπ,k)) Œπ[k] = walk_obj_edit(Œπ[k],f); ‚Ü© f(Œπ) })()
E.search_obj = (Œπ,f)=>{ r‚Üê[]; walk(Œπ,(Œπ,k,o)=> Œπ!==undefined && Œπ!==null && f(Œπ,k,o) && r.push(Œπ)); ‚Ü© r }
E.search_graph = (Œπ,f)=>{ r‚Üê[]; walk_graph(Œπ,Œπ=> Œπ!==undefined && Œπ!==null && f(Œπ) && r.push(Œπ)); ‚Ü© r }

E.hrtime = Œª(Œπ){ t ‚Üê arguments.length===0? process.hrtime() : process.hrtime([Œπ|0,(Œπ-(Œπ|0))*1e9]); ‚Ü© t[0] + t[1]*1e-9 }
E.Time = Œª(Œπ){ r ‚Üê arguments.length===0? new Date() : Œπ instanceof Date? Œπ : new Date(Tnum(Œπ)? Œπ*1e3 : Œπ); r.toString = Œª(){‚Ü© util.inspect(@) }; ‚Ü© r }
fmt ‚Üê Œª(a,b){ t ‚Üê @.__local? moment(@).format('YYYY-MM-DD[T]HH:mm:ss.SSS') : @.toISOString(); t = t.slice(a,b); if (!@.__local && b > 10) t += 'Z'; ‚Ü© t }
assign_properties_in_E_informal({
'Date.prototype.inspect':Œª(d,opts){‚Ü© opts.stylize(isNaN(+@)? 'Invalid Date' : @.getUTCSeconds()!==0? @.ymdhms : @.getUTCMinutes()!==0? @.ymdhm : @.getUTCHours()!==0? @.ymdh : @.ymd, 'date')},
'Date.prototype.local':{get(){‚Ü© _(new Date(@)) <- ({__local:true})}},
'Date.prototype.i':{get(){‚Ü© +@ / 1e3}},
'Date.prototype.ym':      {get(){‚Ü© fmt.call(@,0,'YYYY-MM'.length)}},
'Date.prototype.ymd':     {get(){‚Ü© fmt.call(@,0,'YYYY-MM-DD'.length)}},
'Date.prototype.ymdh':    {get(){‚Ü© fmt.call(@,0,'YYYY-MM-DDTHH'.length)}},
'Date.prototype.ymdhm':   {get(){‚Ü© fmt.call(@,0,'YYYY-MM-DDTHH:mm'.length)}},
'Date.prototype.ymdhms':  {get(){‚Ü© fmt.call(@,0,'YYYY-MM-DDTHH:mm:ss'.length)}},
'Date.prototype.ymdhmss': {get(){‚Ü© fmt.call(@,0,'YYYY-MM-DDTHH:mm:ss.SSS'.length)}},
'Date.prototype.iso':     {get(){‚Ü© fmt.call(@,0,'YYYY-MM-DDTHH:mm:ss.SSS'.length)}},
'Date.prototype.hms':     {get(){‚Ü© fmt.call(@,'YYYY-MM-DDT'.length,'YYYY-MM-DDTHH:mm:ss'.length)}},
})

E.schema = (Œª(){
	sc_merge ‚Üê Œª(a,b){ak ‚Üê _.keys(a); bk ‚Üê _.keys(b); bk._.difference(ak).forEach(k=> a[k] = b[k]); _.intersection(ak,bk).forEach(k=> a[k] = !Tprim(a[k])? sc_merge(a[k],b[k]) : !Tprim(b[k])? 'error' : a[k]); ‚Ü© a }
	‚Ü© Œπ=> T.boolean(Œπ)? true : Tstr(Œπ)? '' : Tnum(Œπ)? 0 : Tarr(Œπ)? Œπ.length===0? [] : [Œπ.map(schema).reduce(sc_merge)] : _.pairs(Œπ).map(Œπ=> [Œπ[0],schema(Œπ[1])])._.object()
	})()
[#Q E.brightness #Q].def(Œª(){
	br ‚Üê hs·µ•? {
		get(){‚Ü©Œ†( hs·µ•`hs.brightness.get()`/100 )},
		set(Œπ){‚Ü©Œ†( hs·µ•`hs.brightness.set(${Œπ*100|0})` )},
		} : npm`brightness@3.0.0`
	br.set_overlay = Œπ=> br.set(Œπ > 0.5? (Œπ===1? 1 : Œπ-1/64) : (Œπ===0? 0 : Œπ+1/64)).then(()=> robot_key_tap('‚áß‚å•FnF'+(Œπ > 0.5? 2 : 1)) )
	‚Ü© br })
E.restart_and_keep_alive = prog=>{
	Label ‚Üê 'local.'+prog.replace(/\W/g,'_')
	t ‚Üê œÜ`~/Library/LaunchAgents/${Label}.plist`; t.Œπ = {Label, KeepAlive:true, ProgramArguments:['sh','-c',sh`PATH=${process.env.PATH}; ${prog}`]}
	sh·µ•`launchctl unload ${t} &>/dev/null; launchctl load ${t}`
	}
E.if_main_do = f=>{ if( !module.parent ) f(‚Ä¶process.argv.slice(2)) }

E.robot_key_tap = Œπ=> require_new(œÜ`~/code/scratch/keyrc/index.Œ∂`).robot_key_tap(Œπ)
E.KEY_once = (‚Ä¶a)=> require_new(œÜ`~/code/scratch/keyrc/index.Œ∂`).KEY_once(‚Ä¶a)

##################################### .Œ∂rc #####################################
process.env.PATH = ['./node_modules/.bin','/usr/local/bin',‚Ä¶(process.env.PATH||'').split(':'),'.']._.uniq().join(':')
E.nice_url = Œª(Œπ){t‚Üê; urijs ‚Üê require('urijs'); {sourcemap} ‚Üê Œπ; Œπ=Œπ+''
	# very nice google maps urls
	# if url ‚âà google.com/maps/
	# fetch short url:
	# 	wait-click $('#searchbox-hamburger')
	# 	wait-click $('[jsaction="settings.share"]')
	# 	wait-check $('#share-short-url')
	# 	t ‚Üê $('.widget-share-link-url').val() wait Œπ=> Œπ.re`^https?://goo.gl/maps/`
	# 	return t
	# 	$('.modal-container').click()
	# wait-check: if not $`${Œπ}:checked`; Œπ.click(); wait for $`${Œπ}:checked`
	# wait-click: wait for Œπ.length; Œπ.click()
	# decode: parse curl https://goo.gl/maps/7s6wKcW8zUC2

	if (t=Œπ.re`^"(.*)"$`) ‚Ü© '‚Äú'+t[1]+'‚Äù' # ! bad hack

	apply_regexes ‚Üê regs=> multiline(regs).split(/\n/g).map(Œª(t){ [a,b] ‚Üê t.split(/  +/g); Œπ = Œπ.replace(RegExp(a),b) })
	URL ‚Üê /\b(?:(?:https?|chrome):\/\/|(?:file|mailto):)(?:[^\s‚Äú‚Äù"<>]*\([^\s‚Äú‚Äù"<>]*\))?(?:[^\s‚Äú‚Äù"<>]*[^\s‚Äú‚Äù"<>)\]}‚ü©?!,.:;])?/g
	parse_alicetext ‚Üê Œπ=> _.zip(Œπ.split(URL).map(Œπ‚áí {type:'text', Œπ}), (Œπ.match(URL)||[]).map(Œπ‚áí {type:'url', Œπ}))._.flatten(true).filter(Œπ=> !(Œπ === undefined || (Œπ.type === 'text' && Œπ.Œπ === '')))

	# Œπ = parse_alicetext(Œπ).map(Œª(Œπ){t‚Üê; Œπ.type==='url' && (t=urijs(Œπ.Œπ)).domain()+t.path()==='google.com/webhp' && t.path('/search') && (Œπ.Œπ = t+''); ‚Ü© Œπ})._.map('Œπ').join('')

	if (sourcemap && sourcemap.title && sourcemap.url && (t=urijs(Œπ.slice(‚Ä¶sourcemap.url)),
		t.domain() in {'github.com':0} ||
		t.domain()+t.path()==='google.com/search'
		)) Œπ = Œπ.slice(‚Ä¶sourcemap.url)
	
	Œπ = Œπ.replace(/%CE%B6/g,'Œ∂')
	apply_regexes(Œª(){/*
	\bhttps://         http://
	\b(http://)www\.   $1
	\b(http://)(?:mail\.)?(google\.com/mail/)u/0/[?&]?#(?:(?:label|search)/[\w%+]+|\w+)/(\w+)        $1$2#all/$3
	 - Gmail( http://google\.com/mail/)                $1
	 - [\w.]+@gmail\.com( http://google\.com/mail/)    $1
	Fwd: (.* http://google\.com/mail/)                 $1
	\b(http://)en\.(?:m\.)?(wikipedia\.org/)           $1$2
	\b(http://)youtube\.com/watch[?&]v=([\w-_]+)       $1youtu.be/$2
	\b(http://youtu\.be/[\w-_]+)[?&]feature=youtu\.be  $1
	\b(http://youtu\.be/[\w-_]+)&(\S*)$                $1?$2
	 - YouTube( http://youtu\.be/)                     $1
	 \([oO]fficial [vV]ideo\)( http://youtu\.be/)      $1
	\b(http://)smile\.(amazon\.com/)                   $1$2
	\b(http://docs\.google\.com/document/d/[\w_-]+)/edit(?:[?&]ts=\w+)?$  $1
	\b(http://docs\.google\.com/spreadsheets/d/[\w_-]+)/edit(?:#gid=0)?$  $1
	 - Google Docs( http://docs\.google\.com/)         $1
	\b(http://dropbox\.com/\S*)[?&]dl=0$               $1
	\b(http://)facebook(\.com/)                        $1fb$2
	\b(http://fb\.com/)profile\.php\?id=               $1
	\(\d+\) (.* http://fb\.com/)                       $1
	 - Wikipedia, the free encyclopedia( http://wikipedia\.org/)  $1
	 - Album on Imgur( http://imgur\.com/)             $1
	 - Google Maps( http://google\.com/maps/)          $1
	*/})

	Œπ = parse_alicetext(Œπ).map(Œπ=>{t‚Üê;
		if (Œπ.type === 'url') {
			uri ‚Üê urijs(Œπ.Œπ)
			switch (uri.domain()) { default: ‚Ü© Œπ
				break; case 'amazon.com':
					uri.removeSearch(['sa-no-redirect','keywords','qid','ie','s','sr','tag','linkCode','camp','creative','creativeASIN'])
					uri.filename().re`^ref=[\w_]+$` && uri.filename('')
					if (t=uri.resource().re`^/(?:[\w-]+/)?(?:dp|gp)/(?:product/)?(\w+)/?$`) {Œπ.Œπ = 'http://amzn.com/'+t[1]; ‚Ü© Œπ}
				break; case 'fb.com': uri.removeSearch(['fref','hc_location','_rdr','pnref'])
				break; case 'google.com': if (uri.segment()._.isEqual(['search'])){ uri.removeSearch(['gws_rd','aqs','sourceid','es_sm','ie']); uri.hasSearch('q') && uri.removeSearch('oq') }
				}; Œπ.Œπ = uri+'' }
		‚Ü© Œπ}).map(Œπ=>Œπ.Œπ).join('')

	apply_regexes(Œª(){/*
	: \d{5,}: Amazon(?:Smile)?: Books( http://amzn.com/)        $1
	*/})

	Œπ = parse_alicetext(Œπ).map(Œπ=>{t‚Üê;
		if (Œπ.type === 'url') {
			uri ‚Üê urijs(Œπ.Œπ)
			if( Œπ.Œπ.re`\)$` && uri.hash()==='' ) Œπ.Œπ += '#'
			}
		‚Ü© Œπ}).map(Œπ=>Œπ.Œπ).join('')
################################################################################
	# http://smile.amazon.com/gp/product/0300078153
	# Seeing like a State http://amzn.com/0300078153

	# https://docs.google.com/spreadsheets/d/1wfFMPo8n_mpcoBCFdsIUUIt7oSm7d__Duex51yejbBQ/edit#gid=0
	# http://goo.gl/0nrUfP

	# generalize the ‚Äúfix & to ?‚Äù to many different things

	# http://www.ribbonfarm.com/2010/07/26/a-big-little-idea-called-legibility/
	# A Big Little Idea Called Legibility http://ribbonfarm.com/2010/07/26/a-big-little-idea-called-legibility/
	# http://ribbonfarm.com/2010/07/26/a-big-little-idea-called-legibility
	# http://ribbonfarm.com/2010/07/26/a-big-little-idea-called-legibility (3K words)

	‚Ü© Œπ}
E.sfx = Œª(ss,‚Ä¶Œπs){ Œπ ‚Üê ss[0]
	sh‚Çê`afplay ~/code/scratch/dotfiles/${Œπ}.wav`
	if (Œπ==='done' && osa·µ•`get volume settings`['output muted']){ br ‚Üê brightness; br.get().then(old=>{ br.set(0); (()=> br.set(old)).in(0.2) }) }
	}
üîÖüîÜ ‚Üê go=>{ Œπs ‚Üê [0,1,2.5,5.5,10,16].map(Œπ=>Œπ/16); ‚Ü© brightness.get().then(br=> brightness.set_overlay( Œπs[min(max( 0, find_closest_ISU(Œπs,br) + go ), Œπs.length-1 )] )) }
E.üîÖ = ()=> üîÖüîÜ(-1)
E.üîÜ = ()=> üîÖüîÜ(1)
E.moon = Œπ=>{ Œπ||(Œπ=Time()); moons ‚Üê [‚Ä¶'üåëüåíüåìüåîüåïüåñüåóüåò']; ‚Ü© moons[floor((npm`suncalc@1.7.0`.getMoonIllumination(Œπ).phase * moons.length + 0.5) % moons.length)] }
E.github_url = Œπ=>{
	github_remote_origin ‚Üê file=>{
		Œπ ‚Üê œÜ(file).root('/')
		root ‚Üê Œπ; while( root+''!=='/' && !root.œÜ`.git`.BAD_exists() ) root = root.œÜ`..`
		if( root+''==='/' ) throw _(Error()) <- ({ human:'did not find github remote origin for '+(file||'<anon>') })
		Œπ = (Œπ+'').slice((root+'/').length)
		t ‚Üê root.œÜ`.git/config`.ini['remote "origin"'].url.match(/github\.com[:/](.+)\/(.+)\.git/)
		# when HEAD is master, maybe use the commit id instead?
		‚Ü© encodeURI('http://github.com/'+t[1]+'/'+t[2]+'/blob/'+root.œÜ`.git/HEAD`.text.match(/refs\/heads\/(.+)/)[1]+'/'+Œπ) }
	[file,h] ‚Üê sb·µ•`view = deserialize(${Œπ}); s = view.sel(); [ view.file_name(), [view.rowcol(Œπ) for Œπ in [s[0].begin(), s[-1].end()]] ]`
	fm ‚Üê Œπ=> 'L'+(Œπ+1)
	‚Ü© github_remote_origin(file||'')+( _.isEqual(h[0],h[1])? '' : '#'+(h[0][0]===h[1][0]? fm(h[0][0]) : fm(h[0][0])+'-'+fm(h[1][0])) ) }
E.go_to = (‚Ä¶a)=>{ # synonyms: go_to, open, search?
	opt ‚Üê !Tprim(a[-1])? a.pop() : {}
	type ‚Üê a.length===1? null : a.shift()
	Œπ ‚Üê a[0]
	{new:new_,focus,in_app,sb_view_file_name} ‚Üê _({new:false, focus:true, in_app:undefined, sb_view_file_name:undefined}) <- (opt)

	is_url ‚Üê Œπ=> Œπ.re`^((https?|chrome-extension)://|file:|mailto:)`
	searchify ‚Üê Œπ=> 'https://www.google.com/search?q='+encodeURIComponent(Œπ)

	in_app && (in_app = in_app.toLowerCase())

	if (!focus) sfx`ack`

	# windows_in_current_space_in_app ‚Üê app=> hs·µ•`hs.fnutils.imap( hs.window.filter.new(false):setAppFilter(${app},{visible=true,currentSpace=true}):getWindows(), function(x) return x:id() end)`
	# apps_with_windows_in_current_space ‚Üê ()=> hs·µ•`hs.fnutils.imap( hs.window.filter.new(false):setAppFilter('default',{visible=true,currentSpace=true}):getWindows(), function(x) return x:application():name() end)`

############################# go to specific chrome ############################
	# 	wnd ‚Üê 1
	# 	is_chromeapp_active ‚Üê is_chromeapp_exist && osa·µ•`tell app "System Events"; get name of menu bar items of menu bar 1 of process (name of app ${app}); end tell`[1] !== 'Chrome'
	# 	# System Events got an error: osascript is not allowed assistive access
	# 	# compile_mapping(M('c','; '+js`terminal_do_script(${sh`Œ∂ --fresh ${js`(‚Ä¶${osa_activate_thing·µ•+''})('chrome')`}; exit`})`)).Œπ,
	# 	if (is_chromeapp_active){ osa·µ•`tell app "System Events"; activate app "sublime text"; click menu item ‚Ä¶${Tnum(wnd)? osa`(name of window ${wnd} of a)` : osa`${wnd}`} of menu 1 of menu bar item "Window" of menu bar 1 of process (name of app ${app}); end tell; activate app ${app}`; ‚Ü© }
	#  
	# 	t ‚Üê [2,1]; chrome_simple_js_·µ•(`alert('foo')`,{window:t[0],tab:t[1]})

	if (!type){ !new_ || ‚ÄΩ
		if (!is_url(Œπ)) Œπ = searchify(Œπ)
		if (!in_app && Œπ.re`^file:`){
			file ‚Üê decodeURI(Œπ).replace(re`^file:(//)?`,'')
			if (file[0]!=='/') file = require('path').normalize(require('path').join( œÜ(sb_view_file_name||‚ÄΩ).œÜ`..`+'', file ))
			if (œÜ(file).is_dir) in_app = 'path finder'
			else if (['.pdf','.m4a','.epub','.mobi'].includes(require('path').extname(file)));
			else if (['.png','.jpg'].includes(require('path').extname(file))) in_app = '#ql'
			else in_app = 'sublime text'
			[,p,r] ‚Üê decodeURI(Œπ).re`^(.*?:)([^]*)`; Œπ ‚Üê p+r.replace(/[^\/]+/g,encodeURIComponent.X)
			}
		if (in_app==='#ql') sh‚Çê`( &>/dev/null qlmanage -p ${file} &)`
		else{
			in_app ||( in_app = 'chrome' )
			if (in_app==='chrome'){
				t ‚Üê osa·µ•`chrome: URL of tabs of windows`.find_index_deep(t=> t===Œπ); if (t)
					{ [window_,tab] ‚Üê t; osa‚Çê`chrome: set active tab index of window ${window_+1} to ${tab+1}`; osa‚Çê`chrome: activate`; ‚Ü© } }
			if (Œπ.re`^chrome-extension://`) sh·µ•`duti -s com.google.Chrome chrome-extension` # bug workaround
			sh·µ•`open ‚Ä¶${in_app && sh`-b ${memoize_persist(Œπ=> catch_Œπ(()=> osa·µ•`id of app ${Œπ}`) )(in_app)}`} ${!focus && '-g'} ${Œπ}`
			}
		if (focus && in_app==='path finder') osa‚Çê`${in_app}: activate`
		}
	else if (type==='app'){ ( !new_ && focus && !in_app )||‚ÄΩ; app ‚Üê Œπ
		# ! should gather most of this information periodically async & record it. should use FRP.
		hint_screen ‚Üê {'sublime text':2, 'path finder':3, 'github desktop':4}
		isnt_standalone ‚Üê {ibooks:1, preview:1}
		if( app==='chrome' && (sh·µ•`ps -x -o comm`+'').includes('/Chrome Apps.localized/') ){ ['‚åò‚ê£',‚Ä¶'chrome‚Ü©'].map(robot_key_tap); ‚Ü© }
		hint_screen[app] && robot_key_tap('^'+hint_screen[app])
		isnt_standalone[app]? osa·µ•`${app}: if it is running then; activate; end if` : osa·µ•`${app}: activate`
		}
	else if (type==='screen'){ ( !new_ && focus && !in_app && /^[1-9]$/.test(Œπ+'') )||‚ÄΩ; robot_key_tap('^'+Œπ) }
	else if (type==='path'){ ( !new_ && focus )||‚ÄΩ
		# ! i think this might be a pretty badly designed type
		new_ = true
		if (Œπ.re`^(?:code|consume|documents|history|notes|pix)/.{1,80}:\d+:`){ !in_app || ‚ÄΩ # ! duplication with munge_stuff.py:FIND_RESULT
			# in_app = 'sublime text'
			[,Œπ,line] ‚Üê Œπ.re`^(.+):(\d+):$`
			Œπ = œÜ('~/file/'+Œπ)
			sh·µ•`'/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl' ${Œπ}:${line}`; ‚Ü© }
		if (in_app==='terminal'){
			here ‚Üê hs·µ•`hs.fnutils.imap( hs.window.filter.new(false):setAppFilter('Terminal',{visible=true,currentSpace=true}):getWindows(), function(x) return x:id() end)`
			unbusy ‚Üê ()=> osa·µ•`terminal: id of windows where busy = false`
			available ‚Üê here.length && _.intersection(here,unbusy())[0]
			terminal_do_script( sh`cd ${Œπ}; ‚Ä¶${!available && sh.clear}`, osa`‚Ä¶${!!available && osa`in (window 1 whose id = ${available})`}; ‚Ä¶${focus && 'activate'}` ); ‚Ü© }
		else go_to(encodeURI('file:'+œÜ(Œπ).root('/')),{in_app,focus,sb_view_file_name})
		}
	else ‚ÄΩ }

###### metaprogramming ‚Üí runtime macros built on top of template literals ######
# to design this correctly, (ss,‚Ä¶Œπs) => (s,‚Ä¶a) or maybe (`s${a}`) lol no
# existing semistandard usage is in
# 	im_autowhite
# 	scratch.txt
# 	Œ∂/index.Œ∂
# s is interned, so use it as a memoization key for things
E.is_template = ([ss,‚Ä¶Œπs])=> ss && Tarr(ss.raw) && ss.raw.length-1 === Œπs.length
tmpl_flatten ‚Üê (raw2,Œπs2)=> _.zip(raw2,Œπs2)._.flatten(true).slice(0,-1).filter(Œπ=> Œπ!=='')
simple_template ‚Üê Œª(ss,Œπs,filter){ is_template([ss,‚Ä¶Œπs]) || ‚ÄΩ
	falsy ‚Üê Œπ=> Œπ===undefined||Œπ===null||Œπ===false
	if( filter && !Tfun(filter) ){ [root,join] ‚Üê filter; filter = Œπ=> Tarr(Œπ)? Œπ.map(Œπ=> root`${Œπ}`).join(join) : falsy(Œπ)? '' : undefined }
	filter_special ‚Üê Œπ=> falsy(Œπ)? '' : Œπ+''
	Œπ ‚Üê tmpl_flatten( ss.raw.map(Œπ=> Œπ.replace(/\\(?=\$\{|`)/g,'')), Œπs.map(Œπ‚áí{raw:Œπ}) )
	for(i‚Üê0;i<Œπ.length-1;i++) if (Tstr(Œπ[i]) && !Tstr(Œπ[i+1])) Œπ[i] = Œπ[i].replace(/‚Ä¶$/,Œª(){ Œπ[i+1] = filter_special(Œπ[i+1].raw); i++; ‚Ü© '' })
	filter && (Œπ = Œπ.map(Œª(Œπ){t‚Üê; ‚Ü© Tstr(Œπ)? Œπ : (t=filter(Œπ.raw), t===undefined? Œπ : t) }))
	‚Ü© Œπ}
E.easy_template = (Œª(){
	read ‚Üê (ss,Œπs)=> tmpl_flatten(ss.raw,Œπs.map(Œπ=>[Œπ]))
	show ‚Üê Œª(Œπ){ raw ‚Üê ['']; Œπs ‚Üê []; Œπ.forEach(Œπ=> Tstr(Œπ)? raw[-1]+=Œπ : (Œπs.push(Œπ), raw.push('')) ); ‚Ü© [{raw},‚Ä¶Œπs] }
	‚Ü© f=> Œª(ss,‚Ä¶Œπs){‚Ü© f.call(@,read(ss,Œπs),show) }
	})()

E.clipboard = def({},'Œπ',{ get(){‚Ü© sh·µ•`pbpaste`+'' }, set(Œπ){ sh‚Çê`${sb.encode(Œπ)} |`` pbcopy` }, })
E.sb = Œª self(){‚Ü© self.Œπ() } # let personal configuration use sb as callable
[#Q sb.tab #Q].def({
	get(){
		r ‚Üê sb·µ•`[serialize(Œπ) for Œπ in (Œπ.view() for Œπ in sublime.windows() for Œπ in Œπ.sheets()) if Œπ]`
		r.active = sb·µ•`serialize(sublime.active_window().active_sheet().view())`
		;[‚Ä¶r,r.active].map(Œπ=> Œπ && [#Q Œπ.Œπ #Q].def({ enumerable:false,
			get(){‚Ü© sb·µ•` view = deserialize(${@}); view.substr(Region(0,view.size())) ` },
			set(Œπ){ sb_edit·µ•(@)` view.replace(edit,Region(0,view.size()),${Œπ}) ` },
			}) )
		[#Q r.push #Q].def({ enumerable:false, value:
			Œª(Œπ){ sh‚Çê`${sb.encode(Œπ)} |`` open -a 'Sublime Text.app' -f`; @.length = 0; (()=> _(@) <- (sb.tab) ).in(0.02) } # ! wtf async/sync mix
			})
		‚Ü© r },
	})
sb.encode = (()=>{
	line ‚Üê Œπ‚áí
		: Tstr(Œπ)? Œπ
		: util.inspect(Œπ,{ depth:null, maxArrayLength:null, })
	‚Ü© Œπ‚áí
		: Œπ===undefined? ''
		: Tarr(Œπ)? Œπ.map(line).join('\n')
		: line(Œπ) })()

E.re = Œª(ss,‚Ä¶Œπs){
	# would like to embed regex in [] and have that be ok
	Œπ ‚Üê simple_template(ss,Œπs,[(‚Ä¶a)=>re(‚Ä¶a).source,''])
	ENC ‚Üê Œπ=> T.RegExp(Œπ)? ( Œπ.flags.replace(/[gy]/g,'')==='u' || ‚ÄΩ, Œπ.source ) : (Œπ+'').replace(/([.*+?^${}()\[\]|\\])/g, '\\$1')
	‚Ü© RegExp( Œπ.map(Œπ=> !Tstr(Œπ)? ENC(Œπ.raw) : Œπ).join(''), 'u' ) }
assign_properties_in_E_informal({
'RegExp.prototype.Œª':Œª(Œπ){‚Ü© Œπ===undefined || Œπ===null? null : Œπ.match(@) },
'RegExp.prototype.g':{get(){‚Ü© RegExp(@.source,@.flags.replace(/g/,'')+'g') }},
'RegExp.prototype.i':{get(){‚Ü© RegExp(@.source,@.flags.replace(/i/,'')+'i') }},
'RegExp.prototype.m':{get(){‚Ü© RegExp(@.source,@.flags.replace(/m/,'')+'m') }},
'RegExp.prototype.u':{get(){‚Ü© RegExp(@.source,@.flags.replace(/u/,'')+'u') }},
'RegExp.prototype.y':{get(){‚Ü© RegExp(@.source,@.flags.replace(/y/,'')+'y') }},
'String.prototype.re':{get(){‚Ü© (ss,‚Ä¶Œπs)=> @.match(re(ss,‚Ä¶Œπs))}},
})

E.js = E.py = Œª(ss,‚Ä¶Œπs){ ENC ‚Üê JSON.stringify; ‚Ü© simple_template(ss,Œπs).map(Œπ=> !Tstr(Œπ)? ENC(Œπ.raw) : Œπ).join('') }

E.sh = Œª(ss,‚Ä¶Œπs){ENC ‚Üê Œπ=> "'"+(Œπ+'').replace(/'/g,"'\\''")+"'"; ‚Ü© simple_template(ss,Œπs,[sh,' ']).map(Œπ=> !Tstr(Œπ)? ENC(Œπ.raw) : Œπ).join('')}
sh.clear = "/usr/bin/clear && printf %s $'\\e[3J'"
ellipsify ‚Üê Œπ=> util_inspect_autodepth(Œπ.slice(0,100))+(Œπ.length>100?'‚Ä¶':'')
if_sh_err ‚Üê (name,code,Œπ)=>{ if (Œπ.status!==0) throw _(Error(name+'`'+code+'` ‚Üí status:'+Œπ.status+', stderr:'+ellipsify(Œπ.stderr+''))) <- (_(Œπ).pick('status','stdout','stderr')) }
E.sh·µ• = Œª(ss,‚Ä¶Œπs){ code ‚Üê sh(ss,‚Ä¶Œπs)
	Œπ ‚Üê child_process.spawnSync(code,{shell:true})
	if_sh_err('sh·µ•',code,Œπ)
	‚Ü© _(Œπ.stdout) <- ({ toString(‚Ä¶a){Œπ ‚Üê Buffer.prototype.toString.call(@,‚Ä¶a); ‚Ü© a.length===0? Œπ.replace(/\n$/,'') : Œπ} }) }
str_to_fd_stream ‚Üê Œπ=>{ t ‚Üê œÜ`/tmp/${random_id(20)}`; t.text = Œπ; fd ‚Üê fs.openSync(t+'','r'); ‚Ü© fs.createReadStream(null,{fd}) }
_sh‚Çê ‚Üê (ss,Œπs,opt={})=>{
	if (ss.length===2 && ss[0]==='' && ss[1].re`^ *\|$`){ opt.stdio && ‚ÄΩ; opt.stdio = [str_to_fd_stream(Œπs[0]),,,]; ‚Ü© sh‚Çê2(opt) }
	else ‚Ü© Œ†((yes,no)=>{
		code ‚Üê sh(ss,‚Ä¶Œπs)
		Œπ ‚Üê child_process.spawn(code,_({shell:true}) <- (_(opt).pick('stdio')))
			.on('exit',Œª(status){ if_sh_err('sh‚Çê',code,_({status}) <- (Œπ)); (status===0? yes : no)(Œπ) })
		}) }
E.sh‚Çê = (ss,‚Ä¶Œπs)=> _sh‚Çê(ss,Œπs)
E.sh‚Çê2 = opt=>(ss,‚Ä¶Œπs)=> _sh‚Çê(ss,Œπs,opt)

E.osa = Œª(ss,‚Ä¶Œπs){t‚Üê;
	Œπ ‚Üê simple_template(ss,Œπs)
	# ! this is such a mess
	if (Tstr(Œπ[0]) && (t=Œπ[0].re`^(?!tell )([\w ]+):`)){ Œπ[0] = Œπ[0].slice(t[0].length); Œπ = [osa`tell app ${t[1]};`, ‚Ä¶Œπ, '; end tell'] }
	if (!Tstr(Œπ[0]) && Tstr(Œπ[0].raw) && Œπ[0].raw.re`^[\w ]+$` && Tstr(Œπ[1]) && (t=Œπ[1].re`^ *:`)){ Œπ[1] = Œπ[1].slice(t[0].length); Œπ = [osa`tell app ${Œπ.shift().raw};`, ‚Ä¶Œπ, '; end tell'] }
	‚Ü© Œπ.map(Œπ=> !Tstr(Œπ)? applescript.print(Œπ.raw) : Œπ.replace(/;/g,'\n')).join('') }
E.osa·µ• = Œª(ss,‚Ä¶Œπs){ Œπ ‚Üê osa(ss,‚Ä¶Œπs); ‚Ü© applescript.parse(sh·µ•`osascript -ss -e ${Œπ}`+'') }
E.osa‚Çê = Œª(ss,‚Ä¶Œπs){ Œπ ‚Üê osa(ss,‚Ä¶Œπs); sh‚Çê`osascript -ss -e ${Œπ}` }

E.terminal_do_script = Œª(a,b){ œÜ`/tmp/__¬∑`.Œπ = a; osa·µ•`terminal: do script "¬∑" ‚Ä¶${b}` } # ~/.bashrc.Œ∂ :: E['¬∑']
E.chrome_simple_osa·µ• = (Œπ,{tab,window=0})=> osa·µ•`chrome: execute window ‚Ä¶${window+1}'s tab ‚Ä¶${tab+1} javascript ${Œ∂_compile(Œπ)}`
E.chrome_simple_js_·µ• = (Œπ,{tab,window=0})=> osa·µ•`chrome: tell window ‚Ä¶${window+1}'s tab ‚Ä¶${tab+1} to set URL to ${'javascript:'+Œ∂_compile(Œπ)}`
# E.chrome·µ• = ‚Ä° not actually used ‚Ä° wait, nope, is actually used, but mostly in one-off scripts
	# Œª(Œπ,tab){tab = tab!==undefined? 'tab '+(tab+1) : 'active tab'
	# 	# E.chrome_$·µ• = Œª(Œπ,tab){r‚Üê; $null ‚Üê '__$null_'+random_id(10); fst ‚Üê 1; while ((r=chrome·µ•("if (window.jQuery){"+Œπ+"} else {"+(fst? (fst=0, "t ‚Üê document.createElement('script'); t.src = 'https://code.jquery.com/jquery-3.1.1.min.js'; document.getElementsByTagName('head')[0].appendChild(t)") : "")+"; '"+$null+"'}",tab))===$null); ‚Ü© r}
	# # probably add a random_id(10) call to '#applescript_hack'
	# 	t ‚Üê "t ‚Üê document.querySelectorAll('#applescript_hack')[0]; t && t.parentNode.removeChild(t); Œπ ‚Üê (0,eval)("+JSON.stringify(Œ∂_compile(Œπ))+"); t ‚Üê document.createElement('div'); t.id = 'applescript_hack'; t.style = 'display:none;'; t.textContent = JSON.stringify(Œπ); t2 ‚Üê document.querySelectorAll('head')[0]; t2.insertBefore(t,t2.firstChild); undefined"
	# 	chrome_simple_js_·µ•(t,tab)
	# 	t ‚Üê "document.querySelectorAll('#applescript_hack')[0].textContent"
	# 	‚Ü© JSON.parse(chrome_simple_osa·µ•(t,tab) || '""') }

fs_ipc_emit ‚Üê (port,Œπ)=>{ œÜ`/tmp/fs_ipc_${port}`.Œπ = Œπ; ‚Ü© sh·µ•`curl -s -X PUT localhost:${port}`+'' }

E.sb·µ• = Œª(ss,‚Ä¶Œπs){
	ENC ‚Üê JSON.stringify; Œπ ‚Üê simple_template(ss,Œπs).map(Œπ=> !Tstr(Œπ)? ENC(Œπ.raw) : Œπ).join('')
	t ‚Üê JSON.parse(fs_ipc_emit(34289,Œπ)); t===null && (t = undefined); ‚Ü© t }
E.sb_edit·µ• = view=>(ss,‚Ä¶Œπs)=>{ sb·µ•`edit(${view},${py(ss,‚Ä¶Œπs)})` }

sh_hash ‚Üê _.memoize(Œπ=> sh·µ•`which ${Œπ}`+'') # ! should use FRP to background-recompute hash values after certain amounts of time and discard hash values after certain amounts of time

[#Q E.hs·µ• #Q].def(()=> !(sh·µ•`which hs ;:`+'')? undefined : Œª(ss,‚Ä¶Œπs){
	ENC ‚Üê Œπ=> Tstr(Œπ) || Tnum(Œπ)? JSON.stringify(Œπ) : ‚ÄΩ; Œπ ‚Üê simple_template(ss,Œπs).map(Œπ=> !Tstr(Œπ)? ENC(Œπ.raw) : Œπ).join('')
	# t ‚Üê sh·µ•`hs -c ${Œπ}`
	t ‚Üê child_process.spawnSync(sh_hash('hs'),['-c',Œπ]).stdout
	t ‚Üê (t+'').split('\n')[-1]; try{‚Ü© JSON.parse(t)[0] }catch(e){‚Ü© t } } )

E.ts·µ• = Œª(ss,‚Ä¶Œπs){
	ENC ‚Üê JSON.stringify; Œπ ‚Üê simple_template(ss,Œπs).map(Œπ=> !Tstr(Œπ)? ENC(Œπ.raw) : Œπ).join('')
	Œπ = 'require "totalspaces2"; TS = TotalSpaces2; '+Œπ
	PORT = 34290
	R ‚Üê ()=> JSON.parse(fs_ipc_emit(PORT,Œπ))[0]
	launch_serv ‚Üê Œª(){
		(sh·µ•`gem list`+'').re`(^|\n)totalspaces2 ` || ‚ÄΩ
		tmp ‚Üê œÜ`/tmp/evalserv_${random_id(9)}.rb`; tmp.text = String.raw`#!/usr/bin/env ruby
			require "socket"; require "json"
			server = TCPServer.new("localhost",${PORT})
			loop do
			  t = server.accept
			  r = JSON.generate([eval(File.read("/tmp/fs_ipc_#{${PORT}}"))])
			  t.print "HTTP/1.1 200 OK\r\n"+"Content-Type: text/plain\r\n"+"Content-Length: #{r.bytesize}\r\n"+"Connection: close\r\n"+"\r\n"+r
			  t.close
			end`
		sh·µ•`chmod +x ${tmp}`; child_process.spawn(tmp,{shell:true,detached:true,stdio:'ignore'}).unref() }
	try{ ‚Ü© R() }catch(e){ if (e.status===7) launch_serv(); sleep(0.1); ‚Ü© R() } }

# such hack
json2_read ‚Üê Œπ=>{ r ‚Üê JSON.parse(Œπ); (Œª Œõ(Œπ,k,o){if (Œπ.type==='Buffer') {
	t ‚Üê 'data' in Œπ || 'utf8' in Œπ? new Buffer(Œπ.data||Œπ.utf8) : 'base64' in Œπ? new Buffer(Œπ.base64,'base64') : ‚ÄΩ
	if (o===undefined) r = t; else o[k] = t
	} else if (!Tprim(Œπ)) _(Œπ).forEach(Œõ)})(r); ‚Ü© r }
json2_show ‚Üê Œπ=> JSON_pretty(Œπ,Œª(Œπ){t‚Üê;
	if (Buffer.isBuffer(Œπ)) ‚Ü© Œπ.equals(new Buffer(t=Œπ+''))? {type:'Buffer', utf8:t} : {type:'Buffer', base64:Œπ.toString('base64')}
	‚Ü© Œπ})

[#Q E.œÜ #Q].def(()=>{
	ENC ‚Üê Œπ=> Œπ.re`/`? Œπ.replace(/[\/%]/g, encodeURIComponent.X) : Œπ
	œÜ.‚Åª¬π = Œπ=> /%2F/i.test(Œπ)? Œπ.replace(/%2[F5]/gi, decodeURIComponent.X) : Œπ

	existsSync ‚Üê Œπ=> !T.Error(catch_union(()=> fs.accessSync(Œπ)))
	mkdir_p ‚Üê Œª Œõ(Œπ){ try{ fs.mkdirSync(Œπ) }catch(e){ if (e.code==='EEXIST'||e.code==='EISDIR') ‚Ü©; t ‚Üê path.dirname(Œπ); if (e.code!=='ENOENT' || Œπ===t) throw e; Œõ(t); fs.mkdirSync(Œπ) } }
	# walk ‚Üê Œª*(root,files){root += '/'
	# 	walk_ ‚Üê Œª*(Œπ){try {l ‚Üê fs.readdirSync(root+Œπ); for (i‚Üê0;i<l.length;i++){t ‚Üê Œπ+l[i]; try{ fs.statSync(root+t).isDirectory()? (yield root+t, yield* walk_(t+'/')) : (files && (yield root+t)) }catch(e){} }} catch(e){} }
	# 	yield* walk_('') }
	read_file ‚Üê Œª(Œπ){ try{‚Ü© fs.readFileSync(Œπ) }catch(e){ if (!(e.code==='ENOENT')) throw e } }
	ensure_exists ‚Üê Œª(Œπ,ifdne){ existsSync(Œπ) || ( mkdir_p(path.resolve(path.dirname(Œπ))), fs.writeFileSync(Œπ,ifdne) ) }
	write_file ‚Üê Œª(Œπ,data){ try{ fs.writeFileSync(Œπ,data) }catch(e){ if (!(e.code==='ENOENT')) throw e; ensure_exists(Œπ,data) } }
	open ‚Üê Œª(Œπ,ifdne,f){
		ensure_exists(Œπ,ifdne); Lc ‚Üê new Œ¶(Œπ).size
		fd ‚Üê fs.openSync(Œπ,'r+'); f({
			get L(){‚Ü© Lc},
			read(i,L){t ‚Üê new Buffer(L); fs.readSync(fd,t,0,L,i) === L || ‚ÄΩ; ‚Ü© t},
			write(Œπ,i){L ‚Üê fs.writeSync(fd,Œπ,i); Lc = max(Lc, L+i)},
			truncate(L){fs.ftruncateSync(fd,L); Lc = min(Lc,L)},
			indexOf_skipping(from,to,step,find,skip){fl‚Üê@
				if (from<0) from += fl.L; if (to<0) to += fl.L; from = min(max(0, from ),fl.L-1); to = min(max(-1, to ),fl.L)
				if (!(step===-1 && from>to)) ‚ÄΩ('TODO')
				d ‚Üê fl.read(to+1,from-to)
				for(i‚Üêfrom;i>to;i+=step) {if (d[i-(to+1)]===find) ‚Ü© i; else if (chr(d[i-(to+1)]).match(skip)); else ‚Ü© null}
				},
			}); fs.closeSync(fd)}
	globmatch ‚Üê (glob,Œπ)=> Œπ.re`^‚Ä¶${_(glob).map(Œπ=> Œπ==='*'? '.*' : re`${Œπ}`.source).join('')}$`
	[#Q œÜ.cwd #Q].def({get(){‚Ü© new Œ¶(process.cwd()) }, set(Œπ){ t ‚Üê œÜ(Œπ+'')._Œπ; mkdir_p(t); process.chdir(t) }})

	normHs ‚Üê Œª(Œπ){if (Œπ._.isEqual(['~'])) ‚Ü© [process.env.HOME]; Tstr(Œπ[0]) && (Œπ[0] = Œπ[0].replace(/^~(?=\/)/,process.env.HOME)); ‚Ü© Œπ}
	Œª Œ¶(Œπ){@._Œπ = Œπ}; Œ¶.prototype = {
		œÜ,
		toString(){‚Ü© @._Œπ },
		toJSON(){‚Ü© {type:'œÜ', Œπ:@._Œπ} },
		inspect(À£,opts){‚Ü© opts.stylize('œÜ','special')+opts.stylize(util_inspect_autodepth(@._Œπ.replace(re`^${process.env.HOME}(?=/|$)`,'~')).replace(/^'|'$/g,'`'),'string') },
		get size(){‚Ü© fs.statSync(@._Œπ).size },
		get nlink(){‚Ü© fs.statSync(@._Œπ).nlink },
		get mtime(){‚Ü© fs.statSync(@._Œπ).mtime },
		get birthtime(){‚Ü© fs.statSync(@._Œπ).birthtime },
		get url(){‚Ü© encodeURI('file:'+@.root('/')) }, # ! should this be part of root
		get is_dir(){‚Ü© !!catch_Œπ(()=> fs.statSync(@._Œπ).isDirectory()) },
		get name(){‚Ü© path.basename(@._Œπ) },
		BAD_exists(){‚Ü© existsSync(@._Œπ) },
		TMP_children(){‚Ü© (Œª Œõ(Œπ){‚Ü© œÜ(Œπ).is_dir? fs.readdirSync(Œπ).map(t=> Œπ+'/'+t).mapcat(Œõ) : [Œπ] })(@._Œπ) },
		TMP_parents(){ r ‚Üê [@.root('/')]; while(r[-1].œÜ`..`+'' !== r[-1]+'') r.push(r[-1].œÜ`..`); ‚Ü© r.slice(1) },
		root(x){switch(arguments.length){default: ‚ÄΩ
			case 0: ‚Ü© @._Œπ[0]==='/'? '/' : '.'
			case 1: ‚Ü© new Œ¶( x==='/'? path.resolve(@._Œπ) : x==='.'? path.relative(x,@._Œπ) : ‚ÄΩ('not yet implemented: nonstandard roots') )
			}},
		ensure_dir(){ @.œÜ`..`.BAD_exists() || mkdir_p(@.œÜ`..`+''); ‚Ü© @ },

		# get Œπ(){‚Ü©},
		set Œπ(Œπ){
			if (@.is_dir) ‚ÄΩ('TODO')
			if (Œπ == null){ catch_union(()=> fs.unlinkSync(@._Œπ) ); ‚Ü© }
			e ‚Üê path.extname(@._Œπ)
			if (e==='.csv'){ @.csv = Œπ; ‚Ü© }
			if (e==='.xml'){ @.xml = Œπ; ‚Ü© }
			if (e==='.plist'){ @.plist = Œπ; ‚Ü© }
			Œπ = e==='.json'? JSON_pretty(Œπ) :
				Tstr(Œπ)? Œπ :
				JSON_pretty(Œπ)
			write_file(@._Œπ,Œπ) },
		get buf(){‚Ü© read_file(@._Œπ) || new Buffer(0) },
		set buf(Œπ){ write_file(@._Œπ,Œπ) },
		get base64(){‚Ü© new Buffer(@.text,'base64') },
		# set base64(Œπ){},
		get text(){‚Ü© (read_file(@._Œπ) || '')+'' },
		set text(Œπ){ write_file(@._Œπ,Œπ) },
		get lines(){‚Ü© Œª(‚Ä¶Œπs){
			d ‚Üê ((read_file(@._Œπ)||'\n')+'').replace(/\n$/,'').split('\n')
			if (Œπs.length > 1) ‚Ü© Œπs.map(Œπ=> Tnum(Œπ)? d[Œπ] : d.slice(Œπ.re`^(\d+):$`[1]|0).join('\n')+'\n')
			else if (Œπs.length === 0){
				‚Ü© {
					map(‚Ä¶a){‚Ü© d.map(‚Ä¶a)},
					} }
			else ‚ÄΩ('TODO')
			}},
		set lines(Œπ){ write_file(@._Œπ, Œπ.join('\n')+'\n') },
		get json(){‚Ü© JSON.parse(read_file(@._Œπ) || 'null') },
		set json(Œπ){ write_file(@._Œπ, JSON_pretty(Œπ)) },
		get json2(){‚Ü© json2_read(@.text) },
		set json2(Œπ){ @.text = json2_show(Œπ) },
		get ini(){‚Ü© npm`ini@1.3.4`.parse(@.text) },
		# set ini(Œπ){},
		# get csv(){‚Ü©},
		set csv(Œπ){ t ‚Üê œÜ`/tmp/csv_${random_id(25)}`; t.json = Œπ; sh·µ•`Œ∂ ${'npm`csv@0.4.6`.stringify('+js`œÜ(${t+''}).json,Œª(e,Œπ){ œÜ(${@.root('/')+''}).buf = Œπ })`}` },
		# get xml(){‚Ü© JSON.parse(sh·µ•`Œ∂ ${js`npm`xml2js@0.4.17`.parseString(œÜ(${@+''}).text,Œª(e,Œπ){ process.stdout.write(JSON.stringify(Œπ)) })`}`+'') },
		set xml(Œπ){ @.text = npm`xmlbuilder@8.2.2`.create(Œπ,{allowSurrogateChars:true}).end({pretty:true}) },
		get plist(){t‚Üê; buf ‚Üê @.buf; ‚Ü© 0?0
			# in case bplist-parser has bugs, this is available:
			# which ‚Üê memoize_persist(Œπ=>{ try{ sh·µ•`which ${Œπ}`; ‚Ü© true }catch(e){} })
			# : which('plutil')? npm`plist@2.1.0`.parse(sh·µ•`plutil -convert xml1 -o - ${@.root('/')+''}`+'')
			: buf.slice(0,6)+''==='bplist'? ( t= œÜ`/tmp/plist_${random_id(25)}`, sh·µ•`Œ∂ ${'npm`bplist-parser@0.1.1`.parseFile('+js`${@.root('/')+''},Œª(e,Œπ){ œÜ(${t+''}).plist = Œπ })`}`, t.plist )
			: npm`plist@2.1.0`.parse(@.text)
			},
		set plist(Œπ){ @.text = npm`plist@2.1.0`.build(Œπ) },
		get json_array__synchronized(){‚Ü© Œª(‚Ä¶Œπs){_Œπ‚Üê@._Œπ
			if (Œπs.length) ‚ÄΩ('TODO')
			d ‚Üê JSON.parse((read_file(_Œπ)||'[]')+'')
			‚Ü© {
			get length(){‚Ü© d.length},
			push(‚Ä¶a){a.map(Œª(Œπ){
				d.push(Œπ)
				open(_Œπ,'[]',Œª(fl){
					i ‚Üê fl.indexOf_skipping(-1,-1e4,-1,ord(']'),/[ \n\t]/) || ‚ÄΩ('bad file')
					is_0 ‚Üê fl.indexOf_skipping(i-1,-1e4,-1,ord('['),/[ \n\t]/)!==null
					fl.write((is_0?'':',')+JSON.stringify(Œπ,null,'  ')+']',i)
					})
				})},
			filter(f){‚Ü© d._.filter(f)},
			} }},
		}
	Œª Œ¶s(Œπ){@._Œπ = Œπ}; Œ¶s.prototype = {
		inspect(À£,opts){‚Ü© opts.stylize('œÜ','special')+util.inspect(@._Œπ,opts)},
		get name_TMP(){‚Ü© @._Œπ.map(Œπ=> new Œ¶(Œπ).name)}, # fs.readdirSync
		get œÜs(){‚Ü© @._Œπ.map(Œπ=> new Œ¶(Œπ))}, # [œÜ]
		}
	Œª œÜ(ss,‚Ä¶Œπs){
		head ‚Üê @ instanceof Œ¶ && @._Œπ
		if (@ instanceof Œ¶s) ‚ÄΩ('not yet implemented')
		tmpl ‚Üê is_template([ss,‚Ä¶Œπs])
		if (tmpl){Œπ ‚Üê simple_template(ss,Œπs,[œÜ,'/']); if (Œπ.filter(Tstr).join('').re`\*|\{[^}]*?,`) {
			if (Œπ.length > 1) ‚ÄΩ('not yet implemented * ** ${}',Œπ)
			Œπ = normHs(Œπ)
			Œπ = Œπ[0]
			if (Œπ.includes('**')) ‚ÄΩ('not yet implemented ** ${}',Œπ)
			r ‚Üê ['.']
			if (Œπ[0]==='/') r = ['/']
			Œπ.split('/').forEach(Œª(Œπ){
				if (Œπ==='')‚Ü©;
				r = r.mapcat(Œª(r){
					if (Œπ === '.') ‚Ü© [r]
					if (Œπ === '..') ‚Ü© [r==='.'? '..' : r.split('/').every(Œπ=>Œπ==='..')? r+'/..' : path.dirname(r)]
					‚Ü© fs.readdirSync(r).filter(b=> globmatch(Œπ,b)).map(b=> r+'/'+b)
					})
				})
			‚Ü© new Œ¶s(r) } }
		else {Œπ ‚Üê ss; if (Œπs.length || Tarr(Œπ)) ‚ÄΩ('not yet implemented'); if (Œπ instanceof Œ¶s) ‚ÄΩ('not yet implemented')}
		if (tmpl){Œπ = normHs(Œπ).map(Œπ=> !Tstr(Œπ)? ENC(Œπ.raw+'') : Œπ).join('')}
		else if (Œπ instanceof Œ¶){‚Ü© head && Œπ._Œπ[0]!=='/'? new Œ¶(head+'/'+Œπ._Œπ) : Œπ}
		else {Œπ = (Œπ+'').replace(/^~(?=\/|$)/,process.env.HOME)}
		‚Ü© new Œ¶(path.normalize(head? head+'/'+Œπ : Œπ).replace(/(?!^)\/$/,'')) }
	‚Ü© œÜ })

############################ personal configuration ############################
sb.Œπ = ()=> sb.tab.active.Œπ
E.p = Œª(Œπ){ t ‚Üê clipboard; ‚Ü© arguments.length === 0? t.Œπ :( t.Œπ = Œπ ) }

#################################### Œ∂ infra ###################################
;[process,module].map(Œπ=> Œπ.inspect = Œª(){‚Ü© '{'+Object.getOwnPropertyNames(@).map(Œπ=> Œπ+':').join(', ')+'}' }) # ‚Ä° hack, like the [1] * 5 thing in Œ∂_repl_start. clean up by: can we override builtin inspects without problems? then: defining solid inspect functions for more things. otherwise: figure out something else.
Number_toFixed ‚Üê Œª(Œ∏,Œπ){ Œ∏ = round(Œ∏/pow(10,-Œπ))*pow(10,-Œπ); ‚Ü© Œπ>0? Œ∏.toFixed(Œπ) : Œ∏+'' }
E.pretty_time_num = Œπ=> _(new Number(Œπ)) <- ({inspect:Œª(À£,opt){ P ‚Üê 20; Œπ‚Üê@; [Œπ,u] ‚Üê (Œπ >= P/1e3? [Œπ,'s'] : [Œπ*1e6,'Œºs']); ‚Ü© opt.stylize(Number_toFixed(Œπ,-max(-3,floor(log10(Œπ/P))))+u,'number') }})
_(util.inspect.styles) <- ({null:'grey',quote:'bold'})
;['global','Object'].map(Œπ=>{
global[Œπ].inspect = Œª(d,opt){‚Ü© opt.stylize(Œπ,'quote') }
})
assign_properties_in_E_informal({
'Number.prototype.inspect':Œª(d,opt){'use strict'; ‚Ü© opt.stylize(( Object.is(@,-0)? '-0' : @===‚àû? '‚àû' : @===-‚àû? '-‚àû' : @+'' ), 'number') },
})
E.cn = { log:(‚Ä¶a)=> console.log(
	is_template(a)?
		easy_template(Œπ=>Œπ)(‚Ä¶a).map(Œπ=> Tstr(Œπ)? Œπ : util_inspect_autodepth(Œπ[0],{colors:true})).join('') :
		a.map(Œπ=> Tstr(Œπ)? Œπ : util_inspect_autodepth(Œπ,{colors:true})).join(' ')
		) }
E.util_inspect_autodepth = Œª(Œπ,opt={}){ opt.L || (opt.L = 1e6); last‚Üê; for(i‚Üê1;;i++){ r ‚Üê util.inspect(Œπ,_({maxArrayLength:opt.L/3 |0, depth:i}) <- (opt)); if (r===last || r.length > opt.L) ‚Ü© last===undefined? '<too large>' : last; last = r } }

E.‚Ä°_repl_start = ()=> Œ∂_repl_start({
	# i know how to make the good repl for ct. i want to, but im tired
	prompt:'\x1b[30m\x1b[100m‚Ä°\x1b[0m ',
	compile:Œπ=>{t‚Üê;
		lock ‚Üê 0?0
			: ['ct','chrome_tabs','ps2','d','bookmarks']._.contains(Œπ)? 'require_new(œÜ`~/.bashrc.Œ∂`).'+Œπ+'()'
			: (t= Œπ.re`^f(?: (.+))?$` )? js`go_to('path',${t[1]||'.'})`
			: Œπ
		lock===Œπ || cn.log('‚õì  '+lock)
		‚Ü© Œ∂_compile(lock) }, })
E.Œ∂_repl_start = opt=>{ opt = _({compile:Œ∂_compile, prompt:'\x1b[30m\x1b[42mŒ∂\x1b[0m '}) <- (opt)
	‚Ü© (f=> f.call( repl.start(_({useGlobal:true}) <- (_(opt).pick('prompt'))) ))(Œª(){
	@.In = []; @.Out = []
	super_ ‚Üê @.completer; @.completer = Œª(line,cb){ line.trim()===''? cb(null,[]) : super_.call(@,line,cb) }
	inspect ‚Üê Œπ=> util_inspect_autodepth(Œπ,{colors:@.useColors})
	@.removeAllListeners('line').on('line',Œª(line){
		global.rl = @
		if (line==='') ‚Ü©;
		if (@.bufferedCommand){ @.history[1] += '\n'+@.history[0]; @.history.shift() }
		t ‚Üê @.bufferedCommand + (line||''); code ‚Üê t
		if (/(^\{[^]*\}$)|(^Œª\()/.test(t)) t = '('+t+')' # ! it is a clumsy hack to put this on all of these code paths
		t = opt.compile(t)
		try{ sc ‚Üê new vm.Script(t,{ filename:'repl', displayErrors:false }) }
		catch(e){ if( e.name==='SyntaxError' ){ @.bufferedCommand += line+'\n'; @.outputStream.write('    '); ‚Ü© }; e.stack = e.name+': '+e.message+'\n    at <repl>'; err ‚Üê e }
		if (sc)
		try{ ret ‚Üê sc.runInThisContext() }
		catch(e){ e && Tstr(e.stack) && (e.stack = e.stack.replace(/^([^]*)at repl:(.*)[^]*?$/,'$1at <repl:$2>')); err ‚Üê e }
		œÜ`~/.archive_Œ∂`.text = œÜ`~/.archive_Œ∂`.text + JSON.stringify({time:Time(), code}) + '\n'
		@.In.push(code); @.Out.push(err || ret)
		if (err) @._domain.emit('error', err.err || err)
		@.bufferedCommand = ''
		if (!err && ret !== undefined) {
			global.__ = ret
			try{
				if (Tarr(ret) && ret.length > 1 && ret.every(Œπ=> Œπ===ret[0]) && _.range(ret.length).every(Œπ=> Œπ in ret))
					t ‚Üê inspect([ret[0]])+' * '+inspect(ret.length)
				else
					t ‚Üê inspect(ret)
			}catch(e){ t ‚Üê '<repl inspect failed>:\n'+(e&&e.stack) }
			@.outputStream.write(t+'\n') }
		@.displayPrompt()
		})
	@.removeAllListeners('SIGINT').on('SIGINT',Œª(){
		if( @.bufferedCommand+@.line ){ @.clearLine(); @.lineParser.reset(); @.bufferedCommand = ''; @.lines.level = []; @.displayPrompt() }
		else{ @.clearLine(); @.close() }
		})
	delete @.context._; @.context._ = _
	‚Ü© @
	}) }

##################################### main #####################################
sh_ify ‚Üê Œπ=>{t‚Üê; ‚Ü© Œ†( 0?0
	: T.Promise(Œπ)? Œπ.then(sh_ify.X)
	: Œπ===undefined? {}
	: Tstr(Œπ)? {out:Œπ}
	: T.boolean(Œπ)? {code:Œπ?0:1}
	: (t=catch_union(()=> JSON.stringify(Œπ)), !T.Error(t))? {out:t}
	: {out:Œπ+''} )}
eval_ ‚Üê Œª __53gt7j(Œπ){
	try{
		try{ new vm.Script(Œπ); ‚Ü© (0,eval)(Œπ) }catch(e){ if(!( e.name==='SyntaxError' && e.message==='Illegal return statement' )) throw e; ‚Ü© (0,eval)('(()=>{'+Œπ+'})()') }
	}catch(e){ e!==undefined && e!==null && Tstr(e.stack) && (e.stack = e.stack.replace(/    at __53gt7j[^]*/,'    at <eval>')); throw e }
	}
E.Œ∂_main = opt=>{Œπ‚Üê; {compile,a} ‚Üê opt=_({ compile:Œ∂_compile }) <- (opt)
	a[0]==='--fresh' && a.shift()
	if( !a.length ) Œ∂_repl_start(opt)
	else if( Œπ=a[0], œÜ(Œπ).BAD_exists() || Œπ.re`^\.?/` ){ process.argv = [process.argv[0],‚Ä¶a]; t ‚Üê œÜ(Œπ).root('/')+''; o‚ÜêModule._cache;m‚ÜêModule._resolveFilename(t,null,true);oŒπ‚Üêo[m]; o[m] = undefined; Module._load(t,null,true); o[m] = oŒπ }
	else {
		global.require = require; global.code = a.shift(); global.a = a; [global.a0,global.a1] = a; global.Œπ = a[0]
		code = code.replace(/;\s*$/,'; undefined')
		code = opt.compile(code)
		sh_ify(eval_(opt.compile(code)))
			.then(Œπ=>{ Œπ.out && process.stdout.write(Œπ.out); Œπ.code &&( process.exitCode = Œπ.code ) })
		}
	}
if_main_do((‚Ä¶a)=> Œ∂_main({a}) )
# inject as .bashrc
# 	sh` Œ∂(){ if [[ $# = 0 || $1 =~ ^\.?/ || $1 = --fresh ]]; then /usr/local/bin/Œ∂ "$@"; else Œ∂Œª "$@"; fi; } `

############################# remaining work for œÜ #############################
# https://www.npmjs.com/package/glob-to-regexp
/*
formats include
	image               
	pixels              
	png                 .png
	jpg                 .jpg
	plist               /^<\?xml / && /<\/plist>\s*$/           read: npm::plist.parse(it)     show: npm::plist.build(it)
	xml                 .xml || /^<\?xml /
	base64              .64
	pixels (grey)       
	stdin               fd:0
	FIFO                fd:0...
	:executable         ,/^#!/ | try{fs.accessSync(Œπ,fs.X_OK); ‚Ü© true} catch(e){‚Ü© false}
	directory relative
	directory absolute
formats are Really stream formats
the formats are complicated to interact with, because
* GET POST PUT have really tangly apis for all sorts of efficiency concerns
* DELETE especially, we want to make some distinctions to make sure we don‚Äôt fuck things up accidentally (although trash could help)

# paths can have extensions, which are often meaningful. (basename/filename, ext/suffix. path.basename,dirname,extname)

# we need to be careful with non-atomic transactions
# we need to think about how this interacts with concurrency
# we need to think about how this interacts with distributed machines (e.g. mixing file and http URLs)
# 	‚Äúlike, it should be caching urls all the time.‚Äù

######################## things i need ** globbing to do #######################
scratch/scratch.txt:107:œÜ`**`.map(Œπ=> [Œπ+'',Œπ.get()])._.groupBy(1)._.values().map(Œπ=> Œπ._.map(0)).filter(Œπ=> Œπ.length > 1)
scratch/sublime/index.Œ∂:60:	œÜ(arg.in).œÜ`**`.filter(Œπ=> !Œπ.dir()).map(Œª(Œπ){Œπ+=''; t‚Üê; Œπ = Œπ.slice(arg.in.length).replace(/^\//,'')
scratch/sublime/index.Œ∂:66:	out ‚Üê œÜ(arg.out).œÜ`**`.filter(Œª(Œπ){Œπ+=''; ‚Ü© roots.some(Œª(r){‚Ü© Œπ.indexOf(r) === 0})}).filter(Œπ=> !Œπ.dir()).map(Œπ=> Œπ+'')
*/

# i'd like that to be #!/usr/bin/env node --max_old_space_size=10000 
# Sequence.prototype.map = Œª(f){ for (var Œπ of @) yield f(Œπ) }

##################################### cruft ####################################
################################# browser fixes ################################
# BROWSERp ‚Üê typeof window!=='undefined'
# if (BROWSERp) if (!module.parent) module.parent = '<browser>'
# if (BROWSERp) typeof Buffer!=='undefined' && (window.Buffer = require('buffer').Buffer)
# if (BROWSERp) E.cn = { log:Œª(‚Ä¶a){ console.log(‚Ä¶a); window.__ = a[-1] } }

# 'Function.prototype.at':lazy('at',Œª(){priorityqueuejs ‚Üê require('priorityqueuejs')
# 	# https://github.com/Automattic/kue
# 	# https://github.com/rschmukler/agenda
# 	# robust to setTimeout taking extra time
# 	# ! not robust to the process failing ! should use redis or something instead !
# 	# ! wth is up with the { hrtime() <-> time } comparison
# 	qu ‚Üê new priorityqueuejs((a,b)=> b.time-a.time)
# 	P‚Üê; ensure ‚Üê Œª(){if (P) ‚Ü©; P = true; (Œª Œõ(){t‚Üê;
# 		qu.size() === 0? (P = false) : qu.peek().time < hrtime()? (t=qu.deq(), t.Œπ&&t.Œπ.in(), Œõ()/*nxt*/) : Œõ.in(0.1)/*poll*/
# 		})() }
# 	‚Ü© Œª(time){ t ‚Üê {time, Œπ:@}; ‚Ü© time < hrtime()? (t.Œπ.in(), Œª(){}) : (qu.enq(t), ensure(), Œª(){t.Œπ = null}) } }),
# 'Function.prototype._1':{get(){‚Ü© _.once(@) }},

# E._imgur = Œπ=> sh·µ•`curl -sH 'Authorization: Client-ID 3e7a4deb7ac67da' -F image=@${Œπ} 'https://api.imgur.com/3/upload' | jq -r .data.link`+''
# E._sc_imgur = (‚Ä¶a)=>{ t ‚Üê œÜ`/tmp/sc_${random_id(9)}.png`; _sc(‚Ä¶a,t); _alert('uploading to imgur','...',1.5); Œπ ‚Üê _imgur(t); go_to(Œπ); p(googl(Œπ)+'#imgur'); sh·µ•`rm ${t}` }

# del(){ for v in "$@"; do v="$(realpath "$v")"; Œ∂ 'osa·µ•`finder: delete POSIX file ${Œπ}`;' "$v"; rm -f "$(dirname "$v")/.DS_STORE"; done; }
# im_pdf_to_png__bad() { for v in "$@"; do convert -verbose -density 150 -trim "$v" -quality 100 -sharpen 0x1.0 png:"${v%.*}.png"; done; }
# convert -verbose -density 150 -trim 'from.pdf' -quality 100 -flatten -sharpen 0x1.0 x.jpg
# ff_crop(){ ffmpeg -i file:"$1" -ss "$2" -t "$3" -async 1 file:"${1%.*} cut".mp4; }

# E.Œ∂_compile_S = Œπ=> Œπ
# 	.replace(/¬ß.[^]*?¬ß|‚Ä¶(?!\$[{\/]|\(\?|':'| "\)\))|(?:Œª\*?(?: Œª)?(?=(?:[ \t][^\(=‚Üê]*)?\([^\)]*\)[ \t]*\{)|‚Ü©(?![\]"]|\([.?]|\$\/| ':'r|  ‚îÇ) ?|([\w$ ∞- ∏À°-À£Œë-Œ°Œ£-œâ·¥¨-·µõ·µ¢-·µ•·∂ú·∂†·∂ª‚Å∞‚Å±‚Åø‚Çê-‚Çì‚Çï-‚Çú‚ÑÇ‚Ñï‚Ñö‚Ñù‚Ñ§‚±º‚±Ω]+)(\s*)‚Üê(;?))(?!['"]| ‚Üë)/g,
# 		(Œπ,name,s,semi)=> Œπ[0]==='¬ß'? Œπ : {'Œª':'function', 'Œª Œª':'function Œª','Œª*':'function*', 'Œª* Œª':'function* Œª', '‚Ü©':'return ', '‚Ü© ':'return ', '‚Ä¶':'...'}[Œπ] || (semi===';'? 'var '+name+s+';' : 'var '+name+s+'=') )
# 	.replace(/¬ß.[^]*?¬ß|(^|[^'"])@(?![-`'"\w\/\\/$]| #|\([?.])/g,(Œπ,a1)=> Œπ[0]==='¬ß'? Œπ : a1+'this')
# 	.replace(/¬ß.[^]*?¬ß|(?!"‚ÄΩ"|'‚ÄΩ')(^|[^])‚ÄΩ(?!\(\?)(\(?)/g, (À£,a,Œπ)=> À£[0]==='¬ß'? À£ : a+(Œπ? '!function(...a){throw Error(a.map(Œπ=> Tstr(Œπ)? Œπ : util_inspect_autodepth(Œπ,{colors:true})).join(" "))}(' : '!function(){throw Error("‚ÄΩ")}()') )
# E.Œ∂S_compile = Œπ=> require('/Users/home/code/scratch/¬ß/Œ∂¬ß.Œ∂').S_macro_transform(E.Œ∂_compile_S(Œπ))
	# t==='.Œ∂¬ß' || (t==='' && d().re`#!/usr/bin/env Œ∂¬ß\s`)? module._compile(E.Œ∂S_compile(d()),Œπ) :

# NODEp ‚Üê typeof process!=='undefined' && Object.prototype.toString.call(process)==='[object process]'

# E.fs_ipc = {
# 	# on: Œª(port,cb‚Çê){http.createServer(Œª(À£,res){a‚Üê;
# 	# 	t ‚Üê (a=œÜ`/tmp/fs_ipc_${port}`).Œπ; a.Œπ = null; global.Œπ = (a=œÜ`/tmp/fs_ipc_${port}_stdin`).Œπ.replace(/\n$/,''); a.Œπ = null
# 	# 	end ‚Üê Œπ=> res.end(Œπ === undefined? '' : Œπ+''); r ‚Üê hook_stdouterr(); try {cb‚Çê(t); end(r().join('\n'))} catch(e){end(r().join('\n')+''+(e.stack||e)+"\n")}
# 	# 	}).listen(port)},
# 	}

# E.googl = Œπ=> JSON.parse(sh·µ•`curl -s ${'https://www.googleapis.com/urlshortener/v1/url?key='+œÜ`~/.auth/googl`.text.trim()} -H 'Content-Type: application/json' -d ${JSON.stringify({longUrl:Œπ})}`+'').id

	# Œ∂_compile_nonliteral_tree ‚Üê Œπ=>{
	# 	Œπ = Œπ.mapcat(Œπ=> Œπ.T? [Œπ] : Œπ.split(/(?=[{([\])}])/g).mapcat(Œπ=> Œπ.match(/^([{([\])}]?)([^]*)$/).slice(1)).filter(Œπ=>Œπ.length) )
	# 	other_bracket ‚Üê i=>{ if( !'[](){}'.includes(Œπ[i]) ) ‚Ü©; at ‚Üê {'[':0,'{':0,'(':0}; dir ‚Üê Œπ[i] in at? 1 : -1; for(;;){ for(var [a,b] of ['[]','()','{}']){ Œπ[i]===a && at[a]++; Œπ[i]===b && at[a]-- }; if( _(at).every(Œπ=>Œπ===0) ) break; i += dir; if (!(0<=i&&i<Œπ.length)) ‚Ü©; }; ‚Ü© i }
	# 	f‚Çõ ‚Üê (l,i‚Çõ,i‚Çë)=>{t‚Üê;
	# 		if( t=l[i‚Çõ].re`^([^]*)<-\s*$` ){ l[i‚Çõ] = t[1]+'["<-"]('; l.splice(i‚Çë,0,')') }
	# 		}
	# 	for(i‚Üê0;i<Œπ.length;i++){
	# 		if( Œπ[i].T ) continue
	# 		i‚Çõ ‚Üê i; i‚Çê ‚Üê i‚Çõ+1; i·µá ‚Üê other_bracket(i‚Çê); i‚Çë ‚Üê i·µá+1
	# 		if( !(i·µá > i‚Çê) ) continue

	# 		if (i‚Çí > i+1)
	# 		if( i‚Çí > i+1 ) f‚Çõ(Œπ,i,i‚Çí+1)
	# 		}
	# 	‚Ü© Œπ.map(Œπ=> Œπ.T? Œπ.Œπ : Œπ) }
