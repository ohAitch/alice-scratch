#!/usr/bin/env node
// ----------------- learn these things; they might be neat ----------------- //
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise
// Sequence.prototype.map = λ(f){ for (var ι of @) yield f(ι) }

_ ← require('underscore')

// ------------------------------ browser fixes ----------------------------- //
NODEP ← typeof process!=='undefined' && Object.prototype.toString.call(process)==='[object process]'
BROWSERP ← typeof window!=='undefined'
if (BROWSERP) if (!module.parent) module.parent = '<unknown>'
if (BROWSERP) typeof Buffer!=='undefined' && (window.Buffer = require('buffer').Buffer)

// -------------------------- local metaprogramming ------------------------- //
E ← {} // exports
patches ← []
P ← λ(_ι){r ← λ(G){ι ← _ι(); (Tarr(ι)? ι : _(ι).pairs()).forEach(λ([name,ι]){genex_0(name).map(λ(name){
	name = name.split('.'); last ← name.pop()
	t ← name.reduce((r,ι)=> r[ι], G); Tfun(ι)? (ι.name && (ι.super = t[last]), t[last] = ι) : def(t,last,ι)
	}) }) }; r(global); patches.push(r)}

// ------------------------------- local utils ------------------------------ //
def ← E.def = λ(o,name,ι){
	if (Tfun(ι)) ι = lazy(name,ι)
	'configurable' in ι || (ι.configurable = true)
	'value' in ι?
		'writable' in ι || (ι.writable = true) :
		'set' in ι || (ι.set = λ(ι){def(@,name,{value:ι, enumerable:true})})
	Object.defineProperty(o,name,ι); ↩ o}
lazy ← λ(name,ι){↩ {get(){↩ @[name] = ι()}}}
prop_assign ← λ(from,to){Object.getOwnPropertyNames(from).forEach(ι=> Object.defineProperty(to,ι,Object.getOwnPropertyDescriptor(from,ι)))}

// ------------------------ should be in standard lib ----------------------- //
T ← E.T = λ(ι){ 
	ty ← typeof ι; if (ty!=='object') ↩ ty; if (ι===null) ↩ 'null'
	p ← Object.getPrototypeOf(ι); if (p===Object.prototype || p===null) ↩ 'object'
	for (var t of is_l) if (t[1](ι)) ↩ t[0]
	↩ 'object' }
internal_util ← process.binding('util')
is_l ← [
	['Array',Array.isArray],
	…['ArrayBuffer','DataView','Date','Map','MapIterator','Promise','RegExp','Set','SetIterator','TypedArray'].map(ι=> [ι,internal_util['is'+ι]]),
	…['Error','String','Boolean','Number'].map(ty=> [ty,ι=> Object.prototype.toString.call(ι)==='[object '+ty+']']),
	]
_(T).assign(_(is_l).object())
T.NaN = Number.isNaN
T['-0'] = ι=> ι===0 && 1/ι < 0
T.symbol = ι=> typeof ι === 'symbol'
Tstr ← E.Tstr = ι=> typeof ι === 'string'
Tnum ← E.Tnum = ι=> typeof ι === 'number'
Tbool ← E.Tbool = ι=> typeof ι === 'boolean'
Tfun ← E.Tfun = ι=> typeof ι === 'function'
Tarr ← E.Tarr = T.Array

Tprim ← E.Tprim = λ(ι){ switch(typeof(ι)){case 'undefined': case 'boolean': case 'number': case 'string': case 'symbol': ↩ true; case 'object': ↩ ι===null; default: ↩ false} }
Tbox ← E.Tbox = λ(ι){ if (ι===null || typeof ι!=='object') ↩ false; t ← Object.getPrototypeOf(ι); t = t.constructor&&t.constructor.name; ↩ (t==='Boolean'||t==='String'||t==='Number') && /^\[object (Boolean|String|Number)\]$/.test(Object.prototype.toString.call(ι)) }
Tprim.ι = {undefined:1,boolean:1,number:1,string:1,symbol:1,null:1}
Tbox.ι = {Boolean:1,String:1,Number:1}

// -------------------------------- requires -------------------------------- //
;[ ['child_process'],['events','EventEmitter'],['http'],['https'],['module','Module'],['net'],['os'],['punycode'],['querystring'],['readline'],['repl'],['stream'],['util'],['vm'],['zlib'],['underscore','_'],
['fs'],//! hack
	].map(λ([ι,n]){ def(E, n||ι, ()=> require(ι)) })
global._ && (E._ = global._)
global.stream = E.stream
path ← require('path')
fs ← require('fs')
moment ← require('moment')
if (0){ require('util'); require('stream'); require('moment'); require('priorityqueuejs'); require('urijs') } // browserify

// ------------------------------ desktop fixes ----------------------------- //
process.env.PATH || (process.env.PATH = ''); _(process.env.PATH.split(':')).includes('/usr/local/bin') || (process.env.PATH = […process.env.PATH.split(':'), '/usr/local/bin'].join(':'))

// --------------------------------- ζ infra -------------------------------- //
if (!BROWSERP) E.npm = λ(ι){a←;b←; var [ι,version] = ι.split('@'); ιv ← ()=> ι+'@'+version
	APP ← '\x1b[34m[npm]\x1b[0m'
	if (version){
		cache ← φ`~/.npm/${ι}/${version}`
		try {↩ require(cache+'/node_modules/'+ι)}
		catch (e) {if (!(e.code==="MODULE_NOT_FOUND")) throw e
			cn.log(APP,'installing',ιv())
			cache.BAD_exists() || shᵥ`cd ~; npm cache add ${ιv()}`
			;(a=cache.φ`package.json`).ι = {description:"-",repository:1,license:"ISC"}; (b=cache.φ`README`).ι = ''; shᵥ`cd ${cache} && npm i ${ιv()}`; a.ι = b.ι = null
			cn.log(APP,'done')
			↩ require(cache+'/node_modules/'+ι) } }
	else {
		sfx`ack`
		version = shᵥ`npm show ${ι} version`+''
		process.stderr.write(APP+' latest: '); process.stdout.write(ι.replace(/-/g,'_')+' ← npm('+util.inspect(ιv())+')'); process.stderr.write('\n')
		} }
E.ζ_compile = ζ_compile
E.ζ_compile['⁻¹'] = λ(ι){↩ ι.replace(/\b(?:function|return|this)\b(?!['"])|\bvar \s*([\w_$Α-ΡΣ-Ωα-ω]+)(\s*)(=?)|\.\.\./g, λ(ι,name,s,eq){↩ {'function':'λ','return':'↩','this':'@','...':'…'}[ι] || (eq==='='? name+s+'←' : name+s+'←;')})}
;[process,module,global].map(ι=> ι.inspect = λ(){↩ '{'+Object.getOwnPropertyNames(@).map(ι=> ι+':').join(', ')+'}' }) //‡ hack, like the [1] * 5 thing in ζ_repl_start. clean up by: can we override builtin inspects without problems? then: defining solid inspect functions for more things. otherwise: figure out something else.
E.ζ_repl_start = λ(){
	global.In = []; global.Out = []
	global.depth = {ι:'some', type:'some|most|all'}
	repl._builtinLibs = []
	t ← repl.REPLServer.prototype; rRpc ← t.complete; t.complete = λ(line,cb){line.trim()===''? cb([]) : rRpc.call(@,line,cb)}
	self ← repl.start({useGlobal:true, prompt:'\x1b[30m\x1b[42mζ\x1b[0m '})
	global.repl_self = self
	inspect ← ι=> util.inspect(ι,{colors:self.useColors, depth:global.depth.ι==='some'? 2 : global.depth.ι==='most'? 5 : global.depth.ι==='all'? null : ‽})
	self.removeAllListeners('line').on('line',λ(cmd){
		if (cmd==='') ↩;
		if (self.bufferedCommand) {self.history[1] += '\n'+self.history[0]; self.history.shift()}
		code ← self.bufferedCommand + (cmd||'')
		t ← code
		if (t.re`^>`) t = '__SPECIAL__('+JSON.stringify(t.slice(1))+')' // hack: for apprentice
		if (/(^\{[^]*\}$)|(^λ\()/.test(t)) t = '('+t+')'
		t = ζ_compile(t)
		try {sc ← new vm.Script(t, {filename:'repl', displayErrors:false})}
		catch (e) {if (e.name === 'SyntaxError' && /^(Unexpected (end of input|token)|Unterminated template literal)/.test(e.message)) {self.bufferedCommand += cmd+'\n'; self.outputStream.write('    '); ↩}; e.stack = e.name+': '+e.message+'\n    at <repl>'; err ← e}
		if (sc)
		try {ret ← sc.runInThisContext({displayErrors:false})}
		catch (e) {e && Tstr(e.stack) && (e.stack = e.stack.replace(/^([^]*)at repl:(.*)[^]*?$/,'$1at <repl:$2>')); err ← e}
		In.push(code); Out.push(err || ret)
		if (err) self._domain.emit('error', err.err || err)
		self.bufferedCommand = ''
		if (!err && ret !== undefined) {
			global.__ = ret
			try {
				if (Tarr(ret) && ret.length > 1 && ret.every(ι=> ι===ret[0]) && _.range(ret.length).every(ι=> ι in ret))
					t ← inspect([ret[0]])+' * '+inspect(ret.length)
				else
					t ← inspect(ret)
			}catch(e){t ← '<repl inspect failed>:\n'+(e&&e.stack)}
			self.outputStream.write(t+'\n') }
		self.displayPrompt()
		})
  self.removeAllListeners('SIGINT').on('SIGINT',λ(){
    if (self.bufferedCommand+self.line){ self.clearLine(); self.lineParser.reset(); self.bufferedCommand = ''; self.lines.level = []; self.displayPrompt() }
    else { self.clearLine(); self.close() }
    })
	delete self.context._; global._ = E._
	↩ self}
if (require.extensions) (()=>{ o ← require.extensions['.js']; require.extensions['.js'] = λ(module,ι){ d ← _.once(()=> fs.readFileSync(ι,'utf8')); t ← path.extname(ι); t==='.ζ' || (t==='' && d().re`#!/usr/bin/env ζ\s`)? module._compile(ζ_compile(d()),ι) : o(module,ι) } })()

// ------------------------ should be in standard lib ----------------------- //
memo_frp ← λ(names,within,f){
	dir ← φ`~/.memo_frp/${names}`
	if (within){
		try{t ← fs.readdirSync(dir+'')} catch(e){if (!(e.code==='ENOENT')) throw e; t ← []}
		now ← Date.now()/1e3; t = t.sort().filter(ι=> Time(/^\S+/.λ(ι)[0]).i >= now - within)[-1]
		if (t) ↩ dir.φ(t).json2.ι}
	a ← Time().iso; ι ← f(); b ← Time().iso
	dir.φ`${a} ${rand_id(10)}`.json2 = {names, date:[a,b], ι}; ↩ ι}
genex_0 ← λ(ι){
	parse ← λ(ι){
		q ← λ(ι){↩ ι.match(/\(.*?\)|\[.*?\]|\\.|./g).map(λ(ι){↩ ι[0]==='('? q(ι.slice(1,-1)) : ι[0]==='['? {or:_(ι.slice(1,-1).match(/.-.|./g).map(ι=> ι.length === 1? [ι] : _.range(ι[0].charCodeAt(),ι[2].charCodeAt()+1).map(String.fromCharCode.X))).flatten(true)} : ι})}
		w ← λ(ι){if (!Tarr(ι)) ↩ ι; t←; r ← []; while ((t=_(ι).indexOf('|')) !== -1) {r.push(ι.slice(0,t)); ι = ι.slice(t+1)}; ↩ r.length? (r.push(ι),{or:r}) : ι.map(w)}
		↩ w(q(ι))}
	q ← ι=> ι.or? ι.or.map(q) : Tarr(ι)? ι.map(q).reduce((a,b)=> _(a.map(a=> b.map(b=> a+b))).flatten(true),['']) : [ι]
	↩ q(parse(ι)) }
Number_toFixed ← λ(θ,ι){θ = round(θ/pow(10,-ι))*pow(10,-ι); ↩ ι>0? θ.toFixed(ι) : θ+''}
pretty_time_num ← ι=> new Number(ι)._.assign({inspect:λ(ˣ,opts){ P ← 20; ι←@; var [ι,u] = (ι >= P/1e3? [ι,'s'] : [ι*1e6,'μs']); ↩ opts.stylize(Number_toFixed(ι,-max(-3,floor(ln10(ι/P))))+u,'number') }})

if (!BROWSERP) E.hook_stdouterr = λ(){
	r ← ['stdout','stderr'].map(λ(stdio){
		o ← process[stdio].write; r ← []; process[stdio].write = λ(ι){r.push(ι)}; ↩ λ(){process[stdio].write = o; ↩ r.join('')}
		}); ↩ ()=> r.map(ι=> ι()) }
E.cn = { log:λ(…a){ console.log(…(BROWSERP? a : a.map(ι=> Tstr(ι)? ι : util.inspect(ι,{colors:true,depth:2})))); if (BROWSERP) window.__ = a[-1] } }
_(E).assign(_(Math).pick('abs','ceil','exp','floor','log','log10','log2','max','min','PI','pow','round','sqrt')); _(E).assign({ln:E.log, ln2:E.log2, ln10:E.log10})
E.multiline = λ(ι){ι = (ι+'').split('\n').slice(1,-1); t ← ι.map(ι=> ι.re`^\t*`[0].length)._.min(); ι = ι.map(ι=> ι.slice(t)); ↩ (ι[0]==='' && ι[-1]===''? ι.slice(1,-1) : ι).join('\n')}
if (!BROWSERP) E.hrtime = λ(ι){t ← arguments.length===0? process.hrtime() : process.hrtime([ι|0,(ι-(ι|0))*1e9]); ↩ t[0] + t[1]*1e-9}
E.busywait = λ(ι){h←; for(hr←hrtime(); (h=hrtime(hr)) < ι; ι-h > 0.03 && (shᵥ`sleep ${ι-h-0.02}`,1)); }
E.bench = λ(f,l){ TH←0.4; r←0; I←1; for(hr←hrtime(); hrtime(hr) < TH;) {if (l) for(i←0;i<I;i++) l.push(f()); else for(i←0;i<I;i++) f(); r += I; I = ceil(I*1.5)}; ↩ pretty_time_num(hrtime(hr) / r) } //! really should include a confidence interval or smth
E.bench1 = λ(f){ hr ← hrtime(); f(); ↩ pretty_time_num(hrtime(hr)) }
E.GET_L = λ(ι,within){↩ memo_frp(['GET -L', ι+''], within, ()=> shᵥ`curl -sL ${ι}`)} //! some requests have short responses; will need more intelligent caching for those 'cause the filesystem can't take too much
E.rand = λ(ι){↩ arguments.length===0? Math.random() : Tnum(ι)? rand()*ι |0 : _.sample(ι) }
E.rand_id = L=> L.map(ι=> rand(az09||(az09=/[0-9a-z]/.genex_0()))).join(''); az09←;
E.fs_ipc = {
	emit: λ(port,ι){φ`/tmp/fs_ipc_${port}`.ι = ι; ↩ shᵥ`curl -s -X PUT 127.0.0.1:${port}`+''},
	on: λ(port,cbₐ){http.createServer(λ(ˣ,res){a←;
		t ← (a=φ`/tmp/fs_ipc_${port}`).ι; a.ι = null; global.ι = (a=φ`/tmp/fs_ipc_${port}_stdin`).ι.replace(/\n$/,''); a.ι = null
		end ← ι=> res.end(ι === undefined? '' : ι+''); r ← hook_stdouterr(); try {cbₐ(t); end(r().join('\n'))} catch(e){end(r().join('\n')+''+(e.stack||e)+"\n")}
		}).listen(port)},
	}
E.catch_ = f=> λ(){ try{ ↩ f.apply(@,arguments) }catch(e){ if ('__catchable' in e) ↩ e.__catchable; else throw e } }
E._↩ = ι=>{ throw {__catchable:ι} }
TimerCons ← λ(a,b){@.a=a;@.b=b}; TimerCons.prototype = {clear:λ(){@.a.clear();@.b.clear()}, ref:λ(){@.a.ref();@.b.ref()}, unref:λ(){@.a.unref();@.b.unref()}}
P(()=>0?0:{
'RegExp.prototype.genex_0':λ(){↩ genex_0(@.source)},
'Number.prototype.map':λ(f){'use strict'; ι←+@; r ← Array(ι); for(i←0;i<ι;i++) r[i] = f(i,i,ι); ↩ r},
'Number.prototype.mapcat':λ(f){↩ @.map(f)._.flatten(true)},
'Array.prototype.mapcat':λ(f){r ← []; for(i←0;i<@.length;i++) {t ← f(@[i],i,@); for (j←0;j<t.length;j++) r.push(t[j])}; ↩ r}, // λ(f){↩ @.map(f)._.flatten(true)}
'Array.prototype.repeat':λ(x){↩ x<=0? [] : x.mapcat(()=> @)},
'Array.prototype.search':λ(f){ r←; if (@.some(λ(ι,i,l){ r = f(ι,i,l); if (r!==undefined) ↩ true })) ↩ r },
'Object.prototype._':{get(){↩ _(@)}},
'(Buffer|Array|String).prototype.partition':λ(L){↩ _.range(0,@.length,L).map(i=> @.slice(i,i+L)) },
'Set.prototype.filter!':λ(f){ @.forEach(ι=> f(ι) || @.delete(ι)) },
'Set.prototype.pop':λ(){ t ← @.values().next().value; @.delete(t); ↩ t },

'Function.prototype.P':λ(…a1){ ι←@; ↩ λ(…a2){↩ ι.apply(@, a1.concat(a2)) } },
'Function.prototype.X' :{get(){ ι←@; ↩ λ(a  ){↩ ι.call(@,a  ) } }},
'Function.prototype.XX':{get(){ ι←@; ↩ λ(a,b){↩ ι.call(@,a,b) } }},
'Function.prototype._1':{get(){↩ _.once(@) }},
'Function.prototype.defer':λ(){↩ setImmediate(@) },
'Function.prototype.in':λ(time){↩ setTimeout(@,max(0,time)*1e3) },
'Function.prototype.every':λ(time,opt){ r ← setInterval(@,max(0,time)*1e3); ↩ !(opt&&opt.leading)? r : new TimerCons(@.in(0),r) },

'stream.Readable.prototype.read_all':λ(cb){t ← []; @.resume().on('data',λ(ι){t.push(ι)}).on('end',λ(){cb(null,Buffer.concat(t))})}, //! are you sure end doesn’t also pass any data?
'(Array|String|Buffer).prototype.-0':{get(){ },set(ι){ @.push(ι) }},
'(Array|String|Buffer).prototype.-1':{get(){↩ @.length<1? undefined : @[@.length-1] },set(ι){ @.length<1 || (@[@.length-1] = ι) }},
'(Array|String|Buffer).prototype.-2':{get(){↩ @.length<2? undefined : @[@.length-2] },set(ι){ @.length<2 || (@[@.length-2] = ι) }},
'(Array|String|Buffer).prototype.-3':{get(){↩ @.length<3? undefined : @[@.length-3] },set(ι){ @.length<3 || (@[@.length-3] = ι) }},
'(Array|String|Buffer).prototype.-4':{get(){↩ @.length<4? undefined : @[@.length-4] },set(ι){ @.length<4 || (@[@.length-4] = ι) }},
})
E.Time = λ(ι){r ← arguments.length===0? new Date() : ι instanceof Date? ι : new Date(Tnum(ι)? ι*1e3 : ι); r.toString = λ(){↩ util.inspect(@)}; ↩ r}
fmt ← λ(a,b){t ← @.__local? moment(@).format('YYYY-MM-DD[T]HH:mm:ss.SSS') : @.toISOString(); t = t.slice(a,b); if (!@.__local && b > 10) t += 'Z'; ↩ t}
P(()=>0?0:{
'Date.prototype.inspect':λ(d,opts){↩ opts.stylize(isNaN(+@)? 'Invalid Date' : @.getUTCSeconds()!==0? @.ymdhms : @.getUTCMinutes()!==0? @.ymdhm : @.getUTCHours()!==0? @.ymdh : @.ymd, 'date')},
'Date.prototype.local':{get(){↩ new Date(@)._.assign({__local:true})}},
'Date.prototype.i':{get(){↩ +@ / 1e3}},
'Date.prototype.ym':      {get(){↩ fmt.call(@,0,'YYYY-MM'.length)}},
'Date.prototype.ymd':     {get(){↩ fmt.call(@,0,'YYYY-MM-DD'.length)}},
'Date.prototype.ymdh':    {get(){↩ fmt.call(@,0,'YYYY-MM-DDTHH'.length)}},
'Date.prototype.ymdhm':   {get(){↩ fmt.call(@,0,'YYYY-MM-DDTHH:mm'.length)}},
'Date.prototype.ymdhms':  {get(){↩ fmt.call(@,0,'YYYY-MM-DDTHH:mm:ss'.length)}},
'Date.prototype.ymdhmss': {get(){↩ fmt.call(@,0,'YYYY-MM-DDTHH:mm:ss.SSS'.length)}},
'Date.prototype.iso':     {get(){↩ fmt.call(@,0,'YYYY-MM-DDTHH:mm:ss.SSS'.length)}},
'Date.prototype.hms':     {get(){↩ fmt.call(@,'YYYY-MM-DDT'.length,'YYYY-MM-DDTHH:mm:ss'.length)}},
})
hash ← λ(ι){t←;↩ JSON.stringify(Object.prototype.toString.call(ι)==='[object Object]'? (t={}, ι._.keys().sort().forEach(k=> t[k]=ι[k]), t) : ι) }
_.mixin({difference_eq:λ(ι,…a){ t ← ι._.groupBy(hash); a.forEach(ι=> ι.forEach(ι=> delete t[hash(ι)])); ↩ t._.values()._.flatten(true) }})
if (NODEP){
t ← setImmediate(λ(){}); clearImmediate(t); Immediate ← Object.getPrototypeOf(t)
t ← setTimeout(λ(){},0); clearTimeout(t); Timeout ← Object.getPrototypeOf(t)
Immediate.clear = λ(){ clearImmediate(@) }
Timeout.clear = λ(){ @._repeat? clearInterval(@) : clearTimeout(@) }
Immediate.ref = Immediate.unref = λ(){}
}
E.schema = (λ(){
	sc_merge ← λ(a,b){ak ← _.keys(a); bk ← _.keys(b); bk._.difference(ak).forEach(k=> a[k] = b[k]); _.intersection(ak,bk).forEach(k=> a[k] = !Tprim(a[k])? sc_merge(a[k],b[k]) : !Tprim(b[k])? 'error' : a[k]); ↩ a }
	↩ ι=> Tbool(ι)? true : Tstr(ι)? '' : Tnum(ι)? 0 : Tarr(ι)? ι.length===0? [] : [ι.map(schema).reduce(sc_merge)] : _.pairs(ι).map(ι=> [ι[0],schema(ι[1])])._.object()
	})()
E.walk = (ι,f,k,o)=>( Tprim(ι)||ι._.forEach((ι,k,o)=> walk(ι,f,k,o)), f(ι,k,o), ι )
E.walk_reduce = (ι,f,k,o)=> Tprim(ι)? ι : Tarr(ι)? ( ι = ι.map((ι,k,o)=> walk_reduce(ι,f,k,o)), f(ι,k,o) ) : ( ι = _(ι).map((ι,k,o)=> [k,walk_reduce(ι,f,k,o)])._.object(), f(ι,k,o) )
E.walk_obj_map = (ι,f,k,o)=> Tprim(ι)? ι : Tarr(ι)? ι.map((ι,k,o)=> walk_obj_map(ι,f,k,o)) : ( ι = _(ι).map((ι,k,o)=> [k,walk_obj_map(ι,f,k,o)])._.object(), f(ι,k,o) )
E.robot_key_tap = ι=> npm('require-new@1.1.0')(φ`~/github/scratch/keyrc/keyrc.ζ`+'').robot_key_tap(ι)
E.KEY_once = (…a)=> npm('require-new@1.1.0')(φ`~/github/scratch/keyrc/keyrc.ζ`+'').KEY_once(…a)

// ---------------------------------- .ζrc ---------------------------------- //
if (!BROWSERP){
process.env.PATH = ['./node_modules/.bin','/usr/local/bin',…process.env.PATH.split(':'),'.']._.uniq().join(':')
q0 ← ι=> Tstr(ι)? ι : util.inspect(ι,{depth:null})
q ← ι=> Tarr(ι)? ι.map(q0).join('\n') : q0(ι)
E.p = λ(ι){↩ arguments.length === 0? shᵥ`pbpaste`+'' : child_process.spawn('pbcopy').stdin.end(q(ι === undefined? '' : ι)) }
E.sb = λ(ι){↩ arguments.length === 0? sublᵥ`view.substr(Region(0,view.size()))` : child_process.spawn('open',['-a','Sublime Text.app','-f']).stdin.end(q(ι)) }
E.nice_url = λ(ι){t←; urijs ← require('urijs'); var {sourcemap} = ι; ι=ι+''
	// very nice google maps urls
	// if url ≈ google.com/maps/
	// fetch short url:
	// 	wait-click $('#searchbox-hamburger')
	// 	wait-click $('[jsaction="settings.share"]')
	// 	wait-check $('#share-short-url')
	// 	t ← $('.widget-share-link-url').val() wait ι=> ι.re`^https?://goo.gl/maps/`
	// 	return t
	// 	$('.modal-container').click()
	// wait-check: if not $`${ι}:checked`; ι.click(); wait for $`${ι}:checked`
	// wait-click: wait for ι.length; ι.click()
	// decode: parse curl https://goo.gl/maps/7s6wKcW8zUC2

	if (t=ι.re`^"(.*)"$`) ↩ '“'+t[1]+'”' //! bad hack

	apply_regexes ← regs=> multiline(regs).split(/\n/g).map(λ(t){var [a,b] = t.split(/  +/g); ι = ι.replace(RegExp(a),b)})
	URL ← /\b(?:(?:https?|chrome):\/\/|(?:file|mailto):)(?:[^\s“”"<>]*\([^\s“”"<>]*\))?(?:[^\s“”"<>]*[^\s“”"<>)\]}⟩?!,.:;])?/g
	parse_alicetext ← ι=> _.zip(ι.split(URL).map(ι=> 0?0: {type:'text', ι}), (ι.match(URL)||[]).map(ι=> 0?0: {type:'url', ι}))._.flatten(true).filter(ι=> !(ι === undefined || (ι.type === 'text' && ι.ι === '')))

	// ι = parse_alicetext(ι).map(λ(ι){t←; ι.type==='url' && (t=urijs(ι.ι)).domain()+t.path()==='google.com/webhp' && t.path('/search') && (ι.ι = t+''); ↩ ι})._.map('ι').join('')

	if (sourcemap && sourcemap.title && sourcemap.url && (t=urijs(ι.slice(…sourcemap.url)),
		t.domain() in {'github.com':0} ||
		t.domain()+t.path()==='google.com/search'
		)) ι = ι.slice(…sourcemap.url)
	
	ι = ι.replace(/%CE%B6/g,'ζ')
	apply_regexes(λ(){/*
	\bhttps://         http://
	\b(http://)www\.   $1
	\b(http://)(?:mail\.)?(google\.com/mail/)u/0/[?&]?#(?:(?:label|search)/[\w%+]+|\w+)/(\w+)        $1$2#all/$3
	 - Gmail( http://google\.com/mail/)                $1
	 - [\w.]+@gmail\.com( http://google\.com/mail/)    $1
	Fwd: (.* http://google\.com/mail/)                 $1
	\b(http://)en\.(?:m\.)?(wikipedia\.org/)           $1$2
	\b(http://)youtube\.com/watch[?&]v=([\w-_]+)       $1youtu.be/$2
	\b(http://youtu\.be/[\w-_]+)[?&]feature=youtu\.be  $1
	\b(http://youtu\.be/[\w-_]+)&(\S*)$                $1?$2
	 - YouTube( http://youtu\.be/)                     $1
	 \([oO]fficial [vV]ideo\)( http://youtu\.be/)      $1
	\b(http://)smile\.(amazon\.com/)                   $1$2
	\b(http://docs\.google\.com/document/d/[\w_-]+)/edit(?:[?&]ts=\w+)?$  $1
	\b(http://docs\.google\.com/spreadsheets/d/[\w_-]+)/edit(?:#gid=0)?$  $1
	 - Google Docs( http://docs\.google\.com/)         $1
	\b(http://dropbox\.com/\S*)[?&]dl=0$               $1
	\b(http://)facebook(\.com/)                        $1fb$2
	\b(http://fb\.com/)profile\.php\?id=               $1
	\(\d+\) (.* http://fb\.com/)                       $1
	 - Wikipedia, the free encyclopedia( http://wikipedia\.org/)  $1
	 - Album on Imgur( http://imgur\.com/)             $1
	 - Google Maps( http://google\.com/maps/)          $1
	*/})

	ι = parse_alicetext(ι).map(λ(ι){t←;
		if (ι.type === 'url') {
			uri ← urijs(ι.ι)
			switch (uri.domain()) { default: ↩ ι
				break; case 'amazon.com':
					uri.removeSearch(['sa-no-redirect','keywords','qid','ie','s','sr','tag','linkCode','camp','creative','creativeASIN'])
					uri.filename().re`^ref=[\w_]+$` && uri.filename('')
					if (t=uri.resource().re`^/(?:[\w-]+/)?(?:dp|gp)/(?:product/)?(\w+)/?$`) {ι.ι = 'http://amzn.com/'+t[1]; ↩ ι}
				break; case 'fb.com': uri.removeSearch(['fref','hc_location','_rdr','pnref'])
				break; case 'google.com': if (uri.segment()._.isEqual(['search'])){ uri.removeSearch(['gws_rd','aqs','sourceid','es_sm','ie']); uri.hasSearch('q') && uri.removeSearch('oq') }
				}; ι.ι = uri+'' }
		↩ ι})._.map('ι').join('')

	apply_regexes(λ(){/*
	: \d{5,}: Amazon(?:Smile)?: Books( http://amzn.com/)        $1
	*/})

	// --------- todo --------- //
	// http://smile.amazon.com/gp/product/0300078153
	// Seeing like a State http://amzn.com/0300078153

	// https://docs.google.com/spreadsheets/d/1wfFMPo8n_mpcoBCFdsIUUIt7oSm7d__Duex51yejbBQ/edit#gid=0
	// http://goo.gl/0nrUfP

	// generalize the “fix & to ?” to many different things

	// http://www.ribbonfarm.com/2010/07/26/a-big-little-idea-called-legibility/
	// A Big Little Idea Called Legibility http://ribbonfarm.com/2010/07/26/a-big-little-idea-called-legibility/
	// http://ribbonfarm.com/2010/07/26/a-big-little-idea-called-legibility
	// http://ribbonfarm.com/2010/07/26/a-big-little-idea-called-legibility (3K words)

	↩ ι}
E.sfx = λ(ss,…ιs){ ι ← ss[0]
	child_process.exec(sh`afplay ~/github/scratch/dotfiles/${ι}.wav`)
	if (ι==='done' && osaᵥ`get volume settings`.error.re`muted:true`){ br ← npm("brightness@3.0.0"); br.get().then(λ(old){ br.set(0); (()=> br.set(old)).in(0.2) }) }
	}
E._alert = (a,b,c)=> child_process.exec(sh`osascript -e ${osa`system events: display alert ${a} …${b && osa`message ${b}`} …${c && osa`giving up after ${c}`}`}`)
E.browser = ι=>{
	ι = ι.re`^https?://`? ι : 'https://www.google.com/search?q='+encodeURIComponent(ι)
	child_process.exec(sh`(${'/Applications/Google Chrome.app/Contents/MacOS/Google Chrome'} ${ι} &); osascript -e ${osa`chrome: activate`}`);
	}
E._bright = dir=>{
	br ← npm("brightness@3.0.0")
	set ← ι=> br.set(ι > 0.5? (ι===1? 1 : ι-1/64) : (ι===0? 0 : ι+1/64)).then(()=> robot_key_tap("⇧⌥FnF"+(ι > 0.5? 2 : 1)))
	ιs ← [0,1,2.5,5.5,10.5,16].map(ι=>ι/16)
	br.get().then(ι=> set(dir==="up"? ιs.find(t=> t > ι)||1 : ιs.filter(t=> t < ι)[-1]||0) )
	}
E._sc = (…a)=> shᵥ`screencapture ${a}`
E._imgur = ι=> shᵥ`curl -sH 'Authorization: Client-ID 3e7a4deb7ac67da' -F image=@${ι} 'https://api.imgur.com/3/upload' | jq -r .data.link`+''
E._sc_imgur = (…a)=>{ t ← φ`/tmp/sc_${rand_id(9)}.png`; _sc(…a,t); _alert("uploading to imgur","...",1.5); ι ← _imgur(t); browser(ι); p(googl(ι)+'#imgur'); shᵥ`rm ${t}` }
E.googl = ι=> JSON.parse(shᵥ`curl -s ${'https://www.googleapis.com/urlshortener/v1/url?key='+φ`~/.auth/googl`.text.trim()} -H 'Content-Type: application/json' -d ${JSON.stringify({longUrl:ι})}`+'').id
E.keep_alive = prog=>{
	Label ← 'local.'+φ(prog).name
	t ← φ`~/Library/LaunchAgents/${Label}.plist`
	t.text = npm('plist@2.0.1').build({Label, KeepAlive:true, ProgramArguments:['sh','-c',sh`export PATH=${process.env.PATH}; ${prog}`]})
	shᵥ`launchctl unload ${t} &>/dev/null; launchctl load ${t}`
	}
}

// ----------------------------- metaprogramming ---------------------------- //
P(()=>0?0:{ 'RegExp.prototype.λ':λ(ι){↩ ι===undefined || ι===null? null : ι.match(@) } })
P(()=>0?0:{ 'RegExp.prototype.g':{get(){↩ RegExp(@.source,@.flags+'g')}} })
P(()=>0?0:{ 'RegExp.prototype.i':{get(){↩ RegExp(@.source,@.flags+'i')}} })
P(()=>0?0:{ 'RegExp.prototype.m':{get(){↩ RegExp(@.source,@.flags+'m')}} })
// --- metaprogramming → runtime macros built on top of template literals --- //
is_template ← (ss,ιs)=> Tarr(ss.raw) && ss.raw.length-1 === ιs.length
tmpl_flatten ← (raw2,ιs2)=> _.zip(raw2,ιs2)._.flatten(true).slice(0,-1).filter(ι=> ι!=='')
simple_template ← λ(ss,ιs,filter){ is_template(ss,ιs) || ‽
	falsy ← ι=> ι===null||ι===undefined||ι===false
	if (Tarr(filter)){ var [root,join] = filter; filter = ι=> Tarr(ι)? ι.map(ι=> root`${ι}`).join(join) : falsy(ι)? '' : undefined }
	filter_special ← ι=> falsy(ι)? '' : ι+''
	ι ← tmpl_flatten( ss.raw.map(ι=> ι.replace(/\\(?=\$\{|`)/g,'')), ιs.map(ι=>0?0:{raw:ι}) )
	for(i←0;i<ι.length-1;i++) if (Tstr(ι[i]) && !Tstr(ι[i+1])) ι[i] = ι[i].replace(/…$/,λ(){ ι[i+1] = filter_special(ι[i+1].raw); i++; ↩ '' })
	filter && (ι = ι.map(λ(ι){t←; ↩ Tstr(ι)? ι : (t=filter(ι.raw), t===undefined? ι : t) }))
	↩ ι}
E.easy_template = (λ(){
	read ← (ss,ιs)=> tmpl_flatten(ss.raw,ιs.map(ι=>[ι]))
	show ← λ(ι){ raw ← ['']; ιs ← []; ι.forEach(ι=> Tstr(ι)? raw[-1]+=ι : (ιs.push(ι), raw.push('')) ); ↩ [{raw},…ιs] }
	↩ f=> (ss,…ιs)=> f(read(ss,ιs),show)
	})()
E.JSON_pretty = λ(ι,replacer){
	seen ← []
	T ← '  ' // tab
	wrap_width ← 140
	indent_show ← ι=> show(ι).replace(/\n/g,'\n'+T)
	show ← λ(ι){t←;
		if (ι===undefined||ι===null) ↩ 'null'
		replacer && (ι = replacer(ι))
		while (ι.toJSON) ι = ι.toJSON()
		switch (typeof(ι)==='object'? Object.prototype.toString.call(ι) : typeof(ι)) {
			case 'string': case '[object String]': ↩ JSON.stringify(ι)
			case 'boolean': case '[object Boolean]': case 'number': case '[object Number]': ↩ ι+''
			case 'function': ↩ 'null'
			default:
				if (seen.indexOf(ι) !== -1) throw TypeError('Converting circular structure to JSON')
				seen.push(ι)
				if (Tarr(ι)) { var [a,b] = '[]'; ι = ι.map(indent_show); for (i←0;i<ι.length;i++) ι[i]===undefined && (ι[i] = 'null') }
				else { var [a,b] = '{}'; ι = ι._.pairs().filter(ι=> !(ι[1]===undefined || Tfun(ι[1]))).map(ι=> show(ι[0])+': '+indent_show(ι[1])) }
				seen.pop()
				↩ (t=a+ι.join(', ')+b).length <= wrap_width? t : a+'\n'+T+ι.join(',\n'+T)+'\n'+b
				} }
	↩ show(ι)}

E.re = λ(ss,…ιs){ι ← simple_template(ss,ιs,[(…a)=>re(…a).source,'']); ENC ← ι=> (ι+'').replace(/([.*+?^=!:${}()\[\]|\\])/g, '\\$1'); ↩ RegExp(ι.map(ι=> !Tstr(ι)? ENC(ι.raw) : ι).join(''),'u')}
P(()=>0?0:{ 'String.prototype.re':{get(){↩ (ss,…ιs)=> @.match(re(ss,…ιs))}} })
E.sh = λ(ss,…ιs){ENC ← ι=> "'"+(ι+'').replace(/'/g,"'\\''")+"'"; ↩ simple_template(ss,ιs,[sh,' ']).map(ι=> !Tstr(ι)? ENC(ι.raw) : ι).join('')}
if (!BROWSERP) E.shᵥ = λ(ss,…ιs){ι ← sh(ss,…ιs); ι = child_process.execSync(ι); ι.toString = λ(…a){ι ← Buffer.prototype.toString.call(@,…a); ↩ a.length===0? ι.replace(/\n$/,'') : ι}; ↩ ι} //! ? should throw exception if exit code ≠ 0
_osa ← { // based on https://github.com/FWeinb/node-osascript/blob/master/lib/osa-parser.peg
	read: λ(ι){ι+=''; try {↩ {'missing value':1,'':1}[ι.trim()]? undefined : JSON.parse(ι.split(/("(?:\\[^]|[^])*?")/g).map(λ(ι){↩ /^"[^]*"$/.λ(ι.replace(/\n$/,''))? ι.replace(/\n$/,'').replace(/\n/g,'\\n').replace(/\t/g,'\\t') : ι.replace(/\{/g,'[').replace(/\}/g,']')}).join(''))} catch (e) {↩ {error:ι}}},
	show: ι=> Tnum(ι)? ι+'' : Tstr(ι)? '"'+ι.replace(/["\\]/g,'\\$&')+'"' : ‽,
	}
E.osa = λ(ss,…ιs){t←;
	ι ← simple_template(ss,ιs)
	//! jesus this is a mess
	if (Tstr(ι[0]) && (t=ι[0].re`^(?!tell )([\w ]+):`)) {ι[0] = ι[0].slice(t[0].length); ι = [osa`tell app ${t[1]};`, …ι, '; end tell']}
	if (!Tstr(ι[0]) && Tstr(ι[0].raw) && ι[0].raw.re`^[\w ]+$` && Tstr(ι[1]) && (t=ι[1].re`^ *:`)){ ι[1] = ι[1].slice(t[0].length); ι = [osa`tell app ${ι.shift().raw};`, …ι, '; end tell'] }
	↩ ι.map(ι=> !Tstr(ι)? _osa.show(ι.raw) : ι.replace(/;/g,'\n')).join('') }
if (!BROWSERP) E.osaᵥ = λ(ss,…ιs){ ι ← osa(ss,…ιs); ↩ _osa.read(shᵥ`osascript -ss -e ${ι}`) }
if (!BROWSERP) E.terminal_do_script = λ(a,b){ φ`/tmp/__·`.ι = a; osaᵥ`terminal: do script "·" …${b}` }
E.chrome_simple_osaᵥ = (ι,tab)=> osaᵥ`chrome: execute window 1's …${tab} javascript ${ζ_compile(ι)}`
E.chrome_simple_js_ᵥ = (ι,tab)=> osaᵥ`chrome: tell window 1's …${tab} to set URL to ${'javascript:'+ζ_compile(ι)}`
// E.chromeᵥ = ‡ not actually used ‡ wait, nope, is actually used, but mostly in one-off scripts
	// λ(ι,tab){tab = tab!==undefined? 'tab '+(tab+1) : 'active tab'
	// 	// E.chrome_$ᵥ = λ(ι,tab){r←; $null ← '__$null_'+rand_id(10); fst ← 1; while ((r=chromeᵥ("if (window.jQuery){"+ι+"} else {"+(fst? (fst=0, "t ← document.createElement('script'); t.src = 'https://code.jquery.com/jquery-2.1.4.min.js'; document.getElementsByTagName('head')[0].appendChild(t)") : "")+"; '"+$null+"'}",tab))===$null); ↩ r}
	// // probably add a rand_id(10) call to '#applescript_hack'
	// 	t ← "t ← document.querySelectorAll('#applescript_hack')[0]; t && t.parentNode.removeChild(t); ι ← (0,eval)("+JSON.stringify(ζ_compile(ι))+"); t ← document.createElement('div'); t.id = 'applescript_hack'; t.style = 'display:none;'; t.textContent = JSON.stringify(ι); t2 ← document.querySelectorAll('head')[0]; t2.insertBefore(t,t2.firstChild); undefined"
	//	chrome_simple_js_ᵥ(t,tab)
	// 	t ← "document.querySelectorAll('#applescript_hack')[0].textContent"
	// 	↩ JSON.parse(chrome_simple_osaᵥ(t,tab) || '""') }
if (!BROWSERP) E.sublᵥ = λ(ss,…ιs){
	ENC ← JSON.stringify; ι ← simple_template(ss,ιs).map(ι=> !Tstr(ι)? ENC(ι.raw) : ι).join('')
	t ← JSON.parse(fs_ipc.emit(34289,ι)); t===null && (t = undefined); ↩ t }
if (!BROWSERP) def(E,'φ',λ(){
	ENC ← ι=> ι.re`/`? ι.replace(/[\/%]/g, encodeURIComponent.X) : ι
	φ['⁻¹'] = ι=> /%2F/i.λ(ι)? ι.replace(/%2[F5]/gi, decodeURIComponent.X) : ι

	existsSync ← λ(ι){ try{fs.accessSync(ι); ↩ true} catch(e){↩ false} }
	mkdir_p ← λ Λ(ι){ try{fs.mkdirSync(ι)} catch(e){if (e.code==='EEXIST'||e.code==='EISDIR') ↩; t ← path.dirname(ι); if (e.code!=='ENOENT' || ι===t) throw e; Λ(t); fs.mkdirSync(ι)} }
	// walk ← λ*(root,files){root += '/'
	// 	walk_ ← λ*(ι){try {l ← fs.readdirSync(root+ι); for (i←0;i<l.length;i++){t ← ι+l[i]; try {fs.statSync(root+t).isDirectory()? (yield root+t, yield* walk_(t+'/')) : (files && (yield root+t))} catch (e) {}}} catch (e) {}}
	// 	yield* walk_('') }
	read_file ← λ(ι){ try{↩ fs.readFileSync(ι)} catch(e){if (!(e.code==='ENOENT')) throw e} }
	ensure_exists ← λ(ι,ifdne){ existsSync(ι) || ( mkdir_p(path.resolve(path.dirname(ι))) , fs.writeFileSync(ι,ifdne) ) }
	write_file ← λ(ι,data){ try{fs.writeFileSync(ι,data)} catch(e){if (!(e.code==='ENOENT')) throw e; ensure_exists(ι,data)} }
	open ← λ(ι,ifdne,f){
		ensure_exists(ι,ifdne); Lc ← new Φ(ι).size
		fd ← fs.openSync(ι,'r+'); f({
			get L(){↩ Lc},
			read(i,L){t ← Buffer(L); fs.readSync(fd,t,0,L,i) === L || ‽; ↩ t},
			write(ι,i){L ← fs.writeSync(fd,ι,i); Lc = max(Lc, L+i)},
			truncate(L){fs.ftruncateSync(fd,L); Lc = min(Lc,L)},
			indexOf_skipping(from,to,step,find,skip){fl←@
				if (from<0) from += fl.L; if (to<0) to += fl.L; from = min(max(0, from ),fl.L-1); to = min(max(-1, to ),fl.L)
				if (!(step===-1 && from>to)) ‽('TODO')
				d ← fl.read(to+1,from-to)
				for(i←from;i>to;i+=step) {if (d[i-(to+1)]===find) ↩ i; else if (String.fromCharCode(d[i-(to+1)]).match(skip)); else ↩ null}
				},
			}); fs.closeSync(fd)}
	globmatch ← (glob,ι)=> re`^…${glob._.map(ι=> ι==='*'? '.*' : re`${ι}`.source).join('')}$`.λ(ι)
	def(φ,'cwd',{get(){↩ new Φ(process.cwd()) }, set(ι){ t ← φ(ι+'')._ι; mkdir_p(t); process.chdir(t) }})

	normHs ← λ(ι){if (ι._.isEqual(['~'])) ↩ [process.env.HOME]; Tstr(ι[0]) && (ι[0] = ι[0].replace(/^~(?=\/)/,process.env.HOME)); ↩ ι}
	λ Φ(ι){@._ι = ι}; Φ.prototype = {
		φ,
		toString(){↩ @._ι },
		toJSON(){↩ {type:'φ', ι:@._ι} },
		inspect(ˣ,opts){↩ opts.stylize('φ','special')+opts.stylize(util.inspect(@._ι.replace(re`^${process.env.HOME}(?=/|$)`,'~')).replace(/^'|'$/g,'`'),'string') },
		get size(){↩ fs.statSync(@._ι).size },
		get nlink(){↩ fs.statSync(@._ι).nlink },
		get mtime(){↩ fs.statSync(@._ι).mtime },
		get birthtime(){↩ fs.statSync(@._ι).birthtime },
		get url(){↩ encodeURI('file:'+@.root('/'))}, //! should this be part of root
		get is_dir(){ try{↩ fs.statSync(@._ι).isDirectory() }catch(e){↩ false } },
		get name(){↩ path.basename(@._ι) },
		BAD_exists(){↩ existsSync(@._ι) },
		root(x){switch(arguments.length){default: ‽
			case 0: ↩ @._ι[0]==='/'? '/' : '.'
			case 1: ↩ new Φ( x==='/'? path.resolve(@._ι) : x==='.'? path.relative(x,@._ι) : ‽('not yet implemented: nonstandard roots') )
			}},

		// get ι(){↩},
		set ι(ι){
			if (@.is_dir) ‽('TODO')
			if (ι == null) {try{fs.unlinkSync(@._ι)} catch(e){}; ↩}
			e ← path.extname(@._ι)
			if (e==='.csv') {@.csv = ι; ↩}
			ι = e==='.json'? JSON_pretty(ι) :
				Tstr(ι)? ι :
				e==='.xml'? npm('xmlbuilder@4.2.1').create(ι).end({pretty:true}) :
					JSON_pretty(ι)
			write_file(@._ι,ι) },
		get buf(){↩ read_file(@._ι) || Buffer(0) },
		set buf(ι){ write_file(@._ι,ι) },
		get base64(){↩ Buffer(@.text,'base64') },
		// set base64(ι){},
		get text(){↩ (read_file(@._ι) || '')+'' },
		set text(ι){ write_file(@._ι,ι) },
		get lines(){↩ λ(…ιs){
			d ← ((read_file(@._ι)||'\n')+'').replace(/\n$/,'').split('\n')
			if (ιs.length > 1) ↩ ιs.map(ι=> Tnum(ι)? d[ι] : d.slice(parseInt(/^(\d+):$/.λ(ι)[1])).join('\n')+'\n')
			else if (ιs.length === 0){
				↩ {
					map(…a){↩ d.map(…a)},
					} }
			else ‽('TODO')
			}},
		set lines(ι){ write_file(@._ι, ι.join('\n')+'\n') },
		get json(){↩ JSON.parse(read_file(@._ι) || 'null') },
		set json(ι){ write_file(@._ι, JSON_pretty(ι)) },
		get json2(){ι ← @.json; (λ Λ(ι,k,o){if (ι.type==='Buffer') {
			o[k] = 'data' in ι || 'utf8' in ι? Buffer(ι.data||ι.utf8) : 'base64' in ι? Buffer(ι.base64,'base64') : ‽
			} else if (!Tprim(ι)) _(ι).forEach(Λ)})(ι); ↩ ι},
		set json2(ι){
			@.text = JSON_pretty(ι,λ(ι){t←;
			if (Buffer.isBuffer(ι)) ↩ ι.equals(Buffer(t=ι+''))? {type:'Buffer', utf8:t} : {type:'Buffer', base64:ι.toString('base64')}
			↩ ι})},
		get ini(){↩ npm('ini@1.3.4').parse(@.text) },
		// set ini(ι){},
		// get csv(){↩},
		set csv(ι){t ← φ`/tmp/csv_${rand_id(25)}`; t.json = ι; shᵥ`ζ ${`npm('csv@0.4.6').stringify(φ(a0).json,λ(e,ι){φ(a1).buf = ι})`} ${t+''} ${@.root('/')+''}`},
		get json_array__synchronized(){↩ λ(…ιs){_ι←@._ι
			if (ιs.length) ‽('TODO')
			d ← JSON.parse((read_file(_ι)||'[]')+'')
			↩ {
			get length(){↩ d.length},
			push(…a){a.map(λ(ι){
				d.push(ι)
				open(_ι,'[]',λ(fl){
					i ← fl.indexOf_skipping(-1,-1e4,-1,']'.charCodeAt(),/[ \n\t]/) || ‽('bad file')
					is_0 ← fl.indexOf_skipping(i-1,-1e4,-1,'['.charCodeAt(),/[ \n\t]/)!==null
					fl.write((is_0?'':',')+JSON.stringify(ι,null,'  ')+']',i)
					})
				})},
			filter(f){↩ d._.filter(f)},
			} }},
		}
	λ Φs(ι){@._ι = ι}; Φs.prototype = {
		inspect(ˣ,opts){↩ opts.stylize('φ','special')+util.inspect(@._ι,opts)},
		get name_TMP(){↩ @._ι.map(ι=> new Φ(ι).name)}, // fs.readdirSync
		get φs(){↩ @._ι.map(ι=> new Φ(ι))}, // [φ]
		}
	λ φ(ss,…ιs){
		head ← @ instanceof Φ && @._ι
		if (@ instanceof Φs) ‽('not yet implemented')
		tmpl ← is_template(ss,ιs)
		if (tmpl){ι ← simple_template(ss,ιs,[φ,'/']); if (ι.filter(Tstr).join('').re`\*|\{[^}]*?,`) {
			if (ι.length > 1) ‽('not yet implemented * ** ${}'+util.inspect(ι))
			ι = normHs(ι)
			ι = ι[0]
			if (ι.includes('**')) ‽('not yet implemented ** ${}'+util.inspect(ι))
			r ← ['.']
			if (ι[0]==='/') r = ['/']
			ι.split('/').forEach(λ(ι){
				if (ι==='')↩;
				r = r.mapcat(λ(r){
					if (ι === '.') ↩ [r]
					if (ι === '..') ↩ [r==='.'? '..' : r.split('/').every(ι=>ι==='..')? r+'/..' : path.dirname(r)]
					↩ fs.readdirSync(r).filter(b=> globmatch(ι,b)).map(b=> r+'/'+b)
					})
				})
			↩ new Φs(r) } }
		else {ι ← ss; if (ιs.length || Tarr(ι)) ‽('not yet implemented'); if (ι instanceof Φs) ‽('not yet implemented')}
		if (tmpl){ι = normHs(ι).map(ι=> !Tstr(ι)? ENC(ι.raw+'') : ι).join('')}
		else if (ι instanceof Φ){↩ head && ι._ι[0]!=='/'? new Φ(head+'/'+ι._ι) : ι}
		else {ι = (ι+'').replace(/^~(?=\/|$)/,process.env.HOME)}
		↩ new Φ(path.normalize(head? head+'/'+ι : ι).replace(/(?!^)\/$/,'')) }
	↩ φ})
// ---------------------------------- main ---------------------------------- //
sh_ify ← ι=> ι===undefined? '' : Tstr(ι)? ι : Tbool(ι)? (process.exitCode = ι?0:1, '') : (λ(){ try{↩ JSON.stringify(ι) }catch(e){↩ ι+'' } })()
eval_ ← λ ᵃΘΛᴳᶜjεᴺ(ι){ 
	try{ try{ new vm.Script(ι); ↩ (0,eval)(ι) }catch(e){ if (!(e.name==='SyntaxError' && e.message==='Illegal return statement')) throw e; ↩ (0,eval)('(λ(){'+ι+'})()') } }
	catch(e){ e!==undefined && e!==null && Tstr(e.stack) && (e.stack = e.stack.replace(/at eval \(eval at ᵃΘΛᴳᶜjεᴺ[^]*/,'at <eval>')); throw e }
	}
E.ζ_main = λ(){
	argv ← process.argv
	argv[0] = 'ζ'
	argv[2]==='--fresh' && argv.splice(2,1)
	if (argv.length===2){ argv[1] = '<repl>'; global.rl = ζ_repl_start() }
	else if (φ(argv[2]).BAD_exists() || argv[2].re`^\.?/`){ argv.splice(1,1); t ← φ(argv[1]).root('/')+''; o←Module._cache;m←Module._resolveFilename(t,null,true);oι←o[m]; o[m] = undefined; Module._load(t,null,true); o[m] = oι }
	else { argv[1] = '<eval>'
		global.require = require; global.code = argv[2]; global.a = argv.slice(3); global.ι = a[0]; a.map((ι,i)=> global['a'+i] = ι)
		use_r ← !code.re`;\s*$`; r ← eval_(ζ_compile(code)); use_r && process.stdout.write(sh_ify(r)) }
	}

// ---------------------- finish local metaprogramming ---------------------- //
prop_assign(E,global)
patched ← new WeakSet().add(global) //! should actually use Symbols to cross realms correctly?
module.exports = λ(to){patched.has(to) || (cn.log('\x1b[34m[ζ]\x1b[0m patching'), cn.log(Error('<stack>').stack), patched.add(to), prop_assign(E,to), patches.forEach(ι=> ι(to)))}

// -------------------------------- call main ------------------------------- //
if (!module.parent) E.ζ_main()

// ------------------ really important remaining work for φ ----------------- //
/*
formats include
	image               
	pixels              
	png                 .png
	jpg                 .jpg
	plist               /^<\?xml / && /<\/plist>\s*$/           read: npm::plist.parse(it)     show: npm::plist.build(it)
	xml                 .xml || /^<\?xml /
	base64              .64
	pixels (grey)       
	stdin               fd:0
	FIFO                fd:0...
	:executable         ,/^#!/ | try{fs.accessSync(ι,fs.X_OK); ↩ true} catch(e){↩ false}
	directory relative
	directory absolute
formats are Really stream formats
the formats are complicated to interact with, because
* GET POST PUT have really tangly apis for all sorts of efficiency concerns
* DELETE especially, we want to make some distinctions to make sure we don’t fuck things up accidentally (although trash could help)

// paths can have extensions, which are often meaningful. (basename/filename, ext/suffix. path.basename,dirname,extname)

// we need to be careful with non-atomic transactions
// we need to think about how this interacts with concurrency
// we need to think about how this interacts with distributed machines (e.g. mixing file and http URLs)
// 	“like, it should be caching urls all the time.”

// --------------------- things i need ** globbing to do -------------------- //
scratch/scratch.txt:107:φ`**`.map(ι=> [ι+'',ι.get()])._.groupBy(1)._.values().map(ι=> ι._.map(0)).filter(ι=> ι.length > 1)
scratch/sublime/index.ζ:60:	φ(arg.in).φ`**`.filter(ι=> !ι.dir()).map(λ(ι){ι+=''; t←; ι = ι.slice(arg.in.length).replace(/^\//,'')
scratch/sublime/index.ζ:66:	out ← φ(arg.out).φ`**`.filter(λ(ι){ι+=''; ↩ roots.some(λ(r){↩ ι.indexOf(r) === 0})}).filter(ι=> !ι.dir()).map(ι=> ι+'')
*/
// ---------------------------------- cruft --------------------------------- //
// 'Function.prototype.at':lazy('at',λ(){priorityqueuejs ← require('priorityqueuejs')
// 	// https://github.com/Automattic/kue
// 	// https://github.com/rschmukler/agenda
// 	// robust to setTimeout taking extra time
// 	//! not robust to the process failing ! should use redis or something instead !
// 	//! wth is up with the { hrtime() <-> time } comparison
// 	qu ← new priorityqueuejs((a,b)=> b.time-a.time)
// 	P←; ensure ← λ(){if (P) ↩; P = true; (λ Λ(){t←;
// 		qu.size() === 0? (P = false) : qu.peek().time < hrtime()? (t=qu.deq(), t.ι&&t.ι.in(), Λ()/*nxt*/) : Λ.in(0.1)/*poll*/
// 		})() }
// 	↩ λ(time){ t ← {time, ι:@}; ↩ time < hrtime()? (t.ι.in(), λ(){}) : (qu.enq(t), ensure(), λ(){t.ι = null}) } }),
// '(Array|String|Buffer).prototype.windows':λ(L){↩ (@.length-L+1).map(i=> @.slice(i,i+L))},
