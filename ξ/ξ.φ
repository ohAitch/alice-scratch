(ξ/do_s

(ξ/JS_VAR fs (require 'fs'))
(ξ/JS_VAR _ (require 'underscore'))

(ξ/JS_VAR read_ξ (ξ/fn (s) (ξ/do_s
	(return ((. JSON 'parse') s))
)))

(ξ/JS_VAR repr_js (ξ/fn (v) (ξ/do_s
	(return
		(ξ/if_e (ξ/= (typeof (. v 's')) 'string') (. v 's')
		(ξ/if_e (ξ/= (typeof (. v 'v')) 'string') (η/~ (η/~ '"' ((. ((. ((. (. v 'v') 'replace') '\\'
							(η/~ '\\' '\\')
							) 'replace') '"' '\\"') 'replace') '\n' '\\n')) '"')
		(ξ/if_e (ξ/≠ (. v 'v') undefined) (. v 'v')
		(ξ/if_e (ξ/= (. (. v 0) 's') 'ξ/object') (η/~ (η/~ '{' ((. ((. ((. v 'slice') 1) 'map') (ξ/fn (v) (ξ/do_s (return (η/~ (η/~ (repr_js (. v 0)) ':') (repr_js (. v 1))))))) 'join') ',\n\t\t\t')) '}')
		(ξ/if_e (ξ/= (. (. v 0) 's') 'ξ/array') (η/~ (η/~ '[' ((. ((. ((. v 'slice') 1) 'map') repr_js) 'join') ',')) ']')
		(ξ/if_e (ξ/= (. (. v 0) 's') 'ξ/member_bare') (η/~ (η/~ (repr_js (. v 1)) '.') (repr_js (. v 2)))
		(ξ/if_e (ξ/= (. (. v 0) 's') 'ξ/member_val') (η/~ (η/~ (η/~ (repr_js (. v 1)) '[') (repr_js (. v 2))) ']')
		(ξ/if_e (ξ/= (. (. v 0) 's') 'ξ/JS_OR') (η/~ (η/~ (η/~ (η/~ '(' (repr_js (. v 1))) '||') (repr_js (. v 2))) ')')
		(ξ/if_e (ξ/= (. (. v 0) 's') 'ξ/JS_>') (η/~ (η/~ (η/~ (η/~ '(' (repr_js (. v 1))) '>') (repr_js (. v 2))) ')')
		(ξ/if_e (ξ/= (. (. v 0) 's') 'ξ/=') (η/~ (η/~ (η/~ (η/~ '(' (repr_js (. v 1))) '===') (repr_js (. v 2))) ')')
		(ξ/if_e (ξ/= (. (. v 0) 's') 'ξ/≠') (η/~ (η/~ (η/~ (η/~ '(' (repr_js (. v 1))) '!==') (repr_js (. v 2))) ')')
		(ξ/if_e (ξ/= (. (. v 0) 's') 'ξ/assign') (η/~ (η/~ (η/~ (η/~ '(' (repr_js (. v 1))) ' = ') (repr_js (. v 2))) ')')
		(ξ/if_e (ξ/= (. (. v 0) 's') 'ξ/fn') (η/~ (η/~ (η/~ 'function(' ((. ((. (. v 1) 'map') repr_js) 'join') ',')) ')') (repr_js (. v 2)))
		(ξ/if_e (ξ/= (. (. v 0) 's') 'ξ/do_s') (η/~ (η/~ '{' ((. ((. ((. v 'slice') 1) 'map') repr_js) 'join') ';\n\t')) '}')
		(ξ/if_e (ξ/= (. (. v 0) 's') 'ξ/if_e') (η/~ (η/~ (η/~ (η/~ (η/~ (η/~ '(' (repr_js (. v 1))) '? ') (repr_js (. v 2))) ' :\n\t\t') (repr_js (. v 3))) ')')
		(ξ/if_e (ξ/= (. (. v 0) 's') 'ξ/if_s') (η/~ (η/~ (η/~ (η/~ (η/~ 'if (' (repr_js (. v 1))) ') ') (repr_js (. v 2))) '\n\telse ') (repr_js (. v 3)))
		(ξ/if_e (ξ/= (. (. v 0) 's') 'ξ/while_s') (η/~ (η/~ (η/~ 'while (' (repr_js (. v 1))) ') ') (repr_js (. v 2)))
		(ξ/if_e (ξ/= (. (. v 0) 's') 'ξ/JS_VAR') (η/~ (η/~ (η/~ 'var ' (repr_js (. v 1))) ' = ') (repr_js (. v 2)))
		(ξ/if_e (ξ/= (. (. v 0) 's') 'ξ/JS_+') (η/~ (η/~ (η/~ (η/~ '(' (repr_js (. v 1))) '+') (repr_js (. v 2))) ')')
		(ξ/if_e (ξ/= (. (. v 0) 's') 'ξ/JS_instanceof') (η/~ (η/~ (η/~ (η/~ '(' (repr_js (. v 1))) ' instanceof ') (repr_js (. v 2))) ')')
			(η/~ (η/~ (η/~ (repr_js (. v 0)) '(') ((. ((. ((. v 'slice') 1) 'map') repr_js) 'join') ',')) ')')
		))))))))))))))))))))
))))

(ξ/JS_VAR repr_js_file (ξ/fn (v) (ξ/do_s
	(return (η/~ '#!/usr/bin/env node\n' ((. ((. v 'map') repr_js) 'join') '\n')))
)))

(ξ/JS_VAR ξ_f (ξ/fn (in_ out) (ξ/do_s
	((. fs 'writeFileSync') (η/~ (η/~ (η/~ out '/') ((. in_ 'slice') 0 (Number '-2'))) '.js') (repr_js_file (read_ξ (η/~ ((. fs 'readFileSync') in_) ' '))))
)))
(ξ_f (. (. process 'argv') 2) (. (. process 'argv') 3))

)