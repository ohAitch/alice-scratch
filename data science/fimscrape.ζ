#!/usr/bin/env ζ
arg ← { cmd:process.argv[2] }

// ------- settings ------- //
date ← '2016-02-09';    process.argv[1] === '<eval>' && code.replace(/←.*?;/, '← '+util.inspect(Time().ymd)+';')
total_stories ← 314549; process.argv[1] === '<eval>' && code.replace(/←.*?;/, '← '+util.inspect(GET_L('https://www.fimfiction.net/stories/latest').match(/class="story_name" href="\/story\/\d+/g).map(ι => parseInt(ι.match(/\d+/)[0]))._.max() + 3000)+';')
sm_out ← φ`story_meta ${date}.txt`
st_out ← φ`story_text ${date}`

// ------------------------ //
story_meta ← λ(i){
	clean ← λ(ι){
		ι = ι.story
		ι = ι._.pick('id','title','short_description','description','date_modified','author','categories','likes','dislikes','chapters')
		ι.short_description === ι.description && (ι = ι._.omit('short_description'))
		;['short_description','description'].map(λ(m){ι[m] === '' && (ι = ι._.omit(m))})
		ι.likes === -1 && (ι = ι._.omit('likes','dislikes'))
		ι.author = ι.author.id
		ι.categories = ι.categories._.pairs()._.filter(1)._.map(0)
		ι.chapters && (ι.chapters = ι.chapters._.map('id'))
		↩ ι}
	print('fetching story metadata #'+i+'/'+total_stories)
	t ← GET_L('http://www.fimfiction.net/api/story.php?story='+i); ↩ t === '{"error":"Invalid story id"}'? '' : clean(JSON.parse(t))}
C ← story_meta.cache = φ(sm_out).json_array__synchronized()

// ---- story metadata ---- //
if (arg.cmd==='meta'){

while (C.length < total_stories) C.push(story_meta(C.length))
print('<done!>')

}

// ------ story texts ----- //
if (arg.cmd==='text'){

ch_i ← 0
meta ← (λ(){
	t ← C.filter('chapters').map(λ(ι){ι.chapters = ι.chapters.map(ι => [ch_i++,ι])})
	t = t._.indexBy('id'); fs.readdirSync(st_out+'').map(λ(ι){delete t[ι]}); ↩ t._.values()._.sortBy('id').reverse()})()
story_text ← λ(ι){↩ ι.chapters.map(λ(ι){
	print('fetching story chapters #'+ι[0]+'/'+ch_i)
	↩ GET_L('http://www.fimfiction.net/download_chapter.php?chapter='+ι[1])})}
while (meta.length) {t ← meta.pop(); φ(st_out).φ`${t.id}`.json = story_text(t)}
print('<done!>')

}
