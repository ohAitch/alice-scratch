----------------------------------- that game ----------------------------------
secret ← _.shuffle(fs_('google-10000-english-usa.txt').$.split('\n').map(λ(v){↩ v.toLowerCase()}))[0]
guess_a ← ''; guess_b ← '';
all_words_dict ← fs_('/usr/share/dict/words').$.split('\n').map(λ(v){↩ v.toLowerCase()})._.indexBy()
global.__SPECIAL__ = λ(word){word = word.toLowerCase(); print('\x1b[3A\x1b[0E'); if (!all_words_dict[word]) print('"'+word+'" is not a word'); else if ((guess_a && word <= guess_a) || (guess_b && guess_b <= word)) print('<no progress>'); else if (secret < word) {guess_b = word; print('"'+guess_a+'" < secret < "'+guess_b+'"')} else if (word < secret) {guess_a = word; print('"'+guess_a+'" < secret < "'+guess_b+'"')} else print('you are a winner')}
console.log('\n'.repeat(30))

--------------------------- scrape miri publications ---------------------------
// go to https://intelligence.org/all-publications/
// copy this into the console
// results will be in the clipboard
$ = jQuery; copy($('#articles section > .row-fluid').toArray().map(function(v){
	var t = $(v).children().eq(0)
	return [
		t.find('a').attr('href').replace(/^(https:\/\/intelligence.org)?\/?files\//g,"file:///~/papers/"),
		t.hasClass('technical-report')? '#techre' : null,
		t.hasClass('conference-paper')? '#paper' : null,
		t.hasClass('journal-article')? '#article' : null,
		t.hasClass('book-chapter')? '#chapter' : null,
		$(v).find('.HRAD-click').length? '#HRAD' : null,
		$(v).find('.ETAD-click').length? '#ETAD' : null,
		$(v).find('.VL-click').length? '#VL' : null,
		$(v).find('.FC-click').length? '#FC' : null,
		t.text()
			.replace(/\s\s+/g, ' ')
			.replace(/(Berkeley, CA: )?Machine Intelligence Research Institute.{0,8}$/g, '')
			.replace(/ +$/g, '')
			.replace(/Technical [Rr]eport [\d-]+\..*$/g, ''),
		].filter(function(v){return v}).join(' ')
		}).join('\n'))

------------------------------------ git ops -----------------------------------
next time we merge git repos, let us document the steps here

----- split out subfolder ----

this ... breaks on unicode :(

D() { [ -d "$1" ] || mkdir -p "$1"; echo "$1"; }

big_repo=~/ali/github/scratch
subfolder=ζ₀
new_repo=~/ali/github/lang-zeta-zero

cd "$big_repo"
git subtree split -P "$subfolder" -b "$subfolder-only"

cd $(D "$new_repo")
git init
git pull "$big_repo" "$subfolder-only"

cd "$big_repo"
# git rm -rf "$subfolder-only"
git filter-branch --index-filter "git rm -q -r -f --cached --ignore-unmatch ABC" --prune-empty HEAD

rm -rf .git/refs/original/ &&
git reflog expire --all &&
git gc --aggressive --prune=now
git reflog expire --all --expire-unreachable=0
git repack -A -d
git prune

------------------------------ this is pretty cute -----------------------------
//! color names randomly in ansi 12359abc
namegen ← ζ2_gen2fn(λ*(){
	long ← 'bekas cahlo caris cekla dedna dekik emiak eseik gazok gihza girim gumlu halbo hanka henuh kadut kagzi kakki kamor kehul kisar kizak kofur kohig lopra mesat mesip mezid motka nahso nalic nirsu omiac radil ratis repgi resra rukan siral sorzo tarak tilke zalsi zehaz zekhu zeluz zephu zifin zirez zohip zokmi zonri zusci'.split(' ')
	short ← 'ake bek cah cek dek din emi esi faz gaz gih gir gum hal han kad kag kam keh ket kis kiz kob koh kot lop mez mot nal nir oki omi rad rar sar tar tus zal zar zeh zek zel zep zif zok zon zus'.split(' ')
	short = _.shuffle(short.ζ2_mapcat(λ(v){↩ _.range(10).map(λ(i){↩ v+' '+i})}))
	to ← round(long.length/2); yield* _.shuffle(long.concat(short.slice(0,to))); yield* short.slice(to)
	c ← {}; for(;;){t ← '#'+Math.random().toString(36).slice(2,6); if (c[t]) continue; yield (c[t]=1, t)} })

-------------------------------------- ocr -------------------------------------
# 0 requests remaining on alice0meta@gmail.com
# 48 requests remaining on sparkleshy@gmail.com @ KqsDmZ77kW
do_it() { curl -X POST http://api.ocrapiservice.com/1.0/rest/ocr -F 'apikey=KqsDmZ77kW' -F 'language=en' -F "image=@$1" > "${1%.*}.txt"; }

pdf_to_image() { convert -verbose -density 150 -trim "$1" -quality 100 -sharpen 0x1.0 "${1%.*}.png"; }

-------------- start of playing with http://minesweeperonline.com/ ------------- */

rand = function(a,b){return arguments.length === 0? Math.random() : arguments.length === 1? Math.floor(rand()*a) : rand(b-a)+a}
click = function(x,y){y=x[1];x=x[0]; $('#'+(y+1)+'_'+(x+1)).trigger($.Event("mouseup",{button:0}))}
S = function(x,y){y=x[1];x=x[0]; if (!(0<=x&&x<X && 0<=y&&y<Y)) return undefined; var t = $('#'+(y+1)+'_'+(x+1)).attr('class').match(/(?:blank|open(\d))$/); return t && t[1]? parseInt(t[1]) : undefined}
_ = {
	range:function(a,b){if (arguments.length === 1) {b = a; a = 0}; var r = []; for (var i=a;i<b;i++) r.push(i); return r},
	shuffle: function(o){for(var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x); return o},
	}
adj = [[-1,-1],[-1,0],[-1,1],[0,-1],[0,1],[1,-1],[1,0],[1,1]]

X = 30; Y = 16
sqs = _.shuffle([].concat.apply([],_.range(X).map(function(x){return _.range(Y).map(function(y){return [x,y]})})))

think = function(){
	var r = _.range(X).map(function(){return _.range(Y).map(function(){})})
	var V = function(x,y){y=x[1];x=x[0]; return 0<=x&&x<X && 0<=y&&y<Y? r[x][y] : false}
	for(;;){
		var change = false
		for (var x=0;x<X;x++) for (var y=0;y<Y;y++) {
			if (S([x,y]) != null) continue;
			if (r[x][y] != null) continue;
			var t = adj.some(function(o){
				var v = [x+o[0],y+o[1]]
				if (S(v) != null && adj.filter(function(o){var u = [v[0]+o[0],v[1]+o[1]]; return S(u) == null}).length === S(v))
					return true })
			if (t) {r[x][y] = true; change = true}

			if (r[x][y] != null) continue;
			var t = adj.some(function(o){
				var v = [x+o[0],y+o[1]]
				if (S(v) != null && adj.filter(function(o){var u = [v[0]+o[0],v[1]+o[1]]; return V(u) == true}).length === S(v))
					return true })
			if (t) {r[x][y] = false; change = true}
		}
		if (!change) break}
	return V}

main_loop = setInterval(function(){var t;
	if (!$('.facedead').length) {
		if (sqs.every(function(v){return S(v) == null})) {click([rand(X),rand(Y)]); return}
		var V = think()
		if (t = sqs.filter(function(v){return V(v) === false && S(v) == null})[0]) {click(t); return}
		// if (t = sqs.filter(function(v){return V(v) == null   && S(v) == null})[0]) {click(t); return}
	}
	console.log('dunno what to do'); return
},0)
