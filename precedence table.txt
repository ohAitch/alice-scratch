15	→ group			\[…*\] (…*) {…*} \‹…*\›
14	x lex-like		.\.. ; λ…* newΣ
13	← λ				λ…*
// continue from here
12	← tight			\[ ( { \‹ .\.. .−\[ .−( .‹₀₁₂ᵢₐ› // .++ .--
11	← new			new..
10	→ prefix		¬−. ↔-−. // ↔+−.
9	← mul			.*. ./. .%. // % is temporary
8	← add			.+. .-.
7	← bitwise		
6	← cmp 			.isa. .in. .¬in.
5	→ cmp-chained	.=. .≠. .<. .>. .≤. .≥.
4	← logical		.&. .\|. // maybe && || and or ?
3	→ if-infix		.?.:.
2	→ statement		.←. .←!. .+=. λ.. if.:?.,?[else.]? while.:?. return.? try.,?[catch.,?]?[finally.]? // bah, throw(?) -= *= /= &= |=
1	→ quote			`. ~. ~@.
0	x separator		, :

original:

tight					….…	…(…)	…[…]	new …(…)	…++	…--
prefix					+…	-…	¬…	bit~…	typeof …
mul						*	/
add						+	-
bitwise					bit|	bit^	bit&	bit>>>	bit>>	bit<<
comparison, asymmetric	isa	in	¬in
comparison, pythonic	=	≠	<	>	≤	≥
logical					&	|
conditional				…?…:…
assignment				←	←!	+=	-=	*=	/=	&=	|=	bit<<=	bit>>=	bit>>>=	bit&=	bit^=	bit|=
statement				delete …	yield …