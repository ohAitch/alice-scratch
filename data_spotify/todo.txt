# think about that and figure out what we want to do with this
	# > implement track adding and removing
	# > implement tags
	# > implement easy tag querying (e621.net? sql? ask google about this)
	# 	track: ?name? [
	# 		by:<artist>
	# 		in:<album>
	# 		is:local
	# 		[playlist]
	# 		]
	# > 	aaaaaa tracks.map(λ(v){v=v._.clone();v.tags=v.tags._.without('p.i.l.t.'); ↩v}).filter(λ(v){↩ v.tags.‖ > 1}).map(λ(v){↩ [v.name, …v.tags].join('    ')})
	> 	i want to say:
	# > 		# god i don't know. i'm sad.
	> 		tracks where createTime * 0 group max size > 1
	> 		tracks in some backup and not in latest backup
	# >		@2016-08-04 oh, it's easy
	>			remove duplicate tracks in all of my playlists (expected behavior: removing the ones with later creation dates)
	>			for playlists, tracks order:create_time group:id / size > 1 * { [1:] remove }
	>			for playlists, tracks order:date group:id / size > 1 * { [1:] remove }
	>			for playlists, tracks order:date group / size > 1 * { [1:] remove }
	>			for playlists, tracks order:date uniq!
	>			for playlists, tracks order:date uniq!:id

split playlist by is_✓

########## 2017-11 more recent #########
spotify '1 heap'.add(heap.tracks.filter(saved))
