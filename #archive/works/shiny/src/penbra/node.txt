(ns penbra.node
  (:refer-clojure :exclude [print file-seq])
  (:use rainboom)
  (:use [clojure.walk]))

(defprotocol NodeProtocol
  (update-state [n f])
  (update-nodes [n f])
  (update-callbacks [n f])
  (update-region [n f])
  (update- [n event args]))

(deftype Node [state callbacks region nodes]
  clojure.lang.IPersistentMap
  NodeProtocol
  (update-state [this f] (update-in this [:state] f))
  (update-nodes [this f] (update-in this [:nodes] f))
  (update-callbacks [this f] (update-in this [:callbacks] f))
  (update-region [this f] (update-in this [:region] f))
  (update- [this event args] (apply (callbacks event) (list* this args))))

(defn update [node event & args]
  (update- node event args))
