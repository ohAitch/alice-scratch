logging is wrong
let's. fix that.
uh

log purposes
programs run
would like to see their history
logs are comments that emit data every time they're executed, formatted in a few different possible architecture ontologies
if you only logged preconditions and postconditions, then at least some of your code would be formatted in the architecture of your logging ontology
which is what ~testing~ is about
"code by contract"
its cute but their contracts suck
im trying to build a contract -> code inference system

service a data collection endpoint by defining a filename and possibly reading its Î”s


the only log destination is @local
i mean, @log is built on @local. usually. it's @log. it could be built on @local. if it was it probably would be [@local @log ]

uh
logs are messages to the administrator
logs can be of
error: administrator, read me
error: don't forget me if the administrator wants to look
warn: don't forget me if the administrator wants to look
info: 

# { error: 0, warn: 1, info: 2, verbose: 3, debug: 4, silly: 5 }

logging destinations:
@admin
@user
@local

with requests:
get_attention_on(<days)
get_attention_on(<minutes)
get_attention_on(etc)

npm does
error: @user get_attention_on <minutes
warn: @user get_attention_on <days
info: encode history with an ontology of the first n high-level bits of the program's architecture
verb: encode history with an ontology of all of the major actions taken by the program
sill: encode history with an ontology of all of the program's key data
